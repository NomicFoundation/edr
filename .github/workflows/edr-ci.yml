name: EDR

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/edr.yml"
      - "rust-toolchain"
      - "Cargo.lock"
      - "Cargo.toml"
      - "crates/**"
  pull_request:
    branches:
      - "**"
    paths:
      - ".github/workflows/edr.yml"
      - "rust-toolchain"
      - "Cargo.lock"
      - "Cargo.toml"
      - "crates/**"
  workflow_dispatch:

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  check-edr:
    name: Check EDR
    runs-on: ubuntu-latest
    # Setting RUSTFLAGS env for clippy makes it not include custom rules
    env:
      RUSTFLAGS: -Dwarnings
      RUSTDOCFLAGS: "-D warnings"
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      # Install pre-built binaries for cargo hack
      - uses: taiki-e/install-action@cargo-hack

      - uses: Swatinem/rust-cache@v2

      - name: Cargo check no default features for all crates
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --no-default-features

      - name: Cargo hack for EDR crates
        run: |
          chmod +x ./.github/scripts/cargo-hack-edr.sh
          ./.github/scripts/cargo-hack-edr.sh
        shell: bash

  test-edr-rs:
    name: Test EDR (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    needs: check-edr
    strategy:
      fail-fast: false
      matrix:
        os: [ "ubuntu-latest", "macos-latest" ]
        include:
          - RUSTFLAGS: "-Dwarnings"
          - os: "windows-latest"
            RUSTFLAGS: "-Dwarnings -Ctarget-feature=+crt-static"
    steps:
      - uses: actions/checkout@v3

      - name: Install Rust (stable)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Cache EDR RPC cache
        uses: actions/cache@v2
        with:
          path: |
            **/edr-cache
          key: edr-rs-rpc-cache-v1

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: ${{ matrix.RUSTFLAGS }}
          ALCHEMY_URL: ${{ secrets.ALCHEMY_URL }}
          INFURA_URL: ${{ secrets.INFURA_URL }}
        with:
          command: test
          args: --workspace --all-targets --all-features

      - name: Doctests
        uses: actions-rs/cargo@v1
        env:
          RUSTFLAGS: ${{ matrix.RUSTFLAGS }}
        with:
          command: test
          args: --doc --workspace --features tracing

      # disable until:
      # 1) https://github.com/napi-rs/napi-rs/issues/1405 is resolved (Windows-only)
      # 2) https://github.com/nextest-rs/nextest/issues/871 (all platforms)
      # when re-enabled, remove "Run cargo test"

      # Nextest
      # - name: Install latest nextest release
      #   uses: taiki-e/install-action@nextest

      # - name: Test with latest nextest release
      #   uses: actions-rs/cargo@v1
      #   env:
      #     RUSTFLAGS: ${{ matrix.RUSTFLAGS }}
      #     CARGO_INCREMENTAL: ${{ matrix.CARGO_INCREMENTAL }}
      #     ALCHEMY_URL: ${{ secrets.ALCHEMY_URL }}
      #   with:
      #     command: nextest
      #     args: run --workspace --all-features --all-targets

  edr-style:
    name: Check EDR Style
    runs-on: ubuntu-latest
    needs: check-edr
    steps:
      - uses: actions/checkout@v3

      - name: Install nightly rustfmt
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          components: rustfmt

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true
          components: clippy

      - uses: Swatinem/rust-cache@v2

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: fmt
          args: --all --check

      - name: Run cargo clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  edr-docs:
    name: Build EDR Docs
    runs-on: ubuntu-latest
    needs: check-edr
    steps:
      - uses: actions/checkout@v3

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          override: true

      - uses: Swatinem/rust-cache@v2

      - name: Cargo doc
        run: |
          chmod +x ./.github/scripts/cargo-doc.sh
          ./.github/scripts/cargo-doc.sh
        shell: bash

  prettier:
    name: Run Prettier
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - name: Install Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
          cache: pnpm

      - name: Install package
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Run prettier
        run: pnpm run prettier
