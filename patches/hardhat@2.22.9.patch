diff --git a/internal/cli/cli.js b/internal/cli/cli.js
index f9685a044fb7d7f46cc62218ff33890b4af797c1..aec10f7fa6793230c17141fdb2048aa68f2fe9a6 100644
--- a/internal/cli/cli.js
+++ b/internal/cli/cli.js
@@ -166,7 +166,7 @@ async function main() {
         const providerExtenders = ctx.providerExtenders;
         const taskDefinitions = ctx.tasksDSL.getTaskDefinitions();
         const scopesDefinitions = ctx.tasksDSL.getScopesDefinitions();
-        const env = new runtime_environment_1.Environment(resolvedConfig, hardhatArguments, taskDefinitions, scopesDefinitions, envExtenders, ctx.experimentalHardhatNetworkMessageTraceHooks, userConfig, providerExtenders);
+        const env = new runtime_environment_1.Environment(resolvedConfig, hardhatArguments, taskDefinitions, scopesDefinitions, envExtenders, userConfig, providerExtenders);
         ctx.setHardhatRuntimeEnvironment(env);
         // eslint-disable-next-line prefer-const
         let { scopeName, taskName, unparsedCLAs } = argumentsParser.parseScopeAndTaskNames(allUnparsedCLAs, taskDefinitions, scopesDefinitions);
diff --git a/internal/cli/cli.js.map b/internal/cli/cli.js.map
index 396568b945f2306032826fc7fd8e07ad41b1775e..139dde40b83c60d8da52135926471b1da4c03aee 100644
--- a/internal/cli/cli.js.map
+++ b/internal/cli/cli.js.map
@@ -1 +1 @@
-{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../src/internal/cli/cli.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"cli.js","sourceRoot":"","sources":["../../src/internal/cli/cli.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/internal/context.d.ts b/internal/context.d.ts
index aee198e623277777aff078dd2ec3210faac87bc3..c6a8c56204c2a88740214c20294d3793619c4248 100644
--- a/internal/context.d.ts
+++ b/internal/context.d.ts
@@ -1,5 +1,5 @@
 /// <reference types="node" />
-import { ConfigExtender, EnvironmentExtender, ExperimentalHardhatNetworkMessageTraceHook, HardhatRuntimeEnvironment, ProviderExtender } from "../types";
+import { ConfigExtender, EnvironmentExtender, HardhatRuntimeEnvironment, ProviderExtender } from "../types";
 import { VarsManagerSetup } from "./core/vars/vars-manager-setup";
 import { VarsManager } from "./core/vars/vars-manager";
 import { TasksDSL } from "./core/tasks/dsl";
@@ -18,7 +18,6 @@ export declare class HardhatContext {
     readonly providerExtenders: ProviderExtender[];
     varsManager: VarsManager | VarsManagerSetup;
     readonly configExtenders: ConfigExtender[];
-    readonly experimentalHardhatNetworkMessageTraceHooks: ExperimentalHardhatNetworkMessageTraceHook[];
     private _filesLoadedBeforeConfig?;
     private _filesLoadedAfterConfig?;
     setHardhatRuntimeEnvironment(env: HardhatRuntimeEnvironment): void;
diff --git a/internal/context.d.ts.map b/internal/context.d.ts.map
index 0666f90fed6ec959edad5b2ce4517efea6431d1e..6feec7472e631b590f243b60338724d61499b434 100644
--- a/internal/context.d.ts.map
+++ b/internal/context.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"context.d.ts","sourceRoot":"","sources":["../src/internal/context.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,cAAc,EACd,mBAAmB,EACnB,0CAA0C,EAC1C,yBAAyB,EACzB,gBAAgB,EACjB,MAAM,UAAU,CAAC;AAIlB,OAAO,EAAE,gBAAgB,EAAE,MAAM,gCAAgC,CAAC;AAClE,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAI5C,MAAM,MAAM,wBAAwB,GAAG,OAAO,MAAM,GAAG;IACrD,gBAAgB,EAAE,cAAc,CAAC;CAClC,CAAC;AAEF,qBAAa,cAAc;;WAKX,SAAS,IAAI,OAAO;WAKpB,oBAAoB,IAAI,cAAc;WAUtC,iBAAiB,IAAI,cAAc;WASnC,oBAAoB;IAKlC,SAAgB,QAAQ,WAAkB;IAC1C,SAAgB,oBAAoB,EAAE,mBAAmB,EAAE,CAAM;IAC1D,WAAW,CAAC,EAAE,yBAAyB,CAAC;IAC/C,SAAgB,iBAAiB,EAAE,gBAAgB,EAAE,CAAM;IACpD,WAAW,EAAE,WAAW,GAAG,gBAAgB,CAAC;IAEnD,SAAgB,eAAe,EAAE,cAAc,EAAE,CAAM;IAIvD,SAAgB,2CAA2C,EAAE,0CAA0C,EAAE,CACpG;IACL,OAAO,CAAC,wBAAwB,CAAC,CAAW;IAC5C,OAAO,CAAC,uBAAuB,CAAC,CAAW;IAEpC,4BAA4B,CAAC,GAAG,EAAE,yBAAyB;IAO3D,4BAA4B,IAAI,yBAAyB;IAOzD,yBAAyB;IAIzB,0BAA0B;IAI1B,0BAA0B,IAAI,MAAM,EAAE;CAgB9C"}
\ No newline at end of file
+{"version":3,"file":"context.d.ts","sourceRoot":"","sources":["../src/internal/context.ts"],"names":[],"mappings":";AAAA,OAAO,EACL,cAAc,EACd,mBAAmB,EACnB,yBAAyB,EACzB,gBAAgB,EACjB,MAAM,UAAU,CAAC;AAIlB,OAAO,EAAE,gBAAgB,EAAE,MAAM,gCAAgC,CAAC;AAClE,OAAO,EAAE,WAAW,EAAE,MAAM,0BAA0B,CAAC;AACvD,OAAO,EAAE,QAAQ,EAAE,MAAM,kBAAkB,CAAC;AAI5C,MAAM,MAAM,wBAAwB,GAAG,OAAO,MAAM,GAAG;IACrD,gBAAgB,EAAE,cAAc,CAAC;CAClC,CAAC;AAEF,qBAAa,cAAc;;WAKX,SAAS,IAAI,OAAO;WAKpB,oBAAoB,IAAI,cAAc;WAUtC,iBAAiB,IAAI,cAAc;WASnC,oBAAoB;IAKlC,SAAgB,QAAQ,WAAkB;IAC1C,SAAgB,oBAAoB,EAAE,mBAAmB,EAAE,CAAM;IAC1D,WAAW,CAAC,EAAE,yBAAyB,CAAC;IAC/C,SAAgB,iBAAiB,EAAE,gBAAgB,EAAE,CAAM;IACpD,WAAW,EAAE,WAAW,GAAG,gBAAgB,CAAC;IAEnD,SAAgB,eAAe,EAAE,cAAc,EAAE,CAAM;IAEvD,OAAO,CAAC,wBAAwB,CAAC,CAAW;IAC5C,OAAO,CAAC,uBAAuB,CAAC,CAAW;IAEpC,4BAA4B,CAAC,GAAG,EAAE,yBAAyB;IAO3D,4BAA4B,IAAI,yBAAyB;IAOzD,yBAAyB;IAIzB,0BAA0B;IAI1B,0BAA0B,IAAI,MAAM,EAAE;CAgB9C"}
\ No newline at end of file
diff --git a/internal/context.js b/internal/context.js
index e41ad811ef7b2adebb2e4b673b2f32d9a8385ace..ea63d50f82b77a465f96bce389d11f1bf5b1e5d6 100644
--- a/internal/context.js
+++ b/internal/context.js
@@ -13,9 +13,6 @@ class HardhatContext {
         this.environmentExtenders = [];
         this.providerExtenders = [];
         this.configExtenders = [];
-        // NOTE: This is experimental and will be removed. Please contact our team if
-        // you are planning to use it.
-        this.experimentalHardhatNetworkMessageTraceHooks = [];
         this.varsManager = new vars_manager_1.VarsManager((0, global_dir_1.getVarsFilePath)());
     }
     static isCreated() {
diff --git a/internal/context.js.map b/internal/context.js.map
index a16193d4f005e395166a926a752fa7e146d7daac..5617c4d6302165ce3a4961a5af1c1a0726d38f01 100644
--- a/internal/context.js.map
+++ b/internal/context.js.map
@@ -1 +1 @@
-{"version":3,"file":"context.js","sourceRoot":"","sources":["../src/internal/context.ts"],"names":[],"mappings":";;;AAQA,0CAAqE;AACrE,oDAA4C;AAE5C,2DAAuD;AACvD,0CAA4C;AAC5C,kDAAoD;AACpD,8CAAwD;AAMxD,MAAa,cAAc;IACzB;QAiCgB,aAAQ,GAAG,IAAI,cAAQ,EAAE,CAAC;QAC1B,yBAAoB,GAA0B,EAAE,CAAC;QAEjD,sBAAiB,GAAuB,EAAE,CAAC;QAG3C,oBAAe,GAAqB,EAAE,CAAC;QAEvD,6EAA6E;QAC7E,8BAA8B;QACd,gDAA2C,GACzD,EAAE,CAAC;QA3CH,IAAI,CAAC,WAAW,GAAG,IAAI,0BAAW,CAAC,IAAA,4BAAe,GAAE,CAAC,CAAC;IACxD,CAAC;IAEM,MAAM,CAAC,SAAS;QACrB,MAAM,wBAAwB,GAAG,MAAkC,CAAC;QACpE,OAAO,wBAAwB,CAAC,gBAAgB,KAAK,SAAS,CAAC;IACjE,CAAC;IAEM,MAAM,CAAC,oBAAoB;QAChC,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YACpB,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;SAChE;QACD,MAAM,wBAAwB,GAAG,MAAkC,CAAC;QACpE,MAAM,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QACjC,wBAAwB,CAAC,gBAAgB,GAAG,GAAG,CAAC;QAChD,OAAO,GAAG,CAAC;IACb,CAAC;IAEM,MAAM,CAAC,iBAAiB;QAC7B,MAAM,wBAAwB,GAAG,MAAkC,CAAC;QACpE,MAAM,GAAG,GAAG,wBAAwB,CAAC,gBAAgB,CAAC;QACtD,IAAI,GAAG,KAAK,SAAS,EAAE;YACrB,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;SAC5D;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAEM,MAAM,CAAC,oBAAoB;QAChC,MAAM,WAAW,GAAG,MAAa,CAAC;QAClC,WAAW,CAAC,gBAAgB,GAAG,SAAS,CAAC;IAC3C,CAAC;IAiBM,4BAA4B,CAAC,GAA8B;QAChE,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAClC,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;SACpE;QACD,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IACzB,CAAC;IAEM,4BAA4B;QACjC,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAClC,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;SAChE;QACD,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAEM,yBAAyB;QAC9B,IAAI,CAAC,wBAAwB,GAAG,IAAA,gCAAqB,GAAE,CAAC;IAC1D,CAAC;IAEM,0BAA0B;QAC/B,IAAI,CAAC,uBAAuB,GAAG,IAAA,gCAAqB,GAAE,CAAC;IACzD,CAAC;IAEM,0BAA0B;QAC/B,uBAAuB;QACvB,IAAI,IAAI,CAAC,wBAAwB,KAAK,SAAS,EAAE;YAC/C,OAAO,EAAE,CAAC;SACX;QAED,IAAA,+BAAsB,EACpB,IAAI,CAAC,uBAAuB,KAAK,SAAS,EAC1C,oDAAoD,CACrD,CAAC;QAEF,OAAO,gBAAgB,CACrB,IAAI,CAAC,uBAAuB,EAC5B,IAAI,CAAC,wBAAwB,CAC9B,CAAC;IACJ,CAAC;CACF;AAvFD,wCAuFC;AAED,SAAS,gBAAgB,CAAI,CAAM,EAAE,CAAM;IACzC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC"}
\ No newline at end of file
+{"version":3,"file":"context.js","sourceRoot":"","sources":["../src/internal/context.ts"],"names":[],"mappings":";;;AAOA,0CAAqE;AACrE,oDAA4C;AAE5C,2DAAuD;AACvD,0CAA4C;AAC5C,kDAAoD;AACpD,8CAAwD;AAMxD,MAAa,cAAc;IACzB;QAiCgB,aAAQ,GAAG,IAAI,cAAQ,EAAE,CAAC;QAC1B,yBAAoB,GAA0B,EAAE,CAAC;QAEjD,sBAAiB,GAAuB,EAAE,CAAC;QAG3C,oBAAe,GAAqB,EAAE,CAAC;QAtCrD,IAAI,CAAC,WAAW,GAAG,IAAI,0BAAW,CAAC,IAAA,4BAAe,GAAE,CAAC,CAAC;IACxD,CAAC;IAEM,MAAM,CAAC,SAAS;QACrB,MAAM,wBAAwB,GAAG,MAAkC,CAAC;QACpE,OAAO,wBAAwB,CAAC,gBAAgB,KAAK,SAAS,CAAC;IACjE,CAAC;IAEM,MAAM,CAAC,oBAAoB;QAChC,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;YACpB,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;SAChE;QACD,MAAM,wBAAwB,GAAG,MAAkC,CAAC;QACpE,MAAM,GAAG,GAAG,IAAI,cAAc,EAAE,CAAC;QACjC,wBAAwB,CAAC,gBAAgB,GAAG,GAAG,CAAC;QAChD,OAAO,GAAG,CAAC;IACb,CAAC;IAEM,MAAM,CAAC,iBAAiB;QAC7B,MAAM,wBAAwB,GAAG,MAAkC,CAAC;QACpE,MAAM,GAAG,GAAG,wBAAwB,CAAC,gBAAgB,CAAC;QACtD,IAAI,GAAG,KAAK,SAAS,EAAE;YACrB,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,OAAO,CAAC,mBAAmB,CAAC,CAAC;SAC5D;QACD,OAAO,GAAG,CAAC;IACb,CAAC;IAEM,MAAM,CAAC,oBAAoB;QAChC,MAAM,WAAW,GAAG,MAAa,CAAC;QAClC,WAAW,CAAC,gBAAgB,GAAG,SAAS,CAAC;IAC3C,CAAC;IAaM,4BAA4B,CAAC,GAA8B;QAChE,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAClC,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,OAAO,CAAC,2BAA2B,CAAC,CAAC;SACpE;QACD,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IACzB,CAAC;IAEM,4BAA4B;QACjC,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE;YAClC,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;SAChE;QACD,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAEM,yBAAyB;QAC9B,IAAI,CAAC,wBAAwB,GAAG,IAAA,gCAAqB,GAAE,CAAC;IAC1D,CAAC;IAEM,0BAA0B;QAC/B,IAAI,CAAC,uBAAuB,GAAG,IAAA,gCAAqB,GAAE,CAAC;IACzD,CAAC;IAEM,0BAA0B;QAC/B,uBAAuB;QACvB,IAAI,IAAI,CAAC,wBAAwB,KAAK,SAAS,EAAE;YAC/C,OAAO,EAAE,CAAC;SACX;QAED,IAAA,+BAAsB,EACpB,IAAI,CAAC,uBAAuB,KAAK,SAAS,EAC1C,oDAAoD,CACrD,CAAC;QAEF,OAAO,gBAAgB,CACrB,IAAI,CAAC,uBAAuB,EAC5B,IAAI,CAAC,wBAAwB,CAC9B,CAAC;IACJ,CAAC;CACF;AAnFD,wCAmFC;AAED,SAAS,gBAAgB,CAAI,CAAM,EAAE,CAAM;IACzC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC"}
\ No newline at end of file
diff --git a/internal/core/config/config-env.d.ts b/internal/core/config/config-env.d.ts
index 746c6d7c07d23ba9277cd321f1758c5c37aaecc7..8c3eb5afad72653f9d5c6c04a85fc6b4a2d1629c 100644
--- a/internal/core/config/config-env.d.ts
+++ b/internal/core/config/config-env.d.ts
@@ -1,4 +1,4 @@
-import { ActionType, ConfigExtender, ConfigurableScopeDefinition, ConfigurableTaskDefinition, EnvironmentExtender, ExperimentalHardhatNetworkMessageTraceHook, ProviderExtender, TaskArguments } from "../../../types";
+import { ActionType, ConfigExtender, ConfigurableScopeDefinition, ConfigurableTaskDefinition, EnvironmentExtender, ProviderExtender, TaskArguments } from "../../../types";
 import * as argumentTypes from "../params/argumentTypes";
 /**
  * Creates a task, overriding any previous task with the same name.
@@ -74,7 +74,6 @@ export declare function extendConfig(extender: ConfigExtender): void;
  * and returns a new one.
  */
 export declare function extendProvider(extender: ProviderExtender): void;
-export declare function experimentalAddHardhatNetworkMessageTraceHook(hook: ExperimentalHardhatNetworkMessageTraceHook): void;
 /**
  * This object provides methods to interact with the configuration variables.
  */
diff --git a/internal/core/config/config-env.d.ts.map b/internal/core/config/config-env.d.ts.map
index d4847ba6ceb81c0ce77e3a153954880d9a308a4a..687915df52d6fe29fb3a875d2ae005e6cd412718 100644
--- a/internal/core/config/config-env.d.ts.map
+++ b/internal/core/config/config-env.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"config-env.d.ts","sourceRoot":"","sources":["../../../src/internal/core/config/config-env.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,UAAU,EACV,cAAc,EACd,2BAA2B,EAC3B,0BAA0B,EAC1B,mBAAmB,EACnB,0CAA0C,EAC1C,gBAAgB,EAChB,aAAa,EACd,MAAM,gBAAgB,CAAC;AAIxB,OAAO,KAAK,aAAa,MAAM,yBAAyB,CAAC;AAEzD;;;;;;;;;GASG;AACH,wBAAgB,IAAI,CAAC,cAAc,SAAS,aAAa,EACvD,IAAI,EAAE,MAAM,EACZ,WAAW,CAAC,EAAE,MAAM,EACpB,MAAM,CAAC,EAAE,UAAU,CAAC,cAAc,CAAC,GAClC,0BAA0B,CAAC;AAE9B;;;;;;;;;;GAUG;AACH,wBAAgB,IAAI,CAAC,cAAc,SAAS,aAAa,EACvD,IAAI,EAAE,MAAM,EACZ,MAAM,EAAE,UAAU,CAAC,cAAc,CAAC,GACjC,0BAA0B,CAAC;AAqB9B;;;;;;;;;;GAUG;AACH,wBAAgB,OAAO,CAAC,cAAc,SAAS,aAAa,EAC1D,IAAI,EAAE,MAAM,EACZ,WAAW,CAAC,EAAE,MAAM,EACpB,MAAM,CAAC,EAAE,UAAU,CAAC,cAAc,CAAC,GAClC,0BAA0B,CAAC;AAE9B;;;;;;;;;;GAUG;AACH,wBAAgB,OAAO,CAAC,cAAc,SAAS,aAAa,EAC1D,IAAI,EAAE,MAAM,EACZ,MAAM,EAAE,UAAU,CAAC,cAAc,CAAC,GACjC,0BAA0B,CAAC;AAsB9B,eAAO,MAAM,YAAY,gBAAU,CAAC;AAEpC,wBAAgB,KAAK,CACnB,IAAI,EAAE,MAAM,EACZ,WAAW,CAAC,EAAE,MAAM,GACnB,2BAA2B,CAK7B;AAED,eAAO,MAAM,KAAK,sBAAgB,CAAC;AAEnC;;;;;;GAMG;AACH,wBAAgB,iBAAiB,CAAC,QAAQ,EAAE,mBAAmB,QAG9D;AAED;;;;;;GAMG;AACH,wBAAgB,YAAY,CAAC,QAAQ,EAAE,cAAc,QAGpD;AAED;;;;;;GAMG;AACH,wBAAgB,cAAc,CAAC,QAAQ,EAAE,gBAAgB,QAGxD;AAID,wBAAgB,6CAA6C,CAC3D,IAAI,EAAE,0CAA0C,QAIjD;AAED;;GAEG;AACH,eAAO,MAAM,IAAI;;;CAGhB,CAAC;AAEF;;;;;;;;;GASG;AACH,iBAAS,MAAM,CAAC,OAAO,EAAE,MAAM,GAAG,OAAO,CAGxC;AAED;;;;;;;;;;;;;GAaG;AACH,iBAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,YAAY,CAAC,EAAE,MAAM,GAAG,MAAM,CAa9D"}
\ No newline at end of file
+{"version":3,"file":"config-env.d.ts","sourceRoot":"","sources":["../../../src/internal/core/config/config-env.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,UAAU,EACV,cAAc,EACd,2BAA2B,EAC3B,0BAA0B,EAC1B,mBAAmB,EACnB,gBAAgB,EAChB,aAAa,EACd,MAAM,gBAAgB,CAAC;AAIxB,OAAO,KAAK,aAAa,MAAM,yBAAyB,CAAC;AAEzD;;;;;;;;;GASG;AACH,wBAAgB,IAAI,CAAC,cAAc,SAAS,aAAa,EACvD,IAAI,EAAE,MAAM,EACZ,WAAW,CAAC,EAAE,MAAM,EACpB,MAAM,CAAC,EAAE,UAAU,CAAC,cAAc,CAAC,GAClC,0BAA0B,CAAC;AAE9B;;;;;;;;;;GAUG;AACH,wBAAgB,IAAI,CAAC,cAAc,SAAS,aAAa,EACvD,IAAI,EAAE,MAAM,EACZ,MAAM,EAAE,UAAU,CAAC,cAAc,CAAC,GACjC,0BAA0B,CAAC;AAqB9B;;;;;;;;;;GAUG;AACH,wBAAgB,OAAO,CAAC,cAAc,SAAS,aAAa,EAC1D,IAAI,EAAE,MAAM,EACZ,WAAW,CAAC,EAAE,MAAM,EACpB,MAAM,CAAC,EAAE,UAAU,CAAC,cAAc,CAAC,GAClC,0BAA0B,CAAC;AAE9B;;;;;;;;;;GAUG;AACH,wBAAgB,OAAO,CAAC,cAAc,SAAS,aAAa,EAC1D,IAAI,EAAE,MAAM,EACZ,MAAM,EAAE,UAAU,CAAC,cAAc,CAAC,GACjC,0BAA0B,CAAC;AAsB9B,eAAO,MAAM,YAAY,gBAAU,CAAC;AAEpC,wBAAgB,KAAK,CACnB,IAAI,EAAE,MAAM,EACZ,WAAW,CAAC,EAAE,MAAM,GACnB,2BAA2B,CAK7B;AAED,eAAO,MAAM,KAAK,sBAAgB,CAAC;AAEnC;;;;;;GAMG;AACH,wBAAgB,iBAAiB,CAAC,QAAQ,EAAE,mBAAmB,QAG9D;AAED;;;;;;GAMG;AACH,wBAAgB,YAAY,CAAC,QAAQ,EAAE,cAAc,QAGpD;AAED;;;;;;GAMG;AACH,wBAAgB,cAAc,CAAC,QAAQ,EAAE,gBAAgB,QAGxD;AAED;;GAEG;AACH,eAAO,MAAM,IAAI;;;CAGhB,CAAC;AAEF;;;;;;;;;GASG;AACH,iBAAS,MAAM,CAAC,OAAO,EAAE,MAAM,GAAG,OAAO,CAGxC;AAED;;;;;;;;;;;;;GAaG;AACH,iBAAS,MAAM,CAAC,OAAO,EAAE,MAAM,EAAE,YAAY,CAAC,EAAE,MAAM,GAAG,MAAM,CAa9D"}
\ No newline at end of file
diff --git a/internal/core/config/config-env.js b/internal/core/config/config-env.js
index 46be3ebc222e105cf9a3510ec7c6fc66755d1731..4a06d93dd8e06249db0137d667109789642f2c3e 100644
--- a/internal/core/config/config-env.js
+++ b/internal/core/config/config-env.js
@@ -23,7 +23,7 @@ var __importStar = (this && this.__importStar) || function (mod) {
     return result;
 };
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.vars = exports.experimentalAddHardhatNetworkMessageTraceHook = exports.extendProvider = exports.extendConfig = exports.extendEnvironment = exports.types = exports.scope = exports.internalTask = exports.subtask = exports.task = void 0;
+exports.vars = exports.extendProvider = exports.extendConfig = exports.extendEnvironment = exports.types = exports.scope = exports.internalTask = exports.subtask = exports.task = void 0;
 const context_1 = require("../../context");
 const errors_1 = require("../errors");
 const errors_list_1 = require("../errors-list");
@@ -97,13 +97,6 @@ function extendProvider(extender) {
     ctx.providerExtenders.push(extender);
 }
 exports.extendProvider = extendProvider;
-// NOTE: This is experimental and will be removed. Please contact our team
-// if you are planning to use it.
-function experimentalAddHardhatNetworkMessageTraceHook(hook) {
-    const ctx = context_1.HardhatContext.getHardhatContext();
-    ctx.experimentalHardhatNetworkMessageTraceHooks.push(hook);
-}
-exports.experimentalAddHardhatNetworkMessageTraceHook = experimentalAddHardhatNetworkMessageTraceHook;
 /**
  * This object provides methods to interact with the configuration variables.
  */
diff --git a/internal/core/config/config-env.js.map b/internal/core/config/config-env.js.map
index d591e057f7d5e5e129ecd20fe87039ec6a3c76b0..5617312cc0d3e4396e7c28baf7aa3620615c4223 100644
--- a/internal/core/config/config-env.js.map
+++ b/internal/core/config/config-env.js.map
@@ -1 +1 @@
-{"version":3,"file":"config-env.js","sourceRoot":"","sources":["../../../src/internal/core/config/config-env.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"config-env.js","sourceRoot":"","sources":["../../../src/internal/core/config/config-env.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AASA,2CAA+C;AAC/C,sCAAyC;AACzC,gDAAwC;AACxC,uEAAyD;AAkCzD,SAAgB,IAAI,CAClB,IAAY,EACZ,mBAAyD,EACzD,MAAmC;IAEnC,MAAM,GAAG,GAAG,wBAAc,CAAC,iBAAiB,EAAE,CAAC;IAC/C,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC;IAEzB,IAAI,mBAAmB,KAAK,SAAS,EAAE;QACrC,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACvB;IAED,IAAI,OAAO,mBAAmB,KAAK,QAAQ,EAAE;QAC3C,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;KAC5C;IAED,OAAO,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,mBAAmB,EAAE,MAAM,CAAC,CAAC;AACrD,CAAC;AAjBD,oBAiBC;AAmCD,SAAgB,OAAO,CACrB,IAAY,EACZ,mBAAyD,EACzD,MAAmC;IAEnC,MAAM,GAAG,GAAG,wBAAc,CAAC,iBAAiB,EAAE,CAAC;IAC/C,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC;IAEzB,IAAI,mBAAmB,KAAK,SAAS,EAAE;QACrC,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,IAAI,OAAO,mBAAmB,KAAK,QAAQ,EAAE;QAC3C,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;KAC/C;IAED,OAAO,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,mBAAmB,EAAE,MAAM,CAAC,CAAC;AACxD,CAAC;AAjBD,0BAiBC;AAED,gCAAgC;AACnB,QAAA,YAAY,GAAG,OAAO,CAAC;AAEpC,SAAgB,KAAK,CACnB,IAAY,EACZ,WAAoB;IAEpB,MAAM,GAAG,GAAG,wBAAc,CAAC,iBAAiB,EAAE,CAAC;IAC/C,MAAM,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC;IAEzB,OAAO,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,WAAW,CAAC,CAAC;AACtC,CAAC;AARD,sBAQC;AAEY,QAAA,KAAK,GAAG,aAAa,CAAC;AAEnC;;;;;;GAMG;AACH,SAAgB,iBAAiB,CAAC,QAA6B;IAC7D,MAAM,GAAG,GAAG,wBAAc,CAAC,iBAAiB,EAAE,CAAC;IAC/C,GAAG,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1C,CAAC;AAHD,8CAGC;AAED;;;;;;GAMG;AACH,SAAgB,YAAY,CAAC,QAAwB;IACnD,MAAM,GAAG,GAAG,wBAAc,CAAC,iBAAiB,EAAE,CAAC;IAC/C,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,CAAC;AAHD,oCAGC;AAED;;;;;;GAMG;AACH,SAAgB,cAAc,CAAC,QAA0B;IACvD,MAAM,GAAG,GAAG,wBAAc,CAAC,iBAAiB,EAAE,CAAC;IAC/C,GAAG,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvC,CAAC;AAHD,wCAGC;AAED;;GAEG;AACU,QAAA,IAAI,GAAG;IAClB,GAAG,EAAE,MAAM;IACX,GAAG,EAAE,MAAM;CACZ,CAAC;AAEF;;;;;;;;;GASG;AACH,SAAS,MAAM,CAAC,OAAe;IAC7B,uHAAuH;IACvH,OAAO,wBAAc,CAAC,iBAAiB,EAAE,CAAC,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC3E,CAAC;AAED;;;;;;;;;;;;;GAaG;AACH,SAAS,MAAM,CAAC,OAAe,EAAE,YAAqB;IACpD,uHAAuH;IACvH,MAAM,KAAK,GAAG,wBAAc,CAAC,iBAAiB,EAAE,CAAC,WAAW,CAAC,GAAG,CAC9D,OAAO,EACP,YAAY,EACZ,IAAI,CACL,CAAC;IAEF,IAAI,KAAK,KAAK,SAAS;QAAE,OAAO,KAAK,CAAC;IAEtC,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE;QAC1D,KAAK,EAAE,OAAO;KACf,CAAC,CAAC;AACL,CAAC"}
\ No newline at end of file
diff --git a/internal/core/providers/construction.d.ts b/internal/core/providers/construction.d.ts
index 907bf2697d59049b4efcfb112c8294378942ff14..3203a2e7471c7addf3e2553c7276e59bae695b7a 100644
--- a/internal/core/providers/construction.d.ts
+++ b/internal/core/providers/construction.d.ts
@@ -1,5 +1,5 @@
-import type { Artifacts, BoundExperimentalHardhatNetworkMessageTraceHook, EIP1193Provider, EthereumProvider, HardhatConfig, HDAccountsUserConfig, HttpNetworkAccountsUserConfig, NetworkConfig, ProviderExtender } from "../../../types";
+import type { Artifacts, EIP1193Provider, EthereumProvider, HardhatConfig, HDAccountsUserConfig, HttpNetworkAccountsUserConfig, NetworkConfig, ProviderExtender } from "../../../types";
 export declare function isHDAccountsConfig(accounts?: HttpNetworkAccountsUserConfig): accounts is HDAccountsUserConfig;
-export declare function createProvider(config: HardhatConfig, networkName: string, artifacts?: Artifacts, experimentalHardhatNetworkMessageTraceHooks?: BoundExperimentalHardhatNetworkMessageTraceHook[], extenders?: ProviderExtender[]): Promise<EthereumProvider>;
+export declare function createProvider(config: HardhatConfig, networkName: string, artifacts?: Artifacts, extenders?: ProviderExtender[]): Promise<EthereumProvider>;
 export declare function applyProviderWrappers(provider: EIP1193Provider, netConfig: Partial<NetworkConfig>, extenders: ProviderExtender[]): EIP1193Provider;
 //# sourceMappingURL=construction.d.ts.map
\ No newline at end of file
diff --git a/internal/core/providers/construction.d.ts.map b/internal/core/providers/construction.d.ts.map
index a3e7b58982a1b16a635755b48590aae3c4a4bf4b..80b10ac78fc2c8d54bf269fb7b3fb853ffbed868 100644
--- a/internal/core/providers/construction.d.ts.map
+++ b/internal/core/providers/construction.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"construction.d.ts","sourceRoot":"","sources":["../../../src/internal/core/providers/construction.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EACV,SAAS,EACT,+CAA+C,EAC/C,eAAe,EACf,gBAAgB,EAChB,aAAa,EAEb,oBAAoB,EACpB,6BAA6B,EAE7B,aAAa,EACb,gBAAgB,EACjB,MAAM,gBAAgB,CAAC;AAYxB,wBAAgB,kBAAkB,CAChC,QAAQ,CAAC,EAAE,6BAA6B,GACvC,QAAQ,IAAI,oBAAoB,CAElC;AAoBD,wBAAsB,cAAc,CAClC,MAAM,EAAE,aAAa,EACrB,WAAW,EAAE,MAAM,EACnB,SAAS,CAAC,EAAE,SAAS,EACrB,2CAA2C,GAAE,+CAA+C,EAAO,EACnG,SAAS,GAAE,gBAAgB,EAAO,GACjC,OAAO,CAAC,gBAAgB,CAAC,CAsG3B;AAED,wBAAgB,qBAAqB,CACnC,QAAQ,EAAE,eAAe,EACzB,SAAS,EAAE,OAAO,CAAC,aAAa,CAAC,EACjC,SAAS,EAAE,gBAAgB,EAAE,GAC5B,eAAe,CAmGjB"}
\ No newline at end of file
+{"version":3,"file":"construction.d.ts","sourceRoot":"","sources":["../../../src/internal/core/providers/construction.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EACV,SAAS,EACT,eAAe,EACf,gBAAgB,EAChB,aAAa,EAEb,oBAAoB,EACpB,6BAA6B,EAE7B,aAAa,EACb,gBAAgB,EACjB,MAAM,gBAAgB,CAAC;AAYxB,wBAAgB,kBAAkB,CAChC,QAAQ,CAAC,EAAE,6BAA6B,GACvC,QAAQ,IAAI,oBAAoB,CAElC;AAoBD,wBAAsB,cAAc,CAClC,MAAM,EAAE,aAAa,EACrB,WAAW,EAAE,MAAM,EACnB,SAAS,CAAC,EAAE,SAAS,EACrB,SAAS,GAAE,gBAAgB,EAAO,GACjC,OAAO,CAAC,gBAAgB,CAAC,CAqG3B;AAED,wBAAgB,qBAAqB,CACnC,QAAQ,EAAE,eAAe,EACzB,SAAS,EAAE,OAAO,CAAC,aAAa,CAAC,EACjC,SAAS,EAAE,gBAAgB,EAAE,GAC5B,eAAe,CAmGjB"}
\ No newline at end of file
diff --git a/internal/core/providers/construction.js b/internal/core/providers/construction.js
index 50539b5556c422c657041e7d9fc3de0905cd5b76..d30761c6dc03f3021df0441ca04729a46db44740 100644
--- a/internal/core/providers/construction.js
+++ b/internal/core/providers/construction.js
@@ -42,7 +42,7 @@ function importProvider(filePath, name) {
     const mod = require(filePath);
     return mod[name];
 }
-async function createProvider(config, networkName, artifacts, experimentalHardhatNetworkMessageTraceHooks = [], extenders = []) {
+async function createProvider(config, networkName, artifacts, extenders = []) {
     let eip1193Provider;
     const networkConfig = config.networks[networkName];
     const paths = config.paths;
@@ -81,7 +81,6 @@ async function createProvider(config, networkName, artifacts, experimentalHardha
             initialDate: hardhatNetConfig.initialDate !== undefined
                 ? (0, date_1.parseDateString)(hardhatNetConfig.initialDate)
                 : undefined,
-            experimentalHardhatNetworkMessageTraceHooks,
             forkConfig,
             forkCachePath: paths !== undefined ? getForkCacheDirPath(paths) : undefined,
             enableTransientStorage: hardhatNetConfig.enableTransientStorage ?? false,
diff --git a/internal/core/providers/construction.js.map b/internal/core/providers/construction.js.map
index 7cad69def551f4b23fd15893f01063d0703b065a..a045a9f6330c9f3a57668b827ff449086b8ab0ae 100644
--- a/internal/core/providers/construction.js.map
+++ b/internal/core/providers/construction.js.map
@@ -1 +1 @@
-{"version":3,"file":"construction.js","sourceRoot":"","sources":["../../../src/internal/core/providers/construction.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"construction.js","sourceRoot":"","sources":["../../../src/internal/core/providers/construction.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/internal/core/runtime-environment.d.ts b/internal/core/runtime-environment.d.ts
index 96498df8b6897cf0e1ff54f7458331190467f8f2..b277014495ef59c5c2fe7c6eb8bd06d020d280a2 100644
--- a/internal/core/runtime-environment.d.ts
+++ b/internal/core/runtime-environment.d.ts
@@ -1,4 +1,4 @@
-import { Artifacts as IArtifacts, EnvironmentExtender, ExperimentalHardhatNetworkMessageTraceHook, HardhatArguments, HardhatConfig, HardhatRuntimeEnvironment, HardhatUserConfig, Network, ProviderExtender, RunTaskFunction, TasksMap, ScopesMap } from "../../types";
+import { Artifacts as IArtifacts, EnvironmentExtender, HardhatArguments, HardhatConfig, HardhatRuntimeEnvironment, HardhatUserConfig, Network, ProviderExtender, RunTaskFunction, TasksMap, ScopesMap } from "../../types";
 import { TaskProfile } from "./task-profiling";
 export declare class Environment implements HardhatRuntimeEnvironment {
     readonly config: HardhatConfig;
@@ -26,7 +26,7 @@ export declare class Environment implements HardhatRuntimeEnvironment {
      * @param environmentExtenders A list of environment extenders.
      * @param providerExtenders A list of provider extenders.
      */
-    constructor(config: HardhatConfig, hardhatArguments: HardhatArguments, tasks: TasksMap, scopes: ScopesMap, environmentExtenders?: EnvironmentExtender[], experimentalHardhatNetworkMessageTraceHooks?: ExperimentalHardhatNetworkMessageTraceHook[], userConfig?: HardhatUserConfig, providerExtenders?: ProviderExtender[]);
+    constructor(config: HardhatConfig, hardhatArguments: HardhatArguments, tasks: TasksMap, scopes: ScopesMap, environmentExtenders?: EnvironmentExtender[], userConfig?: HardhatUserConfig, providerExtenders?: ProviderExtender[]);
     /**
      * Executes the task with the given name.
      *
diff --git a/internal/core/runtime-environment.d.ts.map b/internal/core/runtime-environment.d.ts.map
index b336bb2fe13ad5161366e4033d46f007f44230cc..d2d99d76aa8d248278e9d50c80abc09d7363dfb6 100644
--- a/internal/core/runtime-environment.d.ts.map
+++ b/internal/core/runtime-environment.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"runtime-environment.d.ts","sourceRoot":"","sources":["../../src/internal/core/runtime-environment.ts"],"names":[],"mappings":"AAIA,OAAO,EACL,SAAS,IAAI,UAAU,EACvB,mBAAmB,EACnB,0CAA0C,EAC1C,gBAAgB,EAChB,aAAa,EACb,yBAAyB,EACzB,iBAAiB,EACjB,OAAO,EAEP,gBAAgB,EAEhB,eAAe,EAIf,QAAQ,EACR,SAAS,EACV,MAAM,aAAa,CAAC;AAUrB,OAAO,EAIL,WAAW,EACZ,MAAM,kBAAkB,CAAC;AAK1B,qBAAa,WAAY,YAAW,yBAAyB;aAiCzC,MAAM,EAAE,aAAa;aACrB,gBAAgB,EAAE,gBAAgB;aAClC,KAAK,EAAE,QAAQ;aACf,MAAM,EAAE,SAAS;aAGjB,UAAU,EAAE,iBAAiB;IAtC/C,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,uBAAuB,CAK7C;IAEK,OAAO,EAAE,OAAO,CAAC;IAEjB,SAAS,EAAE,UAAU,CAAC;IAE7B,OAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAwB;IAEvD,gBAAgB,CAAC,EAAE,WAAW,CAAC;IAE/B,OAAO,EAAE,MAAM,CAAuB;IAE7C;;;;;;;;;;;;;OAaG;gBAEe,MAAM,EAAE,aAAa,EACrB,gBAAgB,EAAE,gBAAgB,EAClC,KAAK,EAAE,QAAQ,EACf,MAAM,EAAE,SAAS,EACjC,oBAAoB,GAAE,mBAAmB,EAAO,EAChD,2CAA2C,GAAE,0CAA0C,EAAO,EAC9E,UAAU,GAAE,iBAAsB,EAClD,iBAAiB,GAAE,gBAAgB,EAAO;IA4C5C;;;;;;;;;OASG;IACH,SAAgB,GAAG,EAAE,eAAe,CAuElC;IAEF;;;;;;OAMG;IACI,cAAc,CACnB,SAAS,GAAE,MAAM,EAAwC,GACxD,MAAM,IAAI;IA6Bb;;;OAGG;YACW,kBAAkB;IAkHhC;;;;;;;;;;;;OAYG;IACH,OAAO,CAAC,0BAA0B;IAyClC;;;;;;OAMG;IACH,OAAO,CAAC,gBAAgB;IA0BxB;;;;;;;OAOG;IACH,OAAO,CAAC,oBAAoB;CAc7B"}
\ No newline at end of file
+{"version":3,"file":"runtime-environment.d.ts","sourceRoot":"","sources":["../../src/internal/core/runtime-environment.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,SAAS,IAAI,UAAU,EACvB,mBAAmB,EACnB,gBAAgB,EAChB,aAAa,EACb,yBAAyB,EACzB,iBAAiB,EACjB,OAAO,EAEP,gBAAgB,EAEhB,eAAe,EAIf,QAAQ,EACR,SAAS,EACV,MAAM,aAAa,CAAC;AAUrB,OAAO,EAIL,WAAW,EACZ,MAAM,kBAAkB,CAAC;AAK1B,qBAAa,WAAY,YAAW,yBAAyB;aAiCzC,MAAM,EAAE,aAAa;aACrB,gBAAgB,EAAE,gBAAgB;aAClC,KAAK,EAAE,QAAQ;aACf,MAAM,EAAE,SAAS;aAEjB,UAAU,EAAE,iBAAiB;IArC/C,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,uBAAuB,CAK7C;IAEK,OAAO,EAAE,OAAO,CAAC;IAEjB,SAAS,EAAE,UAAU,CAAC;IAE7B,OAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAwB;IAEvD,gBAAgB,CAAC,EAAE,WAAW,CAAC;IAE/B,OAAO,EAAE,MAAM,CAAuB;IAE7C;;;;;;;;;;;;;OAaG;gBAEe,MAAM,EAAE,aAAa,EACrB,gBAAgB,EAAE,gBAAgB,EAClC,KAAK,EAAE,QAAQ,EACf,MAAM,EAAE,SAAS,EACjC,oBAAoB,GAAE,mBAAmB,EAAO,EAChC,UAAU,GAAE,iBAAsB,EAClD,iBAAiB,GAAE,gBAAgB,EAAO;IAwC5C;;;;;;;;;OASG;IACH,SAAgB,GAAG,EAAE,eAAe,CAuElC;IAEF;;;;;;OAMG;IACI,cAAc,CACnB,SAAS,GAAE,MAAM,EAAwC,GACxD,MAAM,IAAI;IA6Bb;;;OAGG;YACW,kBAAkB;IAkHhC;;;;;;;;;;;;OAYG;IACH,OAAO,CAAC,0BAA0B;IAyClC;;;;;;OAMG;IACH,OAAO,CAAC,gBAAgB;IA0BxB;;;;;;;OAOG;IACH,OAAO,CAAC,oBAAoB;CAc7B"}
\ No newline at end of file
diff --git a/internal/core/runtime-environment.js b/internal/core/runtime-environment.js
index aaf2e2a25ecdc1bbd0c483429e43688067232e27..b62d87ff4845e605c8c823b0a9a64a1c365d92a3 100644
--- a/internal/core/runtime-environment.js
+++ b/internal/core/runtime-environment.js
@@ -31,7 +31,7 @@ class Environment {
      * @param environmentExtenders A list of environment extenders.
      * @param providerExtenders A list of provider extenders.
      */
-    constructor(config, hardhatArguments, tasks, scopes, environmentExtenders = [], experimentalHardhatNetworkMessageTraceHooks = [], userConfig = {}, providerExtenders = []) {
+    constructor(config, hardhatArguments, tasks, scopes, environmentExtenders = [], userConfig = {}, providerExtenders = []) {
         this.config = config;
         this.hardhatArguments = hardhatArguments;
         this.tasks = tasks;
@@ -114,7 +114,7 @@ class Environment {
         this.artifacts = new artifacts_1.Artifacts(config.paths.artifacts);
         const provider = new lazy_initialization_1.LazyInitializationProviderAdapter(async () => {
             log(`Creating provider for network ${networkName}`);
-            return (0, construction_1.createProvider)(config, networkName, this.artifacts, experimentalHardhatNetworkMessageTraceHooks.map((hook) => (trace, isCallMessageTrace) => hook(this, trace, isCallMessageTrace)), providerExtenders);
+            return (0, construction_1.createProvider)(config, networkName, this.artifacts, providerExtenders);
         });
         this.network = {
             name: networkName,
diff --git a/internal/core/runtime-environment.js.map b/internal/core/runtime-environment.js.map
index dbd944a0874d471382625f991c43423e2bbc7bb2..5a345509152342f665a772a9faa69ba91d56a783 100644
--- a/internal/core/runtime-environment.js.map
+++ b/internal/core/runtime-environment.js.map
@@ -1 +1 @@
-{"version":3,"file":"runtime-environment.js","sourceRoot":"","sources":["../../src/internal/core/runtime-environment.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"runtime-environment.js","sourceRoot":"","sources":["../../src/internal/core/runtime-environment.ts"],"names":[],"mappings":";;;;;;AAAA,kDAA0B;AAoB1B,4CAAyC;AAEzC,qDAAwD;AACxD,4DAAqE;AACrE,qCAAwC;AACxC,+CAAuC;AACvC,2DAA0D;AAC1D,yEAAoF;AACpF,+DAAoE;AACpE,qDAK0B;AAC1B,uCAAmD;AAEnD,MAAM,GAAG,GAAG,IAAA,eAAK,EAAC,kBAAkB,CAAC,CAAC;AAEtC,MAAa,WAAW;IAkBtB;;;;;;;;;;;;;OAaG;IACH,YACkB,MAAqB,EACrB,gBAAkC,EAClC,KAAe,EACf,MAAiB,EACjC,uBAA8C,EAAE,EAChC,aAAgC,EAAE,EAClD,oBAAwC,EAAE;QAN1B,WAAM,GAAN,MAAM,CAAe;QACrB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,UAAK,GAAL,KAAK,CAAU;QACf,WAAM,GAAN,MAAM,CAAW;QAEjB,eAAU,GAAV,UAAU,CAAwB;QAtB7C,YAAO,GAAW,IAAA,+BAAiB,GAAE,CAAC;QA+D7C;;;;;;;;;WASG;QACa,QAAG,GAAoB,KAAK,EAC1C,cAAc,EACd,aAAa,GAAG,EAAE,EAClB,gBAAgB,GAAG,EAAE,EACrB,iBAA+B,EAC/B,EAAE;YACF,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,IAAA,0BAAmB,EAAC,cAAc,CAAC,CAAC;YAE5D,IAAI,cAAc,CAAC;YACnB,IAAI,KAAK,KAAK,SAAS,EAAE;gBACvB,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAClC,GAAG,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;aAC9B;iBAAM;gBACL,MAAM,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;gBAC3C,IAAI,eAAe,KAAK,SAAS,EAAE;oBACjC,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,SAAS,CAAC,kBAAkB,EAAE;wBAC1D,KAAK;qBACN,CAAC,CAAC;iBACJ;gBAED,cAAc,GAAG,eAAe,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,CAAC;gBAC/C,GAAG,CAAC,2BAA2B,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aAC/C;YAED,IAAI,cAAc,KAAK,SAAS,EAAE;gBAChC,IAAI,KAAK,KAAK,SAAS,EAAE;oBACvB,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,SAAS,CAAC,wBAAwB,EAAE;wBAChE,KAAK;wBACL,IAAI;qBACL,CAAC,CAAC;iBACJ;gBAED,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,SAAS,CAAC,iBAAiB,EAAE;oBACzD,IAAI;iBACL,CAAC,CAAC;aACJ;YAED,MAAM,qBAAqB,GAAG,IAAI,CAAC,0BAA0B,CAC3D,cAAc,EACd,aAAa,EACb,gBAAgB,CACjB,CAAC;YAEF,IAAI,WAAoC,CAAC;YACzC,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,KAAK,IAAI,EAAE;gBAC7C,WAAW,GAAG,IAAA,kCAAiB,EAAC,IAAI,CAAC,CAAC;gBAEtC,IAAI,iBAAiB,KAAK,SAAS,EAAE;oBACnC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBAC9C;qBAAM;oBACL,IAAI,CAAC,gBAAgB,GAAG,WAAW,CAAC;iBACrC;aACF;YAED,IAAI;gBACF,OAAO,MAAM,IAAI,CAAC,kBAAkB,CAClC,cAAc,EACd,qBAAqB,EACrB,gBAAgB,EAChB,WAAW,CACZ,CAAC;aACH;YAAC,OAAO,CAAC,EAAE;gBACV,IAAA,2CAA0B,EAAC,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;gBAE5D,sFAAsF;gBACtF,MAAM,CAAC,CAAC;aACT;oBAAS;gBACR,IAAI,WAAW,KAAK,SAAS,EAAE;oBAC7B,IAAA,oCAAmB,EAAC,WAAW,CAAC,CAAC;iBAClC;aACF;QACH,CAAC,CAAC;QAvHA,GAAG,CAAC,oCAAoC,CAAC,CAAC;QAE1C,MAAM,WAAW,GACf,gBAAgB,CAAC,OAAO,KAAK,SAAS;YACpC,CAAC,CAAC,gBAAgB,CAAC,OAAO;YAC1B,CAAC,CAAC,MAAM,CAAC,cAAc,CAAC;QAE5B,MAAM,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAEnD,IAAI,aAAa,KAAK,SAAS,EAAE;YAC/B,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,OAAO,CAAC,gBAAgB,EAAE;gBACtD,OAAO,EAAE,WAAW;aACrB,CAAC,CAAC;SACJ;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,qBAAS,CAAC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAEvD,MAAM,QAAQ,GAAG,IAAI,uDAAiC,CAAC,KAAK,IAAI,EAAE;YAChE,GAAG,CAAC,iCAAiC,WAAW,EAAE,CAAC,CAAC;YACpD,OAAO,IAAA,6BAAc,EACnB,MAAM,EACN,WAAW,EACX,IAAI,CAAC,SAAS,EACd,iBAAiB,CAClB,CAAC;QACJ,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG;YACb,IAAI,EAAE,WAAW;YACjB,MAAM,EAAE,aAAa;YACrB,QAAQ;SACT,CAAC;QAEF,IAAI,CAAC,qBAAqB,GAAG,oBAAoB,CAAC;QAElD,oBAAoB,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAC7D,CAAC;IAqFD;;;;;;OAMG;IACI,cAAc,CACnB,YAAsB,WAAW,CAAC,uBAAuB;QAEzD,MAAM,WAAW,GAAG,MAAa,CAAC;QAElC,MAAM,cAAc,GAA4B,EAAE,CAAC;QACnD,MAAM,WAAW,GAAG,WAAW,CAAC,GAAG,CAAC;QAEpC,WAAW,CAAC,GAAG,GAAG,IAAI,CAAC;QAEvB,KAAK,MAAM,CAAC,GAAG,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC/C,IAAI,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;gBAC3B,SAAS;aACV;YAED,cAAc,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC;YACvC,WAAW,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;SAC1B;QAED,OAAO,GAAG,EAAE;YACV,KAAK,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBAC3C,IAAI,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;oBAC3B,SAAS;iBACV;gBAED,WAAW,CAAC,GAAG,GAAG,WAAW,CAAC;gBAC9B,WAAW,CAAC,GAAG,CAAC,GAAG,cAAc,CAAC,GAAG,CAAC,CAAC;aACxC;QACH,CAAC,CAAC;IACJ,CAAC;IAED;;;OAGG;IACK,KAAK,CAAC,kBAAkB,CAC9B,cAA8B,EAC9B,aAA4B,EAC5B,gBAAkC,EAClC,WAAyB;QAEzB,IAAI,gBAAqB,CAAC;QAE1B,IAAI,cAAc,YAAY,2CAAwB,EAAE;YACtD,gBAAgB,GAAG,KAAK,EACtB,iBAAgC,aAAa,EAC7C,oBAAsC,gBAAgB,EACtD,EAAE;gBACF,GAAG,CAAC,oBAAoB,EAAE,cAAc,CAAC,IAAI,CAAC,CAAC;gBAE/C,IAAI,WAAW,KAAK,SAAS,EAAE;oBAC7B,OAAO,IAAI,CAAC,kBAAkB,CAC5B,cAAc,CAAC,oBAAoB,EACnC,cAAc,EACd,iBAAiB,CAClB,CAAC;iBACH;gBAED,MAAM,iBAAiB,GAAG,IAAA,wCAAuB,EAAC,WAAW,CAAC,CAAC;gBAC/D,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;gBAE7C,IAAI;oBACF,OAAO,MAAM,IAAI,CAAC,kBAAkB,CAClC,cAAc,CAAC,oBAAoB,EACnC,cAAc,EACd,iBAAiB,EACjB,iBAAiB,CAClB,CAAC;iBACH;wBAAS;oBACR,IAAA,oCAAmB,EAAC,iBAAiB,CAAC,CAAC;iBACxC;YACH,CAAC,CAAC;YAEF,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC;SACnC;aAAM;YACL,gBAAgB,GAAG,KAAK,IAAI,EAAE;gBAC5B,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,gBAAgB,CAAC,sBAAsB,EAAE;oBACrE,QAAQ,EAAE,cAAc,CAAC,IAAI;iBAC9B,CAAC,CAAC;YACL,CAAC,CAAC;YAEF,gBAAgB,CAAC,SAAS,GAAG,KAAK,CAAC;SACpC;QAED,MAAM,QAAQ,GAAoC,gBAAgB,CAAC;QAEnE,MAAM,WAAW,GAAG,MAAa,CAAC;QAClC,MAAM,gBAAgB,GAAQ,WAAW,CAAC,QAAQ,CAAC;QACnD,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEhC,yEAAyE;QACzE,uEAAuE;QACvE,4EAA4E;QAC5E,MAAM,UAAU,GAAG,IAAI,KAAK,CAAc,IAAI,EAAE;YAC9C,GAAG,CAAC,MAAmB,EAAE,CAAkB,EAAE,QAAa;gBACxD,IAAI,CAAC,KAAK,KAAK,EAAE;oBACf,OAAO,CACL,KAAa,EACb,cAA6B,EAC7B,iBAAmC,EACnC,EAAE,CACD,MAAc,CAAC,GAAG,CACjB,KAAK,EACL,cAAc,EACd,EAAE,GAAG,iBAAiB,EAAE,GAAG,gBAAgB,EAAE,EAAE,sCAAsC;oBACrF,WAAW,CACZ,CAAC;iBACL;gBAED,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;YAC1C,CAAC;SACF,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,gBAAgB,CAAC,UAAU,KAAK,IAAI,EAAE;YAC7C,4DAA4D;YAC3D,UAAkB,CAAC,YAAY,GAAG,KAAK,EACtC,KAAa,EACb,CAAqB,EACrB,EAAE;gBACF,MAAM,YAAY,GAAG,IAAA,kCAAiB,EAAC,KAAK,CAAC,CAAC;gBAC9C,WAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACzC,IAAI;oBACF,OAAO,MAAM,CAAC,EAAE,CAAC;iBAClB;wBAAS;oBACR,IAAA,oCAAmB,EAAC,YAAY,CAAC,CAAC;iBACnC;YACH,CAAC,CAAC;YAED,UAAkB,CAAC,gBAAgB,GAAG,CAAC,KAAa,EAAE,CAAY,EAAE,EAAE;gBACrE,MAAM,YAAY,GAAG,IAAA,kCAAiB,EAAC,KAAK,CAAC,CAAC;gBAC9C,WAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;gBACzC,IAAI;oBACF,OAAO,CAAC,EAAE,CAAC;iBACZ;wBAAS;oBACR,IAAA,oCAAmB,EAAC,YAAY,CAAC,CAAC;iBACnC;YACH,CAAC,CAAC;SACH;QAED,MAAM,kBAAkB,GAAG,UAAU,CAAC,cAAc,EAAE,CAAC;QAEvD,IAAI;YACF,OAAO,MAAM,cAAc,CAAC,MAAM,CAAC,aAAa,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;SACzE;gBAAS;YACR,kBAAkB,EAAE,CAAC;YACrB,WAAW,CAAC,QAAQ,GAAG,gBAAgB,CAAC;SACzC;IACH,CAAC;IAED;;;;;;;;;;;;OAYG;IACK,0BAA0B,CAChC,cAA8B,EAC9B,aAA4B,EAC5B,gBAAkC;QAElC,MAAM,EACJ,IAAI,EAAE,QAAQ,EACd,gBAAgB,EAChB,0BAA0B,GAC3B,GAAG,cAAc,CAAC;QAEnB,MAAM,6BAA6B,GAAG,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;QAEtE,oCAAoC;QACpC,MAAM,uBAAuB,GAAG;YAC9B,GAAG,6BAA6B;YAChC,GAAG,0BAA0B;SAC9B,CAAC;QAEF,MAAM,iBAAiB,GAAkB,EAAE,CAAC;QAE5C,KAAK,MAAM,eAAe,IAAI,uBAAuB,EAAE;YACrD,MAAM,SAAS,GAAG,eAAe,CAAC,IAAI,CAAC;YACvC,MAAM,aAAa,GACjB,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,aAAa,CAAC,SAAS,CAAC,CAAC;YAEtE,MAAM,qBAAqB,GAAG,IAAI,CAAC,gBAAgB,CACjD,eAAe,EACf,aAAa,EACb,cAAc,CAAC,IAAI,CACpB,CAAC;YAEF,IAAI,qBAAqB,KAAK,SAAS,EAAE;gBACvC,iBAAiB,CAAC,SAAS,CAAC,GAAG,qBAAqB,CAAC;aACtD;SACF;QAED,2DAA2D;QAC3D,OAAO,EAAE,GAAG,aAAa,EAAE,GAAG,iBAAiB,EAAE,CAAC;IACpD,CAAC;IAED;;;;;;OAMG;IACK,gBAAgB,CACtB,eAAqC,EACrC,aAAkB,EAClB,QAAgB;QAEhB,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,YAAY,EAAE,GAAG,eAAe,CAAC;QAE3D,IAAI,aAAa,KAAK,SAAS,EAAE;YAC/B,IAAI,UAAU,EAAE;gBACd,uDAAuD;gBACvD,OAAO,YAAY,CAAC;aACrB;YAED,0CAA0C;YAC1C,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,SAAS,CAAC,qBAAqB,EAAE;gBAC7D,KAAK,EAAE,IAAI;gBACX,IAAI,EAAE,QAAQ;aACf,CAAC,CAAC;SACJ;QAED,kDAAkD;QAClD,IAAI,CAAC,oBAAoB,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;QAE1D,OAAO,aAAa,CAAC;IACvB,CAAC;IAED;;;;;;;OAOG;IACK,oBAAoB,CAC1B,eAAqC,EACrC,aAAkB;QAElB,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,eAAe,CAAC;QAE9D,oGAAoG;QACpG,yDAAyD;QACzD,MAAM,sBAAsB,GAAG,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC;QAE5E,KAAK,MAAM,KAAK,IAAI,sBAAsB,EAAE;YAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;SACjC;IACH,CAAC;;AAzauB,mCAAuB,GAAa;IAC1D,gBAAgB;IAChB,kBAAkB;IAClB,oBAAoB;IACpB,YAAY;CACb,AAL8C,CAK7C;AANS,kCAAW"}
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/provider.d.ts b/internal/hardhat-network/provider/provider.d.ts
index df1286af52be3a97f49636dcb549e80043905341..970671b4888c4739ce919cfb48c724b0c503b49f 100644
--- a/internal/hardhat-network/provider/provider.d.ts
+++ b/internal/hardhat-network/provider/provider.d.ts
@@ -1,8 +1,7 @@
 /// <reference types="node" />
-import type { Artifacts, BoundExperimentalHardhatNetworkMessageTraceHook, EIP1193Provider, HardhatNetworkChainsConfig, RequestArguments } from "../../../types";
-import type { EdrContext } from "@nomicfoundation/edr";
+import type { Artifacts, EIP1193Provider, HardhatNetworkChainsConfig, RequestArguments } from "../../../types";
+import type { EdrContext, VMTracer as VMTracerT } from "@nomicfoundation/edr";
 import { EventEmitter } from "events";
-import { VMTracer } from "../stack-traces/vm-tracer";
 import { ForkConfig, GenesisAccount, IntervalMiningConfig, MempoolOrder, NodeConfig, TracingConfig } from "./node-types";
 import { LoggerConfig } from "./modules/logger";
 export declare const DEFAULT_COINBASE = "0xc014ba5ec014ba5ec014ba5ec014ba5ec014ba5e";
@@ -25,7 +24,6 @@ interface HardhatNetworkProviderConfig {
     initialBaseFeePerGas?: number;
     initialDate?: Date;
     coinbase?: string;
-    experimentalHardhatNetworkMessageTraceHooks?: BoundExperimentalHardhatNetworkMessageTraceHook[];
     forkConfig?: ForkConfig;
     forkCachePath?: string;
     enableTransientStorage: boolean;
@@ -49,7 +47,7 @@ export declare class EdrProviderWrapper extends EventEmitter implements EIP1193P
      *
      * Used for internal stack traces integration tests.
      */
-    setVmTracer(vmTracer?: VMTracer): void;
+    setVmTracer(vmTracer?: VMTracerT): void;
     private _setCallOverrideCallback;
     private _setVerboseTracing;
     private _ethEventListener;
diff --git a/internal/hardhat-network/provider/provider.d.ts.map b/internal/hardhat-network/provider/provider.d.ts.map
index 937d873d808e6b9fbf0a2c92697d419034c3b12f..c47b65660681f531b97d9f38ea9e61597de79cb5 100644
--- a/internal/hardhat-network/provider/provider.d.ts.map
+++ b/internal/hardhat-network/provider/provider.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"provider.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/provider/provider.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"provider.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/provider/provider.ts"],"names":[],"mappings":";AAAA,OAAO,KAAK,EACV,SAAS,EAGT,eAAe,EAEf,0BAA0B,EAC1B,gBAAgB,EACjB,MAAM,gBAAgB,CAAC;AAExB,OAAO,KAAK,EACV,UAAU,EAGV,QAAQ,IAAI,SAAS,EAItB,MAAM,sBAAsB,CAAC;AAI9B,OAAO,EAAE,YAAY,EAAE,MAAM,QAAQ,CAAC;AAmCtC,OAAO,EACL,UAAU,EACV,cAAc,EACd,oBAAoB,EACpB,YAAY,EACZ,UAAU,EACV,aAAa,EACd,MAAM,cAAc,CAAC;AAWtB,OAAO,EAAE,YAAY,EAA8B,MAAM,kBAAkB,CAAC;AAO5E,eAAO,MAAM,gBAAgB,+CAA+C,CAAC;AAI7E,wBAAgB,mBAAmB,IAAI,UAAU,CAWhD;AAED,UAAU,4BAA4B;IACpC,QAAQ,EAAE,MAAM,CAAC;IACjB,OAAO,EAAE,MAAM,CAAC;IAChB,SAAS,EAAE,MAAM,CAAC;IAClB,aAAa,EAAE,MAAM,CAAC;IACtB,WAAW,EAAE,MAAM,CAAC;IACpB,QAAQ,EAAE,OAAO,CAAC;IAClB,cAAc,EAAE,oBAAoB,CAAC;IACrC,YAAY,EAAE,YAAY,CAAC;IAC3B,MAAM,EAAE,0BAA0B,CAAC;IACnC,eAAe,EAAE,cAAc,EAAE,CAAC;IAClC,0BAA0B,EAAE,OAAO,CAAC;IACpC,0BAA0B,EAAE,OAAO,CAAC;IACpC,mBAAmB,EAAE,OAAO,CAAC;IAC7B,4BAA4B,EAAE,OAAO,CAAC;IAEtC,oBAAoB,CAAC,EAAE,MAAM,CAAC;IAC9B,WAAW,CAAC,EAAE,IAAI,CAAC;IACnB,QAAQ,CAAC,EAAE,MAAM,CAAC;IAClB,UAAU,CAAC,EAAE,UAAU,CAAC;IACxB,aAAa,CAAC,EAAE,MAAM,CAAC;IACvB,sBAAsB,EAAE,OAAO,CAAC;IAChC,aAAa,EAAE,OAAO,CAAC;CACxB;AAED,wBAAgB,aAAa,CAC3B,MAAM,EAAE,4BAA4B,EACpC,aAAa,CAAC,EAAE,aAAa,GAC5B,UAAU,CAsBZ;AAWD,qBAAa,kBACX,SAAQ,YACR,YAAW,eAAe;IAWxB,OAAO,CAAC,QAAQ,CAAC,SAAS;IAE1B,OAAO,CAAC,QAAQ,CAAC,KAAK;IAGtB,OAAO,CAAC,QAAQ,CAAC,eAAe;IAEhC,OAAO,CAAC,QAAQ,CAAC,OAAO;IAhB1B,OAAO,CAAC,kBAAkB,CAAK;IAG/B,OAAO,CAAC,qBAAqB,CAAC,CAAuB;IAErD,2CAA2C;IAC3C,OAAO,CAAC,SAAS,CAAC,CAAY;IAE9B,OAAO;WAkBa,MAAM,CACxB,MAAM,EAAE,4BAA4B,EACpC,YAAY,EAAE,YAAY,EAC1B,aAAa,CAAC,EAAE,aAAa,GAC5B,OAAO,CAAC,kBAAkB,CAAC;IAqIjB,OAAO,CAAC,IAAI,EAAE,gBAAgB,GAAG,OAAO,CAAC,OAAO,CAAC;IA6I9D;;;;OAIG;IACI,WAAW,CAAC,QAAQ,CAAC,EAAE,SAAS;IAKvC,OAAO,CAAC,wBAAwB;IAUhC,OAAO,CAAC,kBAAkB;IAI1B,OAAO,CAAC,iBAAiB;IASzB,OAAO,CAAC,4BAA4B;IAOpC,OAAO,CAAC,6BAA6B;IAYrC,OAAO,CAAC,2BAA2B;YAWrB,2BAA2B;IAkCzC,OAAO,CAAC,iCAAiC;IAIzC,OAAO,CAAC,iCAAiC;YAI3B,6BAA6B;CA4B5C;AAQD,wBAAsB,4BAA4B,CAChD,4BAA4B,EAAE,4BAA4B,EAC1D,YAAY,EAAE,YAAY,EAC1B,SAAS,CAAC,EAAE,SAAS,GACpB,OAAO,CAAC,eAAe,CAAC,CAY1B"}
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/provider.js b/internal/hardhat-network/provider/provider.js
index 5538259ab7fcbf99b7fa82e26922510da6444613..f41e157111016d3cd08220b0bd474ecbed624890 100644
--- a/internal/hardhat-network/provider/provider.js
+++ b/internal/hardhat-network/provider/provider.js
@@ -42,7 +42,6 @@ const http_1 = require("../../core/providers/http");
 const hardforks_1 = require("../../util/hardforks");
 const compiler_to_model_1 = require("../stack-traces/compiler-to-model");
 const consoleLogger_1 = require("../stack-traces/consoleLogger");
-const contracts_identifier_1 = require("../stack-traces/contracts-identifier");
 const vm_trace_decoder_1 = require("../stack-traces/vm-trace-decoder");
 const constants_2 = require("../stack-traces/constants");
 const solidity_errors_1 = require("../stack-traces/solidity-errors");
@@ -128,8 +127,7 @@ class EdrProviderWrapper extends events_1.EventEmitter {
         const eventAdapter = new EdrProviderEventAdapter();
         const printLineFn = loggerConfig.printLineFn ?? logger_1.printLine;
         const replaceLastLineFn = loggerConfig.replaceLastLineFn ?? logger_1.replaceLastLine;
-        const contractsIdentifier = new contracts_identifier_1.ContractsIdentifier();
-        const vmTraceDecoder = new vm_trace_decoder_1.VmTraceDecoder(contractsIdentifier);
+        const vmTraceDecoder = new vm_trace_decoder_1.VmTraceDecoder();
         const hardforkName = (0, hardforks_1.getHardforkName)(config.hardfork);
         const provider = await Provider.withConfig(getGlobalEdrContext(), {
             allowBlocksWithSameTimestamp: config.allowBlocksWithSameTimestamp ?? false,
@@ -228,6 +226,8 @@ class EdrProviderWrapper extends events_1.EventEmitter {
         if (needsTraces) {
             const rawTraces = responseObject.traces;
             for (const rawTrace of rawTraces) {
+                this._vmTracer?.observe(rawTrace);
+                // For other consumers in JS we need to marshall the entire trace over FFI
                 const trace = rawTrace.trace();
                 // beforeTx event
                 if (this._node._vm.events.listenerCount("beforeTx") > 0) {
@@ -239,21 +239,18 @@ class EdrProviderWrapper extends events_1.EventEmitter {
                         if (this._node._vm.evm.events.listenerCount("step") > 0) {
                             this._node._vm.evm.events.emit("step", (0, convertToEdr_1.edrTracingStepToMinimalInterpreterStep)(traceItem));
                         }
-                        this._vmTracer?.addStep(traceItem);
                     }
                     // afterMessage event
                     else if ("executionResult" in traceItem) {
                         if (this._node._vm.evm.events.listenerCount("afterMessage") > 0) {
                             this._node._vm.evm.events.emit("afterMessage", (0, convertToEdr_1.edrTracingMessageResultToMinimalEVMResult)(traceItem));
                         }
-                        this._vmTracer?.addAfterMessage(traceItem.executionResult);
                     }
                     // beforeMessage event
                     else {
                         if (this._node._vm.evm.events.listenerCount("beforeMessage") > 0) {
                             this._node._vm.evm.events.emit("beforeMessage", (0, convertToEdr_1.edrTracingMessageToMinimalMessage)(traceItem));
                         }
-                        this._vmTracer?.addBeforeMessage(traceItem);
                     }
                 }
                 // afterTx event
@@ -359,7 +356,7 @@ class EdrProviderWrapper extends events_1.EventEmitter {
         }
         catch (error) {
             console.warn(chalk_1.default.yellow("The Hardhat Network tracing engine could not be updated. Run Hardhat with --verbose to learn more."));
-            log("ContractsIdentifier failed to be updated. Please report this to help us improve Hardhat.\n", error);
+            log("VmTraceDecoder failed to be updated. Please report this to help us improve Hardhat.\n", error);
             return false;
         }
         for (const bytecode of bytecodes) {
@@ -375,18 +372,7 @@ class EdrProviderWrapper extends events_1.EventEmitter {
     }
     async _rawTraceToSolidityStackTrace(rawTrace) {
         const vmTracer = new vm_tracer_1.VMTracer();
-        const trace = rawTrace.trace();
-        for (const traceItem of trace) {
-            if ("pc" in traceItem) {
-                vmTracer.addStep(traceItem);
-            }
-            else if ("executionResult" in traceItem) {
-                vmTracer.addAfterMessage(traceItem.executionResult);
-            }
-            else {
-                vmTracer.addBeforeMessage(traceItem);
-            }
-        }
+        vmTracer.observe(rawTrace);
         let vmTrace = vmTracer.getLastTopLevelMessageTrace();
         const vmTracerError = vmTracer.getLastError();
         if (vmTrace !== undefined) {
@@ -415,7 +401,7 @@ async function createHardhatNetworkProvider(hardhatNetworkProviderConfig, logger
     log("Making tracing config");
     const tracingConfig = await makeTracingConfig(artifacts);
     log("Creating EDR provider");
-    const provider = EdrProviderWrapper.create(hardhatNetworkProviderConfig, loggerConfig, tracingConfig);
+    const provider = await EdrProviderWrapper.create(hardhatNetworkProviderConfig, loggerConfig, tracingConfig);
     log("EDR provider created");
     return provider;
 }
diff --git a/internal/hardhat-network/provider/provider.js.map b/internal/hardhat-network/provider/provider.js.map
index 4a4e56b6a352f961976f47621be33184a0caf1db..ec68c80e186f5f99fb2478190289a59fb353e6b2 100644
--- a/internal/hardhat-network/provider/provider.js.map
+++ b/internal/hardhat-network/provider/provider.js.map
@@ -1 +1 @@
-{"version":3,"file":"provider.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/provider/provider.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"provider.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/provider/provider.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/return-data.d.ts b/internal/hardhat-network/provider/return-data.d.ts
index 53ccf50481b33157503be1b96fef5f0d6ce9d6ae..c5ef34caa2d60c2207a52fd80b0d9deb6a84fbe6 100644
--- a/internal/hardhat-network/provider/return-data.d.ts
+++ b/internal/hardhat-network/provider/return-data.d.ts
@@ -1,16 +1,3 @@
-/**
- * Represents the returnData of a transaction, whose contents are unknown.
- */
-export declare class ReturnData {
-    value: Uint8Array;
-    private _selector;
-    constructor(value: Uint8Array);
-    isEmpty(): boolean;
-    matchesSelector(selector: Uint8Array): boolean;
-    isErrorReturnData(): boolean;
-    isPanicReturnData(): boolean;
-    decodeError(): string;
-    decodePanic(): bigint;
-    getSelector(): string | undefined;
-}
+declare const ReturnData: typeof import("@nomicfoundation/edr").ReturnData;
+export { ReturnData };
 //# sourceMappingURL=return-data.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/return-data.d.ts.map b/internal/hardhat-network/provider/return-data.d.ts.map
index f232b93827ea1b284d6c80dfa9f0a25c6ce2b174..3d83b2ea3dbfe9853753f8e51a75e0a7112e9161 100644
--- a/internal/hardhat-network/provider/return-data.d.ts.map
+++ b/internal/hardhat-network/provider/return-data.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"return-data.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/provider/return-data.ts"],"names":[],"mappings":"AAUA;;GAEG;AACH,qBAAa,UAAU;IAGF,KAAK,EAAE,UAAU;IAFpC,OAAO,CAAC,SAAS,CAAqB;gBAEnB,KAAK,EAAE,UAAU;IAM7B,OAAO,IAAI,OAAO;IAIlB,eAAe,CAAC,QAAQ,EAAE,UAAU,GAAG,OAAO;IAQ9C,iBAAiB,IAAI,OAAO;IAI5B,iBAAiB,IAAI,OAAO;IAI5B,WAAW,IAAI,MAAM;IAiBrB,WAAW,IAAI,MAAM;IAYrB,WAAW,IAAI,MAAM,GAAG,SAAS;CAGzC"}
\ No newline at end of file
+{"version":3,"file":"return-data.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/provider/return-data.ts"],"names":[],"mappings":"AAEA,QAAA,MAAQ,UAAU,kDAEwB,CAAC;AAE3C,OAAO,EAAE,UAAU,EAAE,CAAC"}
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/return-data.js b/internal/hardhat-network/provider/return-data.js
index 298992d166845a4a3aa358ce3f0010aed8c8922a..e77f1b35ec62399d921aa2e3470326471c7c162b 100644
--- a/internal/hardhat-network/provider/return-data.js
+++ b/internal/hardhat-network/provider/return-data.js
@@ -1,55 +1,7 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.ReturnData = void 0;
-const ethereumjs_util_1 = require("@nomicfoundation/ethereumjs-util");
-const errors_1 = require("../../core/errors");
-const { rawDecode } = require("ethereumjs-abi");
-// selector of Error(string)
-const ERROR_SELECTOR = "08c379a0";
-// selector of Panic(uint256)
-const PANIC_SELECTOR = "4e487b71";
-/**
- * Represents the returnData of a transaction, whose contents are unknown.
- */
-class ReturnData {
-    constructor(value) {
-        this.value = value;
-        if (value.length >= 4) {
-            this._selector = Buffer.from(value.slice(0, 4)).toString("hex");
-        }
-    }
-    isEmpty() {
-        return this.value.length === 0;
-    }
-    matchesSelector(selector) {
-        if (this._selector === undefined) {
-            return false;
-        }
-        return this._selector === Buffer.from(selector).toString("hex");
-    }
-    isErrorReturnData() {
-        return this._selector === ERROR_SELECTOR;
-    }
-    isPanicReturnData() {
-        return this._selector === PANIC_SELECTOR;
-    }
-    decodeError() {
-        if (this.isEmpty()) {
-            return "";
-        }
-        (0, errors_1.assertHardhatInvariant)(this._selector === ERROR_SELECTOR, "Expected return data to be a Error(string)");
-        const [decodedError] = rawDecode(["string"], this.value.slice(4));
-        return decodedError;
-    }
-    decodePanic() {
-        (0, errors_1.assertHardhatInvariant)(this._selector === PANIC_SELECTOR, "Expected return data to be a Panic(uint256)");
-        // we are assuming that panic codes are smaller than Number.MAX_SAFE_INTEGER
-        const errorCode = (0, ethereumjs_util_1.bytesToBigInt)(this.value.slice(4));
-        return errorCode;
-    }
-    getSelector() {
-        return this._selector;
-    }
-}
+const napi_rs_1 = require("../../../common/napi-rs");
+const { ReturnData } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
 exports.ReturnData = ReturnData;
 //# sourceMappingURL=return-data.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/return-data.js.map b/internal/hardhat-network/provider/return-data.js.map
index 13650790fc28f6e10217ffe8a8a1e2ddcf1acaa0..b2676f6213177dfb2541ca595ef0626abef645df 100644
--- a/internal/hardhat-network/provider/return-data.js.map
+++ b/internal/hardhat-network/provider/return-data.js.map
@@ -1 +1 @@
-{"version":3,"file":"return-data.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/provider/return-data.ts"],"names":[],"mappings":";;;AAAA,sEAAiE;AACjE,8CAA2D;AAE3D,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;AAEhD,4BAA4B;AAC5B,MAAM,cAAc,GAAG,UAAU,CAAC;AAClC,6BAA6B;AAC7B,MAAM,cAAc,GAAG,UAAU,CAAC;AAElC;;GAEG;AACH,MAAa,UAAU;IAGrB,YAAmB,KAAiB;QAAjB,UAAK,GAAL,KAAK,CAAY;QAClC,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACrB,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;SACjE;IACH,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC;IACjC,CAAC;IAEM,eAAe,CAAC,QAAoB;QACzC,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;YAChC,OAAO,KAAK,CAAC;SACd;QAED,OAAO,IAAI,CAAC,SAAS,KAAK,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAClE,CAAC;IAEM,iBAAiB;QACtB,OAAO,IAAI,CAAC,SAAS,KAAK,cAAc,CAAC;IAC3C,CAAC;IAEM,iBAAiB;QACtB,OAAO,IAAI,CAAC,SAAS,KAAK,cAAc,CAAC;IAC3C,CAAC;IAEM,WAAW;QAChB,IAAI,IAAI,CAAC,OAAO,EAAE,EAAE;YAClB,OAAO,EAAE,CAAC;SACX;QAED,IAAA,+BAAsB,EACpB,IAAI,CAAC,SAAS,KAAK,cAAc,EACjC,4CAA4C,CAC7C,CAAC;QAEF,MAAM,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAE/D,CAAC;QAEF,OAAO,YAAY,CAAC;IACtB,CAAC;IAEM,WAAW;QAChB,IAAA,+BAAsB,EACpB,IAAI,CAAC,SAAS,KAAK,cAAc,EACjC,6CAA6C,CAC9C,CAAC;QAEF,4EAA4E;QAC5E,MAAM,SAAS,GAAG,IAAA,+BAAa,EAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QAErD,OAAO,SAAS,CAAC;IACnB,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;CACF;AA7DD,gCA6DC"}
\ No newline at end of file
+{"version":3,"file":"return-data.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/provider/return-data.ts"],"names":[],"mappings":";;;AAAA,qDAA8D;AAE9D,MAAM,EAAE,UAAU,EAAE,GAAG,IAAA,6BAAmB,EACxC,sBAAsB,CACkB,CAAC;AAElC,gCAAU"}
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/vm/exit.d.ts b/internal/hardhat-network/provider/vm/exit.d.ts
index 5c0ee2d557d2a93198ca4779b8b435fe6714cb88..736cf00d40e1a118cddd83638fe6c2adb6e33c84 100644
--- a/internal/hardhat-network/provider/vm/exit.d.ts
+++ b/internal/hardhat-network/provider/vm/exit.d.ts
@@ -1,21 +1,3 @@
-import type { ExceptionalHalt, SuccessReason } from "@nomicfoundation/edr";
-export declare enum ExitCode {
-    SUCCESS = 0,
-    REVERT = 1,
-    OUT_OF_GAS = 2,
-    INTERNAL_ERROR = 3,
-    INVALID_OPCODE = 4,
-    STACK_UNDERFLOW = 5,
-    CODESIZE_EXCEEDS_MAXIMUM = 6,
-    CREATE_COLLISION = 7,
-    STATIC_STATE_CHANGE = 8
-}
-export declare class Exit {
-    kind: ExitCode;
-    static fromEdrSuccessReason(reason: SuccessReason): Exit;
-    static fromEdrExceptionalHalt(halt: ExceptionalHalt): Exit;
-    constructor(kind: ExitCode);
-    isError(): boolean;
-    getReason(): string;
-}
+declare const ExitCode: typeof import("@nomicfoundation/edr").ExitCode;
+export { ExitCode };
 //# sourceMappingURL=exit.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/vm/exit.d.ts.map b/internal/hardhat-network/provider/vm/exit.d.ts.map
index 3d864ad7e460fa334c8a27ff242528a9fb7b10a8..cd3718d6291357bfa1e5ac4783ff797324163079 100644
--- a/internal/hardhat-network/provider/vm/exit.d.ts.map
+++ b/internal/hardhat-network/provider/vm/exit.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"exit.d.ts","sourceRoot":"","sources":["../../../../src/internal/hardhat-network/provider/vm/exit.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,eAAe,EAAE,aAAa,EAAE,MAAM,sBAAsB,CAAC;AAI3E,oBAAY,QAAQ;IAClB,OAAO,IAAA;IACP,MAAM,IAAA;IACN,UAAU,IAAA;IACV,cAAc,IAAA;IACd,cAAc,IAAA;IACd,eAAe,IAAA;IACf,wBAAwB,IAAA;IACxB,gBAAgB,IAAA;IAChB,mBAAmB,IAAA;CACpB;AAED,qBAAa,IAAI;IAgDI,IAAI,EAAE,QAAQ;WA/CnB,oBAAoB,CAAC,MAAM,EAAE,aAAa,GAAG,IAAI;WAgBjD,sBAAsB,CAAC,IAAI,EAAE,eAAe,GAAG,IAAI;gBA+B9C,IAAI,EAAE,QAAQ;IAE1B,OAAO,IAAI,OAAO;IAIlB,SAAS,IAAI,MAAM;CAwB3B"}
\ No newline at end of file
+{"version":3,"file":"exit.d.ts","sourceRoot":"","sources":["../../../../src/internal/hardhat-network/provider/vm/exit.ts"],"names":[],"mappings":"AAEA,QAAA,MAAQ,QAAQ,gDAE0B,CAAC;AAE3C,OAAO,EAAE,QAAQ,EAAE,CAAC"}
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/vm/exit.js b/internal/hardhat-network/provider/vm/exit.js
index 6101c69b5f043fb33e120c07780182e36c445c08..8d8f63bd90f4ab40727da6199386642929fbab01 100644
--- a/internal/hardhat-network/provider/vm/exit.js
+++ b/internal/hardhat-network/provider/vm/exit.js
@@ -1,82 +1,7 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.Exit = exports.ExitCode = void 0;
+exports.ExitCode = void 0;
 const napi_rs_1 = require("../../../../common/napi-rs");
-var ExitCode;
-(function (ExitCode) {
-    ExitCode[ExitCode["SUCCESS"] = 0] = "SUCCESS";
-    ExitCode[ExitCode["REVERT"] = 1] = "REVERT";
-    ExitCode[ExitCode["OUT_OF_GAS"] = 2] = "OUT_OF_GAS";
-    ExitCode[ExitCode["INTERNAL_ERROR"] = 3] = "INTERNAL_ERROR";
-    ExitCode[ExitCode["INVALID_OPCODE"] = 4] = "INVALID_OPCODE";
-    ExitCode[ExitCode["STACK_UNDERFLOW"] = 5] = "STACK_UNDERFLOW";
-    ExitCode[ExitCode["CODESIZE_EXCEEDS_MAXIMUM"] = 6] = "CODESIZE_EXCEEDS_MAXIMUM";
-    ExitCode[ExitCode["CREATE_COLLISION"] = 7] = "CREATE_COLLISION";
-    ExitCode[ExitCode["STATIC_STATE_CHANGE"] = 8] = "STATIC_STATE_CHANGE";
-})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
-class Exit {
-    static fromEdrSuccessReason(reason) {
-        const { SuccessReason } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
-        switch (reason) {
-            case 0 /* SuccessReason.Stop */:
-            case 1 /* SuccessReason.Return */:
-            case 2 /* SuccessReason.SelfDestruct */:
-            case 3 /* SuccessReason.EofReturnContract */:
-                return new Exit(ExitCode.SUCCESS);
-        }
-        const _exhaustiveCheck = reason;
-    }
-    static fromEdrExceptionalHalt(halt) {
-        const { ExceptionalHalt } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
-        switch (halt) {
-            case 0 /* ExceptionalHalt.OutOfGas */:
-                return new Exit(ExitCode.OUT_OF_GAS);
-            case 1 /* ExceptionalHalt.OpcodeNotFound */:
-            case 2 /* ExceptionalHalt.InvalidFEOpcode */:
-            // Returned when an opcode is not implemented for the hardfork
-            case 4 /* ExceptionalHalt.NotActivated */:
-                return new Exit(ExitCode.INVALID_OPCODE);
-            case 5 /* ExceptionalHalt.StackUnderflow */:
-                return new Exit(ExitCode.STACK_UNDERFLOW);
-            case 8 /* ExceptionalHalt.CreateCollision */:
-                return new Exit(ExitCode.CREATE_COLLISION);
-            case 11 /* ExceptionalHalt.CreateContractSizeLimit */:
-                return new Exit(ExitCode.CODESIZE_EXCEEDS_MAXIMUM);
-            default: {
-                // eslint-disable-next-line @nomicfoundation/hardhat-internal-rules/only-hardhat-error
-                throw new Error(`Unmatched EDR exceptional halt: ${halt}`);
-            }
-        }
-    }
-    constructor(kind) {
-        this.kind = kind;
-    }
-    isError() {
-        return this.kind !== ExitCode.SUCCESS;
-    }
-    getReason() {
-        switch (this.kind) {
-            case ExitCode.SUCCESS:
-                return "Success";
-            case ExitCode.REVERT:
-                return "Reverted";
-            case ExitCode.OUT_OF_GAS:
-                return "Out of gas";
-            case ExitCode.INTERNAL_ERROR:
-                return "Internal error";
-            case ExitCode.INVALID_OPCODE:
-                return "Invalid opcode";
-            case ExitCode.STACK_UNDERFLOW:
-                return "Stack underflow";
-            case ExitCode.CODESIZE_EXCEEDS_MAXIMUM:
-                return "Codesize exceeds maximum";
-            case ExitCode.CREATE_COLLISION:
-                return "Create collision";
-            case ExitCode.STATIC_STATE_CHANGE:
-                return "Static state change";
-        }
-        const _exhaustiveCheck = this.kind;
-    }
-}
-exports.Exit = Exit;
+const { ExitCode } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+exports.ExitCode = ExitCode;
 //# sourceMappingURL=exit.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/provider/vm/exit.js.map b/internal/hardhat-network/provider/vm/exit.js.map
index 38da993e39ce7f8c24425e0e7f7c04a673f559b9..f768a6f9c893aadca61c03bc1a50bb5479dd4517 100644
--- a/internal/hardhat-network/provider/vm/exit.js.map
+++ b/internal/hardhat-network/provider/vm/exit.js.map
@@ -1 +1 @@
-{"version":3,"file":"exit.js","sourceRoot":"","sources":["../../../../src/internal/hardhat-network/provider/vm/exit.ts"],"names":[],"mappings":";;;AAEA,wDAAiE;AAEjE,IAAY,QAUX;AAVD,WAAY,QAAQ;IAClB,6CAAO,CAAA;IACP,2CAAM,CAAA;IACN,mDAAU,CAAA;IACV,2DAAc,CAAA;IACd,2DAAc,CAAA;IACd,6DAAe,CAAA;IACf,+EAAwB,CAAA;IACxB,+DAAgB,CAAA;IAChB,qEAAmB,CAAA;AACrB,CAAC,EAVW,QAAQ,GAAR,gBAAQ,KAAR,gBAAQ,QAUnB;AAED,MAAa,IAAI;IACR,MAAM,CAAC,oBAAoB,CAAC,MAAqB;QACtD,MAAM,EAAE,aAAa,EAAE,GAAG,IAAA,6BAAmB,EAC3C,sBAAsB,CACkB,CAAC;QAE3C,QAAQ,MAAM,EAAE;YACd,gCAAwB;YACxB,kCAA0B;YAC1B,wCAAgC;YAChC;gBACE,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;SACrC;QAED,MAAM,gBAAgB,GAAU,MAAM,CAAC;IACzC,CAAC;IAEM,MAAM,CAAC,sBAAsB,CAAC,IAAqB;QACxD,MAAM,EAAE,eAAe,EAAE,GAAG,IAAA,6BAAmB,EAC7C,sBAAsB,CACkB,CAAC;QAE3C,QAAQ,IAAI,EAAE;YACZ;gBACE,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;YAEvC,4CAAoC;YACpC,6CAAqC;YACrC,8DAA8D;YAC9D;gBACE,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;YAE3C;gBACE,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YAE5C;gBACE,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;YAE7C;gBACE,OAAO,IAAI,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,CAAC;YAErD,OAAO,CAAC,CAAC;gBACP,sFAAsF;gBACtF,MAAM,IAAI,KAAK,CAAC,mCAAmC,IAAI,EAAE,CAAC,CAAC;aAC5D;SACF;IACH,CAAC;IAED,YAAmB,IAAc;QAAd,SAAI,GAAJ,IAAI,CAAU;IAAG,CAAC;IAE9B,OAAO;QACZ,OAAO,IAAI,CAAC,IAAI,KAAK,QAAQ,CAAC,OAAO,CAAC;IACxC,CAAC;IAEM,SAAS;QACd,QAAQ,IAAI,CAAC,IAAI,EAAE;YACjB,KAAK,QAAQ,CAAC,OAAO;gBACnB,OAAO,SAAS,CAAC;YACnB,KAAK,QAAQ,CAAC,MAAM;gBAClB,OAAO,UAAU,CAAC;YACpB,KAAK,QAAQ,CAAC,UAAU;gBACtB,OAAO,YAAY,CAAC;YACtB,KAAK,QAAQ,CAAC,cAAc;gBAC1B,OAAO,gBAAgB,CAAC;YAC1B,KAAK,QAAQ,CAAC,cAAc;gBAC1B,OAAO,gBAAgB,CAAC;YAC1B,KAAK,QAAQ,CAAC,eAAe;gBAC3B,OAAO,iBAAiB,CAAC;YAC3B,KAAK,QAAQ,CAAC,wBAAwB;gBACpC,OAAO,0BAA0B,CAAC;YACpC,KAAK,QAAQ,CAAC,gBAAgB;gBAC5B,OAAO,kBAAkB,CAAC;YAC5B,KAAK,QAAQ,CAAC,mBAAmB;gBAC/B,OAAO,qBAAqB,CAAC;SAChC;QAED,MAAM,gBAAgB,GAAU,IAAI,CAAC,IAAI,CAAC;IAC5C,CAAC;CACF;AA9ED,oBA8EC"}
\ No newline at end of file
+{"version":3,"file":"exit.js","sourceRoot":"","sources":["../../../../src/internal/hardhat-network/provider/vm/exit.ts"],"names":[],"mappings":";;;AAAA,wDAAiE;AAEjE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,6BAAmB,EACtC,sBAAsB,CACkB,CAAC;AAElC,4BAAQ"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/compiler-to-model.d.ts b/internal/hardhat-network/stack-traces/compiler-to-model.d.ts
index 7f73bc6ea06ac5a91320f8695ec51c5710d8f67a..e709f3feba9f3af3ce665f2ef24df35697a6c67d 100644
--- a/internal/hardhat-network/stack-traces/compiler-to-model.d.ts
+++ b/internal/hardhat-network/stack-traces/compiler-to-model.d.ts
@@ -1,4 +1,3 @@
-import { CompilerInput, CompilerOutput } from "../../../types";
-import { Bytecode } from "./model";
-export declare function createModelsAndDecodeBytecodes(solcVersion: string, compilerInput: CompilerInput, compilerOutput: CompilerOutput): Bytecode[];
+declare const createModelsAndDecodeBytecodes: typeof import("@nomicfoundation/edr").createModelsAndDecodeBytecodes;
+export { createModelsAndDecodeBytecodes };
 //# sourceMappingURL=compiler-to-model.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/compiler-to-model.d.ts.map b/internal/hardhat-network/stack-traces/compiler-to-model.d.ts.map
index 5d6df428138fcf902212b0d0e47ca8c809cfa893..8ef9c6fc14454b9f1d2c524e86f29a1eb039964d 100644
--- a/internal/hardhat-network/stack-traces/compiler-to-model.d.ts.map
+++ b/internal/hardhat-network/stack-traces/compiler-to-model.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"compiler-to-model.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/compiler-to-model.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,aAAa,EACb,cAAc,EAEf,MAAM,gBAAgB,CAAC;AAMxB,OAAO,EACL,QAAQ,EAST,MAAM,SAAS,CAAC;AAgBjB,wBAAgB,8BAA8B,CAC5C,WAAW,EAAE,MAAM,EACnB,aAAa,EAAE,aAAa,EAC5B,cAAc,EAAE,cAAc,GAC7B,QAAQ,EAAE,CAqBZ"}
\ No newline at end of file
+{"version":3,"file":"compiler-to-model.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/compiler-to-model.ts"],"names":[],"mappings":"AAEA,QAAA,MAAQ,8BAA8B,sEAEI,CAAC;AAE3C,OAAO,EAAE,8BAA8B,EAAE,CAAC"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/compiler-to-model.js b/internal/hardhat-network/stack-traces/compiler-to-model.js
index 29b4b8d1e0d42f70328c5c13963aaad25530f0c1..505a6aed9615ff94f3e31bebdb29a8f1c1a7f0f6 100644
--- a/internal/hardhat-network/stack-traces/compiler-to-model.js
+++ b/internal/hardhat-network/stack-traces/compiler-to-model.js
@@ -1,356 +1,7 @@
 "use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.createModelsAndDecodeBytecodes = void 0;
-const debug_1 = __importDefault(require("debug"));
-const library_utils_1 = require("./library-utils");
-const model_1 = require("./model");
-const source_maps_1 = require("./source-maps");
-const abi = require("ethereumjs-abi");
-const log = (0, debug_1.default)("hardhat:core:hardhat-network:compiler-to-model");
-function createModelsAndDecodeBytecodes(solcVersion, compilerInput, compilerOutput) {
-    const fileIdToSourceFile = new Map();
-    const contractIdToContract = new Map();
-    createSourcesModelFromAst(compilerOutput, compilerInput, fileIdToSourceFile, contractIdToContract);
-    const bytecodes = decodeBytecodes(solcVersion, compilerOutput, fileIdToSourceFile, contractIdToContract);
-    correctSelectors(bytecodes, compilerOutput);
-    return bytecodes;
-}
+const napi_rs_1 = require("../../../common/napi-rs");
+const { createModelsAndDecodeBytecodes } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
 exports.createModelsAndDecodeBytecodes = createModelsAndDecodeBytecodes;
-function createSourcesModelFromAst(compilerOutput, compilerInput, fileIdToSourceFile, contractIdToContract) {
-    const contractIdToLinearizedBaseContractIds = new Map();
-    // Create a `sourceName => contract => abi` mapping
-    const sourceNameToContractToAbi = new Map();
-    for (const [sourceName, contracts] of Object.entries(compilerOutput.contracts)) {
-        const contractToAbi = new Map();
-        sourceNameToContractToAbi.set(sourceName, contractToAbi);
-        for (const [contractName, contract] of Object.entries(contracts)) {
-            contractToAbi.set(contractName, contract.abi);
-        }
-    }
-    for (const [sourceName, source] of Object.entries(compilerOutput.sources)) {
-        const contractToAbi = sourceNameToContractToAbi.get(sourceName);
-        const file = new model_1.SourceFile(sourceName, compilerInput.sources[sourceName].content);
-        fileIdToSourceFile.set(source.id, file);
-        for (const node of source.ast.nodes) {
-            if (node.nodeType === "ContractDefinition") {
-                const contractType = contractKindToContractType(node.contractKind);
-                if (contractType === undefined) {
-                    continue;
-                }
-                const contractAbi = contractToAbi?.get(node.name);
-                processContractAstNode(file, node, fileIdToSourceFile, contractType, contractIdToContract, contractIdToLinearizedBaseContractIds, contractAbi);
-            }
-            // top-level functions
-            if (node.nodeType === "FunctionDefinition") {
-                processFunctionDefinitionAstNode(node, fileIdToSourceFile, undefined, file);
-            }
-        }
-    }
-    applyContractsInheritance(contractIdToContract, contractIdToLinearizedBaseContractIds);
-}
-function processContractAstNode(file, contractNode, fileIdToSourceFile, contractType, contractIdToContract, contractIdToLinearizedBaseContractIds, contractAbi) {
-    const contractLocation = astSrcToSourceLocation(contractNode.src, fileIdToSourceFile);
-    const contract = new model_1.Contract(contractNode.name, contractType, contractLocation);
-    contractIdToContract.set(contractNode.id, contract);
-    contractIdToLinearizedBaseContractIds.set(contractNode.id, contractNode.linearizedBaseContracts);
-    file.addContract(contract);
-    for (const node of contractNode.nodes) {
-        if (node.nodeType === "FunctionDefinition") {
-            const functionAbis = contractAbi?.filter((abiEntry) => abiEntry.name === node.name);
-            processFunctionDefinitionAstNode(node, fileIdToSourceFile, contract, file, functionAbis);
-        }
-        else if (node.nodeType === "ModifierDefinition") {
-            processModifierDefinitionAstNode(node, fileIdToSourceFile, contract, file);
-        }
-        else if (node.nodeType === "VariableDeclaration") {
-            const getterAbi = contractAbi?.find((abiEntry) => abiEntry.name === node.name);
-            processVariableDeclarationAstNode(node, fileIdToSourceFile, contract, file, getterAbi);
-        }
-    }
-}
-function processFunctionDefinitionAstNode(functionDefinitionNode, fileIdToSourceFile, contract, file, functionAbis) {
-    if (functionDefinitionNode.implemented === false) {
-        return;
-    }
-    const functionType = functionDefinitionKindToFunctionType(functionDefinitionNode.kind);
-    const functionLocation = astSrcToSourceLocation(functionDefinitionNode.src, fileIdToSourceFile);
-    const visibility = astVisibilityToVisibility(functionDefinitionNode.visibility);
-    let selector;
-    if (functionType === model_1.ContractFunctionType.FUNCTION &&
-        (visibility === model_1.ContractFunctionVisibility.EXTERNAL ||
-            visibility === model_1.ContractFunctionVisibility.PUBLIC)) {
-        selector = astFunctionDefinitionToSelector(functionDefinitionNode);
-    }
-    // function can be overloaded, match the abi by the selector
-    const matchingFunctionAbi = functionAbis?.find((functionAbi) => {
-        if (functionAbi.name === undefined) {
-            return false;
-        }
-        const functionAbiSelector = abi.methodID(functionAbi.name, functionAbi.inputs?.map((input) => input.type) ?? []);
-        if (selector === undefined || functionAbiSelector === undefined) {
-            return false;
-        }
-        return selector.equals(functionAbiSelector);
-    });
-    const paramTypes = matchingFunctionAbi?.inputs?.map((input) => input.type);
-    const cf = new model_1.ContractFunction(functionDefinitionNode.name, functionType, functionLocation, contract, visibility, functionDefinitionNode.stateMutability === "payable", selector, paramTypes);
-    if (contract !== undefined) {
-        contract.addLocalFunction(cf);
-    }
-    file.addFunction(cf);
-}
-function processModifierDefinitionAstNode(modifierDefinitionNode, fileIdToSourceFile, contract, file) {
-    const functionLocation = astSrcToSourceLocation(modifierDefinitionNode.src, fileIdToSourceFile);
-    const cf = new model_1.ContractFunction(modifierDefinitionNode.name, model_1.ContractFunctionType.MODIFIER, functionLocation, contract);
-    contract.addLocalFunction(cf);
-    file.addFunction(cf);
-}
-function canonicalAbiTypeForElementaryOrUserDefinedTypes(keyType) {
-    if (isElementaryType(keyType)) {
-        return toCanonicalAbiType(keyType.name);
-    }
-    if (isEnumType(keyType)) {
-        return "uint256";
-    }
-    if (isContractType(keyType)) {
-        return "address";
-    }
-    return undefined;
-}
-function getPublicVariableSelectorFromDeclarationAstNode(variableDeclaration) {
-    if (variableDeclaration.functionSelector !== undefined) {
-        return Buffer.from(variableDeclaration.functionSelector, "hex");
-    }
-    const paramTypes = [];
-    // VariableDeclaration nodes for function parameters or state variables will always
-    // have their typeName fields defined.
-    let nextType = variableDeclaration.typeName;
-    while (true) {
-        if (nextType.nodeType === "Mapping") {
-            const canonicalType = canonicalAbiTypeForElementaryOrUserDefinedTypes(nextType.keyType);
-            paramTypes.push(canonicalType);
-            nextType = nextType.valueType;
-        }
-        else {
-            if (nextType.nodeType === "ArrayTypeName") {
-                paramTypes.push("uint256");
-            }
-            break;
-        }
-    }
-    return abi.methodID(variableDeclaration.name, paramTypes);
-}
-function processVariableDeclarationAstNode(variableDeclarationNode, fileIdToSourceFile, contract, file, getterAbi) {
-    const visibility = astVisibilityToVisibility(variableDeclarationNode.visibility);
-    // Variables can't be external
-    if (visibility !== model_1.ContractFunctionVisibility.PUBLIC) {
-        return;
-    }
-    const functionLocation = astSrcToSourceLocation(variableDeclarationNode.src, fileIdToSourceFile);
-    const paramTypes = getterAbi?.inputs?.map((input) => input.type);
-    const cf = new model_1.ContractFunction(variableDeclarationNode.name, model_1.ContractFunctionType.GETTER, functionLocation, contract, visibility, false, // Getters aren't payable
-    getPublicVariableSelectorFromDeclarationAstNode(variableDeclarationNode), paramTypes);
-    contract.addLocalFunction(cf);
-    file.addFunction(cf);
-}
-function applyContractsInheritance(contractIdToContract, contractIdToLinearizedBaseContractIds) {
-    for (const [cid, contract] of contractIdToContract.entries()) {
-        const inheritanceIds = contractIdToLinearizedBaseContractIds.get(cid);
-        for (const baseId of inheritanceIds) {
-            const baseContract = contractIdToContract.get(baseId);
-            if (baseContract === undefined) {
-                // This list includes interface, which we don't model
-                continue;
-            }
-            contract.addNextLinearizedBaseContract(baseContract);
-        }
-    }
-}
-function decodeBytecodes(solcVersion, compilerOutput, fileIdToSourceFile, contractIdToContract) {
-    const bytecodes = [];
-    for (const contract of contractIdToContract.values()) {
-        const contractFile = contract.location.file.sourceName;
-        const contractEvmOutput = compilerOutput.contracts[contractFile][contract.name].evm;
-        const contractAbiOutput = compilerOutput.contracts[contractFile][contract.name].abi;
-        for (const abiItem of contractAbiOutput) {
-            if (abiItem.type === "error") {
-                const customError = model_1.CustomError.fromABI(abiItem.name, abiItem.inputs);
-                if (customError !== undefined) {
-                    contract.addCustomError(customError);
-                }
-                else {
-                    log(`Couldn't build CustomError for error '${abiItem.name}'`);
-                }
-            }
-        }
-        // This is an abstract contract
-        if (contractEvmOutput.bytecode.object === "") {
-            continue;
-        }
-        const deploymentBytecode = decodeEvmBytecode(contract, solcVersion, true, contractEvmOutput.bytecode, fileIdToSourceFile);
-        const runtimeBytecode = decodeEvmBytecode(contract, solcVersion, false, contractEvmOutput.deployedBytecode, fileIdToSourceFile);
-        bytecodes.push(deploymentBytecode);
-        bytecodes.push(runtimeBytecode);
-    }
-    return bytecodes;
-}
-function decodeEvmBytecode(contract, solcVersion, isDeployment, compilerBytecode, fileIdToSourceFile) {
-    const libraryAddressPositions = (0, library_utils_1.getLibraryAddressPositions)(compilerBytecode);
-    const immutableReferences = compilerBytecode.immutableReferences !== undefined
-        ? Object.values(compilerBytecode.immutableReferences).reduce((previousValue, currentValue) => [...previousValue, ...currentValue], [])
-        : [];
-    const normalizedCode = (0, library_utils_1.normalizeCompilerOutputBytecode)(compilerBytecode.object, libraryAddressPositions);
-    const instructions = (0, source_maps_1.decodeInstructions)(normalizedCode, compilerBytecode.sourceMap, fileIdToSourceFile, isDeployment);
-    return new model_1.Bytecode(contract, isDeployment, normalizedCode, instructions, libraryAddressPositions, immutableReferences, solcVersion);
-}
-function astSrcToSourceLocation(src, fileIdToSourceFile) {
-    const [offset, length, fileId] = src.split(":").map((p) => +p);
-    const file = fileIdToSourceFile.get(fileId);
-    if (file === undefined) {
-        return undefined;
-    }
-    return new model_1.SourceLocation(file, offset, length);
-}
-function contractKindToContractType(contractKind) {
-    if (contractKind === "library") {
-        return model_1.ContractType.LIBRARY;
-    }
-    if (contractKind === "contract") {
-        return model_1.ContractType.CONTRACT;
-    }
-    return undefined;
-}
-function astVisibilityToVisibility(visibility) {
-    if (visibility === "private") {
-        return model_1.ContractFunctionVisibility.PRIVATE;
-    }
-    if (visibility === "internal") {
-        return model_1.ContractFunctionVisibility.INTERNAL;
-    }
-    if (visibility === "public") {
-        return model_1.ContractFunctionVisibility.PUBLIC;
-    }
-    return model_1.ContractFunctionVisibility.EXTERNAL;
-}
-function functionDefinitionKindToFunctionType(kind) {
-    if (kind === "constructor") {
-        return model_1.ContractFunctionType.CONSTRUCTOR;
-    }
-    if (kind === "fallback") {
-        return model_1.ContractFunctionType.FALLBACK;
-    }
-    if (kind === "receive") {
-        return model_1.ContractFunctionType.RECEIVE;
-    }
-    if (kind === "freeFunction") {
-        return model_1.ContractFunctionType.FREE_FUNCTION;
-    }
-    return model_1.ContractFunctionType.FUNCTION;
-}
-function astFunctionDefinitionToSelector(functionDefinition) {
-    const paramTypes = [];
-    // The function selector is available in solc versions >=0.6.0
-    if (functionDefinition.functionSelector !== undefined) {
-        return Buffer.from(functionDefinition.functionSelector, "hex");
-    }
-    for (const param of functionDefinition.parameters.parameters) {
-        if (isContractType(param)) {
-            paramTypes.push("address");
-            continue;
-        }
-        // TODO: implement ABIv2 structs parsing
-        // This might mean we need to parse struct definitions before
-        // resolving types and trying to calculate function selectors.
-        // if (isStructType(param)) {
-        //   paramTypes.push(something);
-        //   continue;
-        // }
-        if (isEnumType(param)) {
-            // TODO: If the enum has >= 256 elements this will fail. It should be a uint16. This is
-            //  complicated, as enums can be inherited. Fortunately, if multiple parent contracts
-            //  define the same enum, solc fails to compile.
-            paramTypes.push("uint8");
-            continue;
-        }
-        // The rest of the function parameters always have their typeName node defined
-        const typename = param.typeName;
-        if (typename.nodeType === "ArrayTypeName" ||
-            typename.nodeType === "FunctionTypeName" ||
-            typename.nodeType === "Mapping") {
-            paramTypes.push(typename.typeDescriptions.typeString);
-            continue;
-        }
-        paramTypes.push(toCanonicalAbiType(typename.name));
-    }
-    return abi.methodID(functionDefinition.name, paramTypes);
-}
-function isContractType(param) {
-    return ((param.typeName?.nodeType === "UserDefinedTypeName" ||
-        param?.nodeType === "UserDefinedTypeName") &&
-        param.typeDescriptions?.typeString !== undefined &&
-        param.typeDescriptions.typeString.startsWith("contract "));
-}
-function isEnumType(param) {
-    return ((param.typeName?.nodeType === "UserDefinedTypeName" ||
-        param?.nodeType === "UserDefinedTypeName") &&
-        param.typeDescriptions?.typeString !== undefined &&
-        param.typeDescriptions.typeString.startsWith("enum "));
-}
-function isElementaryType(param) {
-    return (param.type === "ElementaryTypeName" ||
-        param.nodeType === "ElementaryTypeName");
-}
-function toCanonicalAbiType(type) {
-    if (type.startsWith("int[")) {
-        return `int256${type.slice(3)}`;
-    }
-    if (type === "int") {
-        return "int256";
-    }
-    if (type.startsWith("uint[")) {
-        return `uint256${type.slice(4)}`;
-    }
-    if (type === "uint") {
-        return "uint256";
-    }
-    if (type.startsWith("fixed[")) {
-        return `fixed128x128${type.slice(5)}`;
-    }
-    if (type === "fixed") {
-        return "fixed128x128";
-    }
-    if (type.startsWith("ufixed[")) {
-        return `ufixed128x128${type.slice(6)}`;
-    }
-    if (type === "ufixed") {
-        return "ufixed128x128";
-    }
-    return type;
-}
-function correctSelectors(bytecodes, compilerOutput) {
-    for (const bytecode of bytecodes) {
-        if (bytecode.isDeployment) {
-            continue;
-        }
-        const contract = bytecode.contract;
-        const methodIdentifiers = compilerOutput.contracts[contract.location.file.sourceName][contract.name]
-            .evm.methodIdentifiers;
-        for (const [signature, hexSelector] of Object.entries(methodIdentifiers)) {
-            const functionName = signature.slice(0, signature.indexOf("("));
-            const selector = Buffer.from(hexSelector, "hex");
-            const contractFunction = contract.getFunctionFromSelector(selector);
-            if (contractFunction !== undefined) {
-                continue;
-            }
-            const fixedSelector = contract.correctSelector(functionName, selector);
-            if (!fixedSelector) {
-                // eslint-disable-next-line @nomicfoundation/hardhat-internal-rules/only-hardhat-error
-                throw new Error(`Failed to compute the selector one or more implementations of ${contract.name}#${functionName}. Hardhat Network can automatically fix this problem if you don't use function overloading.`);
-            }
-        }
-    }
-}
 //# sourceMappingURL=compiler-to-model.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/compiler-to-model.js.map b/internal/hardhat-network/stack-traces/compiler-to-model.js.map
index 84ef3e0b7f068a5e3a5757df847a1ae8179719c7..31d993cdf32975ef1389d3fe017604b193bc4980 100644
--- a/internal/hardhat-network/stack-traces/compiler-to-model.js.map
+++ b/internal/hardhat-network/stack-traces/compiler-to-model.js.map
@@ -1 +1 @@
-{"version":3,"file":"compiler-to-model.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/compiler-to-model.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"compiler-to-model.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/compiler-to-model.ts"],"names":[],"mappings":";;;AAAA,qDAA8D;AAE9D,MAAM,EAAE,8BAA8B,EAAE,GAAG,IAAA,6BAAmB,EAC5D,sBAAsB,CACkB,CAAC;AAElC,wEAA8B"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/debug.d.ts b/internal/hardhat-network/stack-traces/debug.d.ts
index d08d9bf9fa298084d84ead93fd5027b97d909aeb..250c7240aa6846a3423ca4e4a036ac9b5fed9606 100644
--- a/internal/hardhat-network/stack-traces/debug.d.ts
+++ b/internal/hardhat-network/stack-traces/debug.d.ts
@@ -1,8 +1,3 @@
-import { CallMessageTrace, CreateMessageTrace, MessageTrace, PrecompileMessageTrace } from "./message-trace";
-import { SolidityStackTrace } from "./solidity-stack-trace";
-export declare function printMessageTrace(trace: MessageTrace, depth?: number): void;
-export declare function printCreateTrace(trace: CreateMessageTrace, depth: number): void;
-export declare function printPrecompileTrace(trace: PrecompileMessageTrace, depth: number): void;
-export declare function printCallTrace(trace: CallMessageTrace, depth: number): void;
-export declare function printStackTrace(trace: SolidityStackTrace): void;
+declare const printMessageTrace: typeof import("@nomicfoundation/edr").printMessageTrace, printStackTrace: typeof import("@nomicfoundation/edr").printStackTrace;
+export { printMessageTrace, printStackTrace };
 //# sourceMappingURL=debug.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/debug.d.ts.map b/internal/hardhat-network/stack-traces/debug.d.ts.map
index 967ed191a2c3239b887083f0afe66c002a218713..8df51b131c552b93aaaa77e1a9b6403ea99af273 100644
--- a/internal/hardhat-network/stack-traces/debug.d.ts.map
+++ b/internal/hardhat-network/stack-traces/debug.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"debug.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/debug.ts"],"names":[],"mappings":"AAGA,OAAO,EACL,gBAAgB,EAChB,kBAAkB,EAIlB,YAAY,EACZ,sBAAsB,EACvB,MAAM,iBAAiB,CAAC;AAGzB,OAAO,EACL,kBAAkB,EAGnB,MAAM,wBAAwB,CAAC;AAIhC,wBAAgB,iBAAiB,CAAC,KAAK,EAAE,YAAY,EAAE,KAAK,SAAI,QAY/D;AAED,wBAAgB,gBAAgB,CAAC,KAAK,EAAE,kBAAkB,EAAE,KAAK,EAAE,MAAM,QAgCxE;AAED,wBAAgB,oBAAoB,CAClC,KAAK,EAAE,sBAAsB,EAC7B,KAAK,EAAE,MAAM,QAcd;AAED,wBAAgB,cAAc,CAAC,KAAK,EAAE,gBAAgB,EAAE,KAAK,EAAE,MAAM,QAyBpE;AA4ED,wBAAgB,eAAe,CAAC,KAAK,EAAE,kBAAkB,QA8BxD"}
\ No newline at end of file
+{"version":3,"file":"debug.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/debug.ts"],"names":[],"mappings":"AAEA,QAAA,MAAQ,iBAAiB,2DAAE,eAAe,uDAEA,CAAC;AAE3C,OAAO,EAAE,iBAAiB,EAAE,eAAe,EAAE,CAAC"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/debug.js b/internal/hardhat-network/stack-traces/debug.js
index d0ee28a6c8f2eb4137e9dd9858b0c806896659b0..174709d5296f4e26e80517eb05c241479f3a3e96 100644
--- a/internal/hardhat-network/stack-traces/debug.js
+++ b/internal/hardhat-network/stack-traces/debug.js
@@ -1,148 +1,8 @@
 "use strict";
-var __importDefault = (this && this.__importDefault) || function (mod) {
-    return (mod && mod.__esModule) ? mod : { "default": mod };
-};
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.printStackTrace = exports.printCallTrace = exports.printPrecompileTrace = exports.printCreateTrace = exports.printMessageTrace = void 0;
-const ethereumjs_util_1 = require("@nomicfoundation/ethereumjs-util");
-const chalk_1 = __importDefault(require("chalk"));
-const message_trace_1 = require("./message-trace");
-const model_1 = require("./model");
-const opcodes_1 = require("./opcodes");
-const solidity_stack_trace_1 = require("./solidity-stack-trace");
-const MARGIN_SPACE = 6;
-function printMessageTrace(trace, depth = 0) {
-    console.log("");
-    if ((0, message_trace_1.isCreateTrace)(trace)) {
-        printCreateTrace(trace, depth);
-    }
-    else if ((0, message_trace_1.isPrecompileTrace)(trace)) {
-        printPrecompileTrace(trace, depth);
-    }
-    else {
-        printCallTrace(trace, depth);
-    }
-    console.log("");
-}
+exports.printStackTrace = exports.printMessageTrace = void 0;
+const napi_rs_1 = require("../../../common/napi-rs");
+const { printMessageTrace, printStackTrace } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
 exports.printMessageTrace = printMessageTrace;
-function printCreateTrace(trace, depth) {
-    const margin = "".padStart(depth * MARGIN_SPACE);
-    console.log(`${margin}Create trace`);
-    if (trace.bytecode !== undefined) {
-        console.log(`${margin} deploying contract: ${trace.bytecode.contract.location.file.sourceName}:${trace.bytecode.contract.name}`);
-        console.log(`${margin} code: ${(0, ethereumjs_util_1.bytesToHex)(trace.code)}`);
-    }
-    else {
-        console.log(`${margin} unrecognized deployment code: ${(0, ethereumjs_util_1.bytesToHex)(trace.code)}`);
-    }
-    console.log(`${margin} value: ${trace.value.toString(10)}`);
-    if (trace.deployedContract !== undefined) {
-        console.log(`${margin} contract address: ${(0, ethereumjs_util_1.bytesToHex)(trace.deployedContract)}`);
-    }
-    if (trace.exit.isError()) {
-        console.log(`${margin} error: ${trace.exit.getReason()}`);
-        // The return data is the deployed-bytecode if there was no error, so we don't show it
-        console.log(`${margin} returnData: ${(0, ethereumjs_util_1.bytesToHex)(trace.returnData)}`);
-    }
-    traceSteps(trace, depth);
-}
-exports.printCreateTrace = printCreateTrace;
-function printPrecompileTrace(trace, depth) {
-    const margin = "".padStart(depth * MARGIN_SPACE);
-    console.log(`${margin}Precompile trace`);
-    console.log(`${margin} precompile number: ${trace.precompile}`);
-    console.log(`${margin} value: ${trace.value.toString(10)}`);
-    console.log(`${margin} calldata: ${(0, ethereumjs_util_1.bytesToHex)(trace.calldata)}`);
-    if (trace.exit.isError()) {
-        console.log(`${margin} error: ${trace.exit.getReason()}`);
-    }
-    console.log(`${margin} returnData: ${(0, ethereumjs_util_1.bytesToHex)(trace.returnData)}`);
-}
-exports.printPrecompileTrace = printPrecompileTrace;
-function printCallTrace(trace, depth) {
-    const margin = "".padStart(depth * MARGIN_SPACE);
-    console.log(`${margin}Call trace`);
-    if (trace.bytecode !== undefined) {
-        console.log(`${margin} calling contract: ${trace.bytecode.contract.location.file.sourceName}:${trace.bytecode.contract.name}`);
-    }
-    else {
-        console.log(`${margin} unrecognized contract code: ${(0, ethereumjs_util_1.bytesToHex)(trace.code)}`);
-        console.log(`${margin} contract: ${(0, ethereumjs_util_1.bytesToHex)(trace.address)}`);
-    }
-    console.log(`${margin} value: ${trace.value.toString(10)}`);
-    console.log(`${margin} calldata: ${(0, ethereumjs_util_1.bytesToHex)(trace.calldata)}`);
-    if (trace.exit.isError()) {
-        console.log(`${margin} error: ${trace.exit.getReason()}`);
-    }
-    console.log(`${margin} returnData: ${(0, ethereumjs_util_1.bytesToHex)(trace.returnData)}`);
-    traceSteps(trace, depth);
-}
-exports.printCallTrace = printCallTrace;
-function traceSteps(trace, depth) {
-    const margin = "".padStart(depth * MARGIN_SPACE);
-    console.log(`${margin} steps:`);
-    console.log("");
-    for (const step of trace.steps) {
-        if ((0, message_trace_1.isEvmStep)(step)) {
-            const pc = step.pc.toString(10).padStart(3, "0").padStart(5);
-            if (trace.bytecode !== undefined) {
-                const inst = trace.bytecode.getInstruction(step.pc);
-                let location = "";
-                if (inst.location !== undefined) {
-                    location += inst.location.file.sourceName;
-                    const func = inst.location.getContainingFunction();
-                    if (func !== undefined) {
-                        location += `:${func.contract?.name ?? func.location.file.sourceName}:${func.name}`;
-                    }
-                    location += `   -  ${inst.location.offset}:${inst.location.length}`;
-                }
-                if ((0, opcodes_1.isJump)(inst.opcode)) {
-                    const jump = inst.jumpType !== model_1.JumpType.NOT_JUMP
-                        ? chalk_1.default.bold(`(${model_1.JumpType[inst.jumpType]})`)
-                        : "";
-                    console.log(`${margin}  ${pc}   ${opcodes_1.Opcode[inst.opcode]} ${jump}`.padEnd(50), location);
-                }
-                else if ((0, opcodes_1.isPush)(inst.opcode)) {
-                    console.log(`${margin}  ${pc}   ${opcodes_1.Opcode[inst.opcode]} ${(0, ethereumjs_util_1.bytesToHex)(inst.pushData)}`.padEnd(50), location);
-                }
-                else {
-                    console.log(`${margin}  ${pc}   ${opcodes_1.Opcode[inst.opcode]}`.padEnd(50), location);
-                }
-            }
-            else {
-                console.log(`${margin}  ${pc}`);
-            }
-        }
-        else {
-            printMessageTrace(step, depth + 1);
-        }
-    }
-}
-function flattenSourceReference(sourceReference) {
-    if (sourceReference === undefined) {
-        return undefined;
-    }
-    return {
-        ...sourceReference,
-        file: sourceReference.sourceName,
-    };
-}
-function printStackTrace(trace) {
-    const withDecodedMessages = trace.map((entry) => entry.type === solidity_stack_trace_1.StackTraceEntryType.REVERT_ERROR
-        ? { ...entry, message: entry.message.decodeError() }
-        : entry);
-    const withHexAddress = withDecodedMessages.map((entry) => "address" in entry
-        ? { ...entry, address: (0, ethereumjs_util_1.bytesToHex)(entry.address) }
-        : entry);
-    const withTextualType = withHexAddress.map((entry) => ({
-        ...entry,
-        type: solidity_stack_trace_1.StackTraceEntryType[entry.type],
-    }));
-    const withFlattenedSourceReferences = withTextualType.map((entry) => ({
-        ...entry,
-        sourceReference: flattenSourceReference(entry.sourceReference),
-    }));
-    console.log(JSON.stringify(withFlattenedSourceReferences, (key, value) => (typeof value === "bigint" ? value.toString() : value), 2));
-}
 exports.printStackTrace = printStackTrace;
 //# sourceMappingURL=debug.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/debug.js.map b/internal/hardhat-network/stack-traces/debug.js.map
index 5687ea1ba89513386b08df144e97e53d5b21af89..33b6b8cffb8fcd75aeec246eb1b4a1e76590ac35 100644
--- a/internal/hardhat-network/stack-traces/debug.js.map
+++ b/internal/hardhat-network/stack-traces/debug.js.map
@@ -1 +1 @@
-{"version":3,"file":"debug.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/debug.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"debug.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/debug.ts"],"names":[],"mappings":";;;AAAA,qDAA8D;AAE9D,MAAM,EAAE,iBAAiB,EAAE,eAAe,EAAE,GAAG,IAAA,6BAAmB,EAChE,sBAAsB,CACkB,CAAC;AAElC,8CAAiB;AAAE,0CAAe"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/library-utils.d.ts b/internal/hardhat-network/stack-traces/library-utils.d.ts
index 276b7c9d5556f1d7f62ddb07330bfb47f9dfaed8..4d39bbdfa5b419267dd45842683bab71864348c7 100644
--- a/internal/hardhat-network/stack-traces/library-utils.d.ts
+++ b/internal/hardhat-network/stack-traces/library-utils.d.ts
@@ -1,12 +1,3 @@
-/// <reference types="node" />
-import { CompilerOutputBytecode } from "../../../types";
-export declare function getLibraryAddressPositions(bytecodeOutput: CompilerOutputBytecode): number[];
-export declare function normalizeCompilerOutputBytecode(compilerOutputBytecodeObject: string, addressesPositions: number[]): Buffer;
-export declare function linkHexStringBytecode(code: string, address: string, position: number): string;
-export declare function zeroOutAddresses(code: Uint8Array, addressesPositions: number[]): Uint8Array;
-export declare function zeroOutSlices(code: Uint8Array, slices: Array<{
-    start: number;
-    length: number;
-}>): Uint8Array;
-export declare function normalizeLibraryRuntimeBytecodeIfNecessary(code: Uint8Array): Uint8Array;
+declare const linkHexStringBytecode: typeof import("@nomicfoundation/edr").linkHexStringBytecode;
+export { linkHexStringBytecode };
 //# sourceMappingURL=library-utils.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/library-utils.d.ts.map b/internal/hardhat-network/stack-traces/library-utils.d.ts.map
index e152c9c958bb5b68dabe49d4dcde39305e1dae14..888951c6c22021bc42bcd4f176faf91d21703eac 100644
--- a/internal/hardhat-network/stack-traces/library-utils.d.ts.map
+++ b/internal/hardhat-network/stack-traces/library-utils.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"library-utils.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/library-utils.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,sBAAsB,EAAE,MAAM,gBAAgB,CAAC;AAIxD,wBAAgB,0BAA0B,CACxC,cAAc,EAAE,sBAAsB,GACrC,MAAM,EAAE,CAWV;AAED,wBAAgB,+BAA+B,CAC7C,4BAA4B,EAAE,MAAM,EACpC,kBAAkB,EAAE,MAAM,EAAE,GAC3B,MAAM,CAWR;AAED,wBAAgB,qBAAqB,CACnC,IAAI,EAAE,MAAM,EACZ,OAAO,EAAE,MAAM,EACf,QAAQ,EAAE,MAAM,UAWjB;AAED,wBAAgB,gBAAgB,CAC9B,IAAI,EAAE,UAAU,EAChB,kBAAkB,EAAE,MAAM,EAAE,GAC3B,UAAU,CAOZ;AAED,wBAAgB,aAAa,CAC3B,IAAI,EAAE,UAAU,EAChB,MAAM,EAAE,KAAK,CAAC;IAAE,KAAK,EAAE,MAAM,CAAC;IAAC,MAAM,EAAE,MAAM,CAAA;CAAE,CAAC,GAC/C,UAAU,CAUZ;AAED,wBAAgB,0CAA0C,CACxD,IAAI,EAAE,UAAU,GACf,UAAU,CAWZ"}
\ No newline at end of file
+{"version":3,"file":"library-utils.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/library-utils.ts"],"names":[],"mappings":"AAEA,QAAA,MAAQ,qBAAqB,6DAEa,CAAC;AAE3C,OAAO,EAAE,qBAAqB,EAAE,CAAC"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/library-utils.js b/internal/hardhat-network/stack-traces/library-utils.js
index db42dd45000c9fbe8c7210fd3c0f1605d8363ec6..33595a11196f8372f4429252716a150993112ea5 100644
--- a/internal/hardhat-network/stack-traces/library-utils.js
+++ b/internal/hardhat-network/stack-traces/library-utils.js
@@ -1,65 +1,7 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.normalizeLibraryRuntimeBytecodeIfNecessary = exports.zeroOutSlices = exports.zeroOutAddresses = exports.linkHexStringBytecode = exports.normalizeCompilerOutputBytecode = exports.getLibraryAddressPositions = void 0;
-const opcodes_1 = require("./opcodes");
-function getLibraryAddressPositions(bytecodeOutput) {
-    const positions = [];
-    for (const libs of Object.values(bytecodeOutput.linkReferences)) {
-        for (const references of Object.values(libs)) {
-            for (const ref of references) {
-                positions.push(ref.start);
-            }
-        }
-    }
-    return positions;
-}
-exports.getLibraryAddressPositions = getLibraryAddressPositions;
-function normalizeCompilerOutputBytecode(compilerOutputBytecodeObject, addressesPositions) {
-    const ZERO_ADDRESS = "0000000000000000000000000000000000000000";
-    for (const position of addressesPositions) {
-        compilerOutputBytecodeObject = linkHexStringBytecode(compilerOutputBytecodeObject, ZERO_ADDRESS, position);
-    }
-    return Buffer.from(compilerOutputBytecodeObject, "hex");
-}
-exports.normalizeCompilerOutputBytecode = normalizeCompilerOutputBytecode;
-function linkHexStringBytecode(code, address, position) {
-    if (address.startsWith("0x")) {
-        address = address.substring(2);
-    }
-    return (code.substring(0, position * 2) +
-        address +
-        code.slice(position * 2 + address.length));
-}
+exports.linkHexStringBytecode = void 0;
+const napi_rs_1 = require("../../../common/napi-rs");
+const { linkHexStringBytecode } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
 exports.linkHexStringBytecode = linkHexStringBytecode;
-function zeroOutAddresses(code, addressesPositions) {
-    const addressesSlices = addressesPositions.map((start) => ({
-        start,
-        length: 20,
-    }));
-    return zeroOutSlices(code, addressesSlices);
-}
-exports.zeroOutAddresses = zeroOutAddresses;
-function zeroOutSlices(code, slices) {
-    for (const { start, length } of slices) {
-        code = Buffer.concat([
-            code.slice(0, start),
-            Buffer.alloc(length, 0),
-            code.slice(start + length),
-        ]);
-    }
-    return code;
-}
-exports.zeroOutSlices = zeroOutSlices;
-function normalizeLibraryRuntimeBytecodeIfNecessary(code) {
-    // Libraries' protection normalization:
-    // Solidity 0.4.20 introduced a protection to prevent libraries from being called directly.
-    // This is done by modifying the code on deployment, and hard-coding the contract address.
-    // The first instruction is a PUSH20 of the address, which we zero-out as a way of normalizing
-    // it. Note that it's also zeroed-out in the compiler output.
-    if (code[0] === opcodes_1.Opcode.PUSH20) {
-        return zeroOutAddresses(code, [1]);
-    }
-    return code;
-}
-exports.normalizeLibraryRuntimeBytecodeIfNecessary = normalizeLibraryRuntimeBytecodeIfNecessary;
 //# sourceMappingURL=library-utils.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/library-utils.js.map b/internal/hardhat-network/stack-traces/library-utils.js.map
index 20ac80eaddd2143758710ce259d5d7884abceaf5..642ecb92974bbff140bf858bc015024daa7954d3 100644
--- a/internal/hardhat-network/stack-traces/library-utils.js.map
+++ b/internal/hardhat-network/stack-traces/library-utils.js.map
@@ -1 +1 @@
-{"version":3,"file":"library-utils.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/library-utils.ts"],"names":[],"mappings":";;;AAEA,uCAAmC;AAEnC,SAAgB,0BAA0B,CACxC,cAAsC;IAEtC,MAAM,SAAS,GAAG,EAAE,CAAC;IACrB,KAAK,MAAM,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;QAC/D,KAAK,MAAM,UAAU,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;YAC5C,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;gBAC5B,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;aAC3B;SACF;KACF;IAED,OAAO,SAAS,CAAC;AACnB,CAAC;AAbD,gEAaC;AAED,SAAgB,+BAA+B,CAC7C,4BAAoC,EACpC,kBAA4B;IAE5B,MAAM,YAAY,GAAG,0CAA0C,CAAC;IAChE,KAAK,MAAM,QAAQ,IAAI,kBAAkB,EAAE;QACzC,4BAA4B,GAAG,qBAAqB,CAClD,4BAA4B,EAC5B,YAAY,EACZ,QAAQ,CACT,CAAC;KACH;IAED,OAAO,MAAM,CAAC,IAAI,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;AAC1D,CAAC;AAdD,0EAcC;AAED,SAAgB,qBAAqB,CACnC,IAAY,EACZ,OAAe,EACf,QAAgB;IAEhB,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QAC5B,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KAChC;IAED,OAAO,CACL,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,QAAQ,GAAG,CAAC,CAAC;QAC/B,OAAO;QACP,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAC1C,CAAC;AACJ,CAAC;AAdD,sDAcC;AAED,SAAgB,gBAAgB,CAC9B,IAAgB,EAChB,kBAA4B;IAE5B,MAAM,eAAe,GAAG,kBAAkB,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;QACzD,KAAK;QACL,MAAM,EAAE,EAAE;KACX,CAAC,CAAC,CAAC;IAEJ,OAAO,aAAa,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;AAC9C,CAAC;AAVD,4CAUC;AAED,SAAgB,aAAa,CAC3B,IAAgB,EAChB,MAAgD;IAEhD,KAAK,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,MAAM,EAAE;QACtC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC;YACnB,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC;YACpB,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;YACvB,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;SAC3B,CAAC,CAAC;KACJ;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAbD,sCAaC;AAED,SAAgB,0CAA0C,CACxD,IAAgB;IAEhB,uCAAuC;IACvC,2FAA2F;IAC3F,0FAA0F;IAC1F,8FAA8F;IAC9F,6DAA6D;IAC7D,IAAI,IAAI,CAAC,CAAC,CAAC,KAAK,gBAAM,CAAC,MAAM,EAAE;QAC7B,OAAO,gBAAgB,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;KACpC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAbD,gGAaC"}
\ No newline at end of file
+{"version":3,"file":"library-utils.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/library-utils.ts"],"names":[],"mappings":";;;AAAA,qDAA8D;AAE9D,MAAM,EAAE,qBAAqB,EAAE,GAAG,IAAA,6BAAmB,EACnD,sBAAsB,CACkB,CAAC;AAElC,sDAAqB"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/message-trace.d.ts b/internal/hardhat-network/stack-traces/message-trace.d.ts
index b20acd2945424cb558cf88147a124ac2c75f03c0..eeaca6aba704d629b74cf4038c0c465ef3238273 100644
--- a/internal/hardhat-network/stack-traces/message-trace.d.ts
+++ b/internal/hardhat-network/stack-traces/message-trace.d.ts
@@ -1,53 +1,4 @@
-import type { Bytecode } from "./model";
-import type { Exit } from "../provider/vm/exit";
-import type { CallOutput, CreateOutput, HaltResult, RevertResult, SuccessResult } from "@nomicfoundation/edr";
+import type { PrecompileMessageTrace, CreateMessageTrace, CallMessageTrace } from "@nomicfoundation/edr";
+export type { PrecompileMessageTrace, CreateMessageTrace, CallMessageTrace };
 export type MessageTrace = CreateMessageTrace | CallMessageTrace | PrecompileMessageTrace;
-export type EvmMessageTrace = CreateMessageTrace | CallMessageTrace;
-export type DecodedEvmMessageTrace = DecodedCreateMessageTrace | DecodedCallMessageTrace;
-export interface BaseMessageTrace {
-    value: bigint;
-    returnData: Uint8Array;
-    exit: Exit;
-    gasUsed: bigint;
-    depth: number;
-}
-export interface PrecompileMessageTrace extends BaseMessageTrace {
-    precompile: number;
-    calldata: Uint8Array;
-}
-export interface BaseEvmMessageTrace extends BaseMessageTrace {
-    code: Uint8Array;
-    steps: MessageTraceStep[];
-    bytecode?: Bytecode;
-    numberOfSubtraces: number;
-}
-export interface CreateMessageTrace extends BaseEvmMessageTrace {
-    deployedContract: Uint8Array | undefined;
-}
-export interface CallMessageTrace extends BaseEvmMessageTrace {
-    calldata: Uint8Array;
-    address: Uint8Array;
-    codeAddress: Uint8Array;
-}
-export interface DecodedCreateMessageTrace extends CreateMessageTrace {
-    bytecode: Bytecode;
-}
-export interface DecodedCallMessageTrace extends CallMessageTrace {
-    bytecode: Bytecode;
-}
-export declare function isPrecompileTrace(trace: MessageTrace): trace is PrecompileMessageTrace;
-export declare function isCreateTrace(trace: MessageTrace): trace is CreateMessageTrace;
-export declare function isDecodedCreateTrace(trace: MessageTrace): trace is DecodedCreateMessageTrace;
-export declare function isCallTrace(trace: MessageTrace): trace is CallMessageTrace;
-export declare function isDecodedCallTrace(trace: MessageTrace): trace is DecodedCallMessageTrace;
-export declare function isEvmStep(step: MessageTraceStep): step is EvmStep;
-export type MessageTraceStep = MessageTrace | EvmStep;
-export interface EvmStep {
-    pc: number;
-}
-export declare function isCallOutput(output: CallOutput | CreateOutput): output is CallOutput;
-export declare function isCreateOutput(output: CallOutput | CreateOutput): output is CreateOutput;
-export declare function isSuccessResult(result: SuccessResult | RevertResult | HaltResult): result is SuccessResult;
-export declare function isRevertResult(result: SuccessResult | RevertResult | HaltResult): result is RevertResult;
-export declare function isHaltResult(result: SuccessResult | RevertResult | HaltResult): result is HaltResult;
 //# sourceMappingURL=message-trace.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/message-trace.d.ts.map b/internal/hardhat-network/stack-traces/message-trace.d.ts.map
index b6d736afe014890a50569e7b1c9d6ea93577da17..b2e08f96258b0a2e799dbfcd302e691200dd4153 100644
--- a/internal/hardhat-network/stack-traces/message-trace.d.ts.map
+++ b/internal/hardhat-network/stack-traces/message-trace.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"message-trace.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/message-trace.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,QAAQ,EAAE,MAAM,SAAS,CAAC;AACxC,OAAO,KAAK,EAAE,IAAI,EAAE,MAAM,qBAAqB,CAAC;AAChD,OAAO,KAAK,EACV,UAAU,EACV,YAAY,EACZ,UAAU,EACV,YAAY,EACZ,aAAa,EACd,MAAM,sBAAsB,CAAC;AAE9B,MAAM,MAAM,YAAY,GACpB,kBAAkB,GAClB,gBAAgB,GAChB,sBAAsB,CAAC;AAE3B,MAAM,MAAM,eAAe,GAAG,kBAAkB,GAAG,gBAAgB,CAAC;AAEpE,MAAM,MAAM,sBAAsB,GAC9B,yBAAyB,GACzB,uBAAuB,CAAC;AAE5B,MAAM,WAAW,gBAAgB;IAC/B,KAAK,EAAE,MAAM,CAAC;IACd,UAAU,EAAE,UAAU,CAAC;IACvB,IAAI,EAAE,IAAI,CAAC;IACX,OAAO,EAAE,MAAM,CAAC;IAChB,KAAK,EAAE,MAAM,CAAC;CACf;AAED,MAAM,WAAW,sBAAuB,SAAQ,gBAAgB;IAC9D,UAAU,EAAE,MAAM,CAAC;IACnB,QAAQ,EAAE,UAAU,CAAC;CACtB;AAED,MAAM,WAAW,mBAAoB,SAAQ,gBAAgB;IAC3D,IAAI,EAAE,UAAU,CAAC;IACjB,KAAK,EAAE,gBAAgB,EAAE,CAAC;IAC1B,QAAQ,CAAC,EAAE,QAAQ,CAAC;IAGpB,iBAAiB,EAAE,MAAM,CAAC;CAC3B;AAED,MAAM,WAAW,kBAAmB,SAAQ,mBAAmB;IAC7D,gBAAgB,EAAE,UAAU,GAAG,SAAS,CAAC;CAC1C;AAED,MAAM,WAAW,gBAAiB,SAAQ,mBAAmB;IAC3D,QAAQ,EAAE,UAAU,CAAC;IACrB,OAAO,EAAE,UAAU,CAAC;IACpB,WAAW,EAAE,UAAU,CAAC;CACzB;AAED,MAAM,WAAW,yBAA0B,SAAQ,kBAAkB;IACnE,QAAQ,EAAE,QAAQ,CAAC;CACpB;AAED,MAAM,WAAW,uBAAwB,SAAQ,gBAAgB;IAC/D,QAAQ,EAAE,QAAQ,CAAC;CACpB;AAED,wBAAgB,iBAAiB,CAC/B,KAAK,EAAE,YAAY,GAClB,KAAK,IAAI,sBAAsB,CAEjC;AAED,wBAAgB,aAAa,CAC3B,KAAK,EAAE,YAAY,GAClB,KAAK,IAAI,kBAAkB,CAE7B;AAED,wBAAgB,oBAAoB,CAClC,KAAK,EAAE,YAAY,GAClB,KAAK,IAAI,yBAAyB,CAEpC;AAED,wBAAgB,WAAW,CAAC,KAAK,EAAE,YAAY,GAAG,KAAK,IAAI,gBAAgB,CAE1E;AAED,wBAAgB,kBAAkB,CAChC,KAAK,EAAE,YAAY,GAClB,KAAK,IAAI,uBAAuB,CAElC;AAED,wBAAgB,SAAS,CAAC,IAAI,EAAE,gBAAgB,GAAG,IAAI,IAAI,OAAO,CAEjE;AAED,MAAM,MAAM,gBAAgB,GAAG,YAAY,GAAG,OAAO,CAAC;AAEtD,MAAM,WAAW,OAAO;IACtB,EAAE,EAAE,MAAM,CAAC;CACZ;AAED,wBAAgB,YAAY,CAC1B,MAAM,EAAE,UAAU,GAAG,YAAY,GAChC,MAAM,IAAI,UAAU,CAEtB;AAED,wBAAgB,cAAc,CAC5B,MAAM,EAAE,UAAU,GAAG,YAAY,GAChC,MAAM,IAAI,YAAY,CAExB;AAED,wBAAgB,eAAe,CAC7B,MAAM,EAAE,aAAa,GAAG,YAAY,GAAG,UAAU,GAChD,MAAM,IAAI,aAAa,CAGzB;AAED,wBAAgB,cAAc,CAC5B,MAAM,EAAE,aAAa,GAAG,YAAY,GAAG,UAAU,GAChD,MAAM,IAAI,YAAY,CAExB;AAED,wBAAgB,YAAY,CAC1B,MAAM,EAAE,aAAa,GAAG,YAAY,GAAG,UAAU,GAChD,MAAM,IAAI,UAAU,CAEtB"}
\ No newline at end of file
+{"version":3,"file":"message-trace.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/message-trace.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EACV,sBAAsB,EACtB,kBAAkB,EAClB,gBAAgB,EACjB,MAAM,sBAAsB,CAAC;AAE9B,YAAY,EAAE,sBAAsB,EAAE,kBAAkB,EAAE,gBAAgB,EAAE,CAAC;AAE7E,MAAM,MAAM,YAAY,GACpB,kBAAkB,GAClB,gBAAgB,GAChB,sBAAsB,CAAC"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/message-trace.js b/internal/hardhat-network/stack-traces/message-trace.js
index 9147735ed48a5c0cf95544caba36e1a1fa45cb9b..fc810311788394345915ce270d88657e385eaf38 100644
--- a/internal/hardhat-network/stack-traces/message-trace.js
+++ b/internal/hardhat-network/stack-traces/message-trace.js
@@ -1,49 +1,3 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.isHaltResult = exports.isRevertResult = exports.isSuccessResult = exports.isCreateOutput = exports.isCallOutput = exports.isEvmStep = exports.isDecodedCallTrace = exports.isCallTrace = exports.isDecodedCreateTrace = exports.isCreateTrace = exports.isPrecompileTrace = void 0;
-function isPrecompileTrace(trace) {
-    return "precompile" in trace;
-}
-exports.isPrecompileTrace = isPrecompileTrace;
-function isCreateTrace(trace) {
-    return "code" in trace && !isCallTrace(trace);
-}
-exports.isCreateTrace = isCreateTrace;
-function isDecodedCreateTrace(trace) {
-    return isCreateTrace(trace) && trace.bytecode !== undefined;
-}
-exports.isDecodedCreateTrace = isDecodedCreateTrace;
-function isCallTrace(trace) {
-    return "code" in trace && "calldata" in trace;
-}
-exports.isCallTrace = isCallTrace;
-function isDecodedCallTrace(trace) {
-    return isCallTrace(trace) && trace.bytecode !== undefined;
-}
-exports.isDecodedCallTrace = isDecodedCallTrace;
-function isEvmStep(step) {
-    return "pc" in step && step.pc !== undefined;
-}
-exports.isEvmStep = isEvmStep;
-function isCallOutput(output) {
-    return !isCreateOutput(output);
-}
-exports.isCallOutput = isCallOutput;
-function isCreateOutput(output) {
-    return "address" in output;
-}
-exports.isCreateOutput = isCreateOutput;
-function isSuccessResult(result) {
-    // Only need to check for one unique field
-    return "gasRefunded" in result;
-}
-exports.isSuccessResult = isSuccessResult;
-function isRevertResult(result) {
-    return !("reason" in result);
-}
-exports.isRevertResult = isRevertResult;
-function isHaltResult(result) {
-    return !("output" in result);
-}
-exports.isHaltResult = isHaltResult;
 //# sourceMappingURL=message-trace.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/message-trace.js.map b/internal/hardhat-network/stack-traces/message-trace.js.map
index 74f564c4c42358b85f531aeb5bf293c019c3fef8..11f776768c5b28364fe0b2801979f20824d55174 100644
--- a/internal/hardhat-network/stack-traces/message-trace.js.map
+++ b/internal/hardhat-network/stack-traces/message-trace.js.map
@@ -1 +1 @@
-{"version":3,"file":"message-trace.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/message-trace.ts"],"names":[],"mappings":";;;AA6DA,SAAgB,iBAAiB,CAC/B,KAAmB;IAEnB,OAAO,YAAY,IAAI,KAAK,CAAC;AAC/B,CAAC;AAJD,8CAIC;AAED,SAAgB,aAAa,CAC3B,KAAmB;IAEnB,OAAO,MAAM,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAChD,CAAC;AAJD,sCAIC;AAED,SAAgB,oBAAoB,CAClC,KAAmB;IAEnB,OAAO,aAAa,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,CAAC;AAC9D,CAAC;AAJD,oDAIC;AAED,SAAgB,WAAW,CAAC,KAAmB;IAC7C,OAAO,MAAM,IAAI,KAAK,IAAI,UAAU,IAAI,KAAK,CAAC;AAChD,CAAC;AAFD,kCAEC;AAED,SAAgB,kBAAkB,CAChC,KAAmB;IAEnB,OAAO,WAAW,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,QAAQ,KAAK,SAAS,CAAC;AAC5D,CAAC;AAJD,gDAIC;AAED,SAAgB,SAAS,CAAC,IAAsB;IAC9C,OAAO,IAAI,IAAI,IAAI,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,CAAC;AAC/C,CAAC;AAFD,8BAEC;AAQD,SAAgB,YAAY,CAC1B,MAAiC;IAEjC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjC,CAAC;AAJD,oCAIC;AAED,SAAgB,cAAc,CAC5B,MAAiC;IAEjC,OAAO,SAAS,IAAI,MAAM,CAAC;AAC7B,CAAC;AAJD,wCAIC;AAED,SAAgB,eAAe,CAC7B,MAAiD;IAEjD,0CAA0C;IAC1C,OAAO,aAAa,IAAI,MAAM,CAAC;AACjC,CAAC;AALD,0CAKC;AAED,SAAgB,cAAc,CAC5B,MAAiD;IAEjD,OAAO,CAAC,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC;AAC/B,CAAC;AAJD,wCAIC;AAED,SAAgB,YAAY,CAC1B,MAAiD;IAEjD,OAAO,CAAC,CAAC,QAAQ,IAAI,MAAM,CAAC,CAAC;AAC/B,CAAC;AAJD,oCAIC"}
\ No newline at end of file
+{"version":3,"file":"message-trace.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/message-trace.ts"],"names":[],"mappings":""}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/solidity-errors.d.ts.map b/internal/hardhat-network/stack-traces/solidity-errors.d.ts.map
index ccd8d4b72fb5e5e6e2f62abc441ebe99afdf524d..2516fa45654651d473676c8ce3021a65db904dba 100644
--- a/internal/hardhat-network/stack-traces/solidity-errors.d.ts.map
+++ b/internal/hardhat-network/stack-traces/solidity-errors.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"solidity-errors.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidity-errors.ts"],"names":[],"mappings":";AAGA,OAAO,EAGL,kBAAkB,EAOnB,MAAM,wBAAwB,CAAC;AAEhC,QAAA,MAAM,OAAO,eAA2C,CAAC;AAEzD,wBAAgB,eAAe,IAAI,MAAM,CAAC,QAAQ,EAAE,CAWnD;AAED,wBAAsB,gCAAgC,CACpD,CAAC,EAAE,MAAM,OAAO,CAAC,GAAG,CAAC,EACrB,mBAAmB,EAAE,MAAM,gBAmB5B;AAED,wBAAgB,wBAAwB,CACtC,eAAe,EAAE,MAAM,EACvB,UAAU,EAAE,kBAAkB,EAC9B,aAAa,CAAC,EAAE,MAAM,CAAC,QAAQ,EAAE,GAChC,aAAa,CA0Cf;AA+ND,qBAAa,aAAc,SAAQ,KAAK;IACtC,SAAgB,UAAU,EAAE,kBAAkB,CAAC;gBAEnC,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,kBAAkB;IAKpD,CAAC,OAAO,CAAC,IAAI,MAAM;IAInB,OAAO,IAAI,MAAM;CAKzB"}
\ No newline at end of file
+{"version":3,"file":"solidity-errors.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidity-errors.ts"],"names":[],"mappings":";AAIA,OAAO,EAGL,kBAAkB,EAOnB,MAAM,wBAAwB,CAAC;AAEhC,QAAA,MAAM,OAAO,eAA2C,CAAC;AAEzD,wBAAgB,eAAe,IAAI,MAAM,CAAC,QAAQ,EAAE,CAWnD;AAED,wBAAsB,gCAAgC,CACpD,CAAC,EAAE,MAAM,OAAO,CAAC,GAAG,CAAC,EACrB,mBAAmB,EAAE,MAAM,gBAmB5B;AAED,wBAAgB,wBAAwB,CACtC,eAAe,EAAE,MAAM,EACvB,UAAU,EAAE,kBAAkB,EAC9B,aAAa,CAAC,EAAE,MAAM,CAAC,QAAQ,EAAE,GAChC,aAAa,CA0Cf;AA+ND,qBAAa,aAAc,SAAQ,KAAK;IACtC,SAAgB,UAAU,EAAE,kBAAkB,CAAC;gBAEnC,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,kBAAkB;IAKpD,CAAC,OAAO,CAAC,IAAI,MAAM;IAInB,OAAO,IAAI,MAAM;CAKzB"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/solidity-errors.js b/internal/hardhat-network/stack-traces/solidity-errors.js
index ca2d8a67f611966c92fc50687f3208eb5ef0224c..d18de107203cb932a74ab9736df21993cae0c39b 100644
--- a/internal/hardhat-network/stack-traces/solidity-errors.js
+++ b/internal/hardhat-network/stack-traces/solidity-errors.js
@@ -2,6 +2,7 @@
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.SolidityError = exports.encodeSolidityStackTrace = exports.wrapWithSolidityErrorsCorrection = exports.getCurrentStack = void 0;
 const ethereumjs_util_1 = require("@nomicfoundation/ethereumjs-util");
+const return_data_1 = require("../provider/return-data");
 const panic_errors_1 = require("./panic-errors");
 const solidity_stack_trace_1 = require("./solidity-stack-trace");
 const inspect = Symbol.for("nodejs.util.inspect.custom");
@@ -62,45 +63,45 @@ function encodeSolidityStackTrace(fallbackMessage, stackTrace, previousStack) {
 exports.encodeSolidityStackTrace = encodeSolidityStackTrace;
 function encodeStackTraceEntry(stackTraceEntry) {
     switch (stackTraceEntry.type) {
-        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.MISSING_FALLBACK_OR_RECEIVE_ERROR:
+        case 11 /* StackTraceEntryType.UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR */:
+        case 12 /* StackTraceEntryType.MISSING_FALLBACK_OR_RECEIVE_ERROR */:
             return sourceReferenceToSolidityCallsite({
                 ...stackTraceEntry.sourceReference,
                 function: solidity_stack_trace_1.UNRECOGNIZED_FUNCTION_NAME,
             });
-        case solidity_stack_trace_1.StackTraceEntryType.CALLSTACK_ENTRY:
-        case solidity_stack_trace_1.StackTraceEntryType.REVERT_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.CUSTOM_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.FUNCTION_NOT_PAYABLE_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.INVALID_PARAMS_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.RETURNDATA_SIZE_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.NONCONTRACT_ACCOUNT_CALLED_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.CALL_FAILED_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.DIRECT_LIBRARY_CALL_ERROR:
+        case 0 /* StackTraceEntryType.CALLSTACK_ENTRY */:
+        case 4 /* StackTraceEntryType.REVERT_ERROR */:
+        case 6 /* StackTraceEntryType.CUSTOM_ERROR */:
+        case 7 /* StackTraceEntryType.FUNCTION_NOT_PAYABLE_ERROR */:
+        case 8 /* StackTraceEntryType.INVALID_PARAMS_ERROR */:
+        case 9 /* StackTraceEntryType.FALLBACK_NOT_PAYABLE_ERROR */:
+        case 10 /* StackTraceEntryType.FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR */:
+        case 13 /* StackTraceEntryType.RETURNDATA_SIZE_ERROR */:
+        case 14 /* StackTraceEntryType.NONCONTRACT_ACCOUNT_CALLED_ERROR */:
+        case 15 /* StackTraceEntryType.CALL_FAILED_ERROR */:
+        case 16 /* StackTraceEntryType.DIRECT_LIBRARY_CALL_ERROR */:
             return sourceReferenceToSolidityCallsite(stackTraceEntry.sourceReference);
-        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_CALLSTACK_ENTRY:
+        case 1 /* StackTraceEntryType.UNRECOGNIZED_CREATE_CALLSTACK_ENTRY */:
             return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.CONSTRUCTOR_FUNCTION_NAME, undefined);
-        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY:
+        case 2 /* StackTraceEntryType.UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY */:
             return new SolidityCallSite((0, ethereumjs_util_1.bytesToHex)(stackTraceEntry.address), solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);
-        case solidity_stack_trace_1.StackTraceEntryType.PRECOMPILE_ERROR:
+        case 3 /* StackTraceEntryType.PRECOMPILE_ERROR */:
             return new SolidityCallSite(undefined, `<PrecompileContract ${stackTraceEntry.precompile}>`, solidity_stack_trace_1.PRECOMPILE_FUNCTION_NAME, undefined);
-        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR:
+        case 17 /* StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR */:
             return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.CONSTRUCTOR_FUNCTION_NAME, undefined);
-        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR:
+        case 18 /* StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR */:
             return new SolidityCallSite((0, ethereumjs_util_1.bytesToHex)(stackTraceEntry.address), solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);
-        case solidity_stack_trace_1.StackTraceEntryType.INTERNAL_FUNCTION_CALLSTACK_ENTRY:
+        case 22 /* StackTraceEntryType.INTERNAL_FUNCTION_CALLSTACK_ENTRY */:
             return new SolidityCallSite(stackTraceEntry.sourceReference.sourceName, stackTraceEntry.sourceReference.contract, `internal@${stackTraceEntry.pc}`, undefined);
-        case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR:
+        case 23 /* StackTraceEntryType.CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR */:
             if (stackTraceEntry.sourceReference !== undefined) {
                 return sourceReferenceToSolidityCallsite(stackTraceEntry.sourceReference);
             }
             return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);
-        case solidity_stack_trace_1.StackTraceEntryType.OTHER_EXECUTION_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.PANIC_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.UNMAPPED_SOLC_0_6_3_REVERT_ERROR:
+        case 19 /* StackTraceEntryType.OTHER_EXECUTION_ERROR */:
+        case 21 /* StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR */:
+        case 5 /* StackTraceEntryType.PANIC_ERROR */:
+        case 20 /* StackTraceEntryType.UNMAPPED_SOLC_0_6_3_REVERT_ERROR */:
             if (stackTraceEntry.sourceReference === undefined) {
                 return new SolidityCallSite(undefined, solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME, solidity_stack_trace_1.UNKNOWN_FUNCTION_NAME, undefined);
             }
@@ -114,66 +115,68 @@ function sourceReferenceToSolidityCallsite(sourceReference) {
 }
 function getMessageFromLastStackTraceEntry(stackTraceEntry) {
     switch (stackTraceEntry.type) {
-        case solidity_stack_trace_1.StackTraceEntryType.PRECOMPILE_ERROR:
+        case 3 /* StackTraceEntryType.PRECOMPILE_ERROR */:
             return `Transaction reverted: call to precompile ${stackTraceEntry.precompile} failed`;
-        case solidity_stack_trace_1.StackTraceEntryType.FUNCTION_NOT_PAYABLE_ERROR:
+        case 7 /* StackTraceEntryType.FUNCTION_NOT_PAYABLE_ERROR */:
             return `Transaction reverted: non-payable function was called with value ${stackTraceEntry.value.toString(10)}`;
-        case solidity_stack_trace_1.StackTraceEntryType.INVALID_PARAMS_ERROR:
+        case 8 /* StackTraceEntryType.INVALID_PARAMS_ERROR */:
             return `Transaction reverted: function was called with incorrect parameters`;
-        case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_ERROR:
+        case 9 /* StackTraceEntryType.FALLBACK_NOT_PAYABLE_ERROR */:
             return `Transaction reverted: fallback function is not payable and was called with value ${stackTraceEntry.value.toString(10)}`;
-        case solidity_stack_trace_1.StackTraceEntryType.FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR:
+        case 10 /* StackTraceEntryType.FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR */:
             return `Transaction reverted: there's no receive function, fallback function is not payable and was called with value ${stackTraceEntry.value.toString(10)}`;
-        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR:
+        case 11 /* StackTraceEntryType.UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR */:
             return `Transaction reverted: function selector was not recognized and there's no fallback function`;
-        case solidity_stack_trace_1.StackTraceEntryType.MISSING_FALLBACK_OR_RECEIVE_ERROR:
+        case 12 /* StackTraceEntryType.MISSING_FALLBACK_OR_RECEIVE_ERROR */:
             return `Transaction reverted: function selector was not recognized and there's no fallback nor receive function`;
-        case solidity_stack_trace_1.StackTraceEntryType.RETURNDATA_SIZE_ERROR:
+        case 13 /* StackTraceEntryType.RETURNDATA_SIZE_ERROR */:
             return `Transaction reverted: function returned an unexpected amount of data`;
-        case solidity_stack_trace_1.StackTraceEntryType.NONCONTRACT_ACCOUNT_CALLED_ERROR:
+        case 14 /* StackTraceEntryType.NONCONTRACT_ACCOUNT_CALLED_ERROR */:
             return `Transaction reverted: function call to a non-contract account`;
-        case solidity_stack_trace_1.StackTraceEntryType.CALL_FAILED_ERROR:
+        case 15 /* StackTraceEntryType.CALL_FAILED_ERROR */:
             return `Transaction reverted: function call failed to execute`;
-        case solidity_stack_trace_1.StackTraceEntryType.DIRECT_LIBRARY_CALL_ERROR:
+        case 16 /* StackTraceEntryType.DIRECT_LIBRARY_CALL_ERROR */:
             return `Transaction reverted: library was called directly`;
-        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR:
-        case solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR:
-            if (stackTraceEntry.message.isErrorReturnData()) {
-                return `VM Exception while processing transaction: reverted with reason string '${stackTraceEntry.message.decodeError()}'`;
+        case 17 /* StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR */:
+        case 18 /* StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR */:
+            let returnData = new return_data_1.ReturnData(stackTraceEntry.returnData);
+            if (returnData.isErrorReturnData()) {
+                return `VM Exception while processing transaction: reverted with reason string '${new return_data_1.ReturnData(stackTraceEntry.returnData).decodeError()}'`;
             }
-            if (stackTraceEntry.message.isPanicReturnData()) {
-                const message = (0, panic_errors_1.panicErrorCodeToMessage)(stackTraceEntry.message.decodePanic());
+            if (returnData.isPanicReturnData()) {
+                const message = (0, panic_errors_1.panicErrorCodeToMessage)(returnData.decodePanic());
                 return `VM Exception while processing transaction: ${message}`;
             }
-            if (!stackTraceEntry.message.isEmpty()) {
-                const returnData = Buffer.from(stackTraceEntry.message.value).toString("hex");
-                return `VM Exception while processing transaction: reverted with an unrecognized custom error (return data: 0x${returnData})`;
+            if (!returnData.isEmpty()) {
+                const buffer = Buffer.from(returnData.value).toString("hex");
+                return `VM Exception while processing transaction: reverted with an unrecognized custom error (return data: 0x${buffer})`;
             }
             if (stackTraceEntry.isInvalidOpcodeError) {
                 return "VM Exception while processing transaction: invalid opcode";
             }
             return "Transaction reverted without a reason string";
-        case solidity_stack_trace_1.StackTraceEntryType.REVERT_ERROR:
-            if (stackTraceEntry.message.isErrorReturnData()) {
-                return `VM Exception while processing transaction: reverted with reason string '${stackTraceEntry.message.decodeError()}'`;
+        case 4 /* StackTraceEntryType.REVERT_ERROR */:
+            returnData = new return_data_1.ReturnData(stackTraceEntry.returnData);
+            if (returnData.isErrorReturnData()) {
+                return `VM Exception while processing transaction: reverted with reason string '${returnData.decodeError()}'`;
             }
             if (stackTraceEntry.isInvalidOpcodeError) {
                 return "VM Exception while processing transaction: invalid opcode";
             }
             return "Transaction reverted without a reason string";
-        case solidity_stack_trace_1.StackTraceEntryType.PANIC_ERROR:
+        case 5 /* StackTraceEntryType.PANIC_ERROR */:
             const panicMessage = (0, panic_errors_1.panicErrorCodeToMessage)(stackTraceEntry.errorCode);
             return `VM Exception while processing transaction: ${panicMessage}`;
-        case solidity_stack_trace_1.StackTraceEntryType.CUSTOM_ERROR:
+        case 6 /* StackTraceEntryType.CUSTOM_ERROR */:
             return `VM Exception while processing transaction: ${stackTraceEntry.message}`;
-        case solidity_stack_trace_1.StackTraceEntryType.OTHER_EXECUTION_ERROR:
+        case 19 /* StackTraceEntryType.OTHER_EXECUTION_ERROR */:
             // TODO: What if there was returnData?
             return `Transaction reverted and Hardhat couldn't infer the reason.`;
-        case solidity_stack_trace_1.StackTraceEntryType.UNMAPPED_SOLC_0_6_3_REVERT_ERROR:
+        case 20 /* StackTraceEntryType.UNMAPPED_SOLC_0_6_3_REVERT_ERROR */:
             return "Transaction reverted without a reason string and without a valid sourcemap provided by the compiler. Some line numbers may be off. We strongly recommend upgrading solc and always using revert reasons.";
-        case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR:
+        case 21 /* StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR */:
             return "Transaction reverted: trying to deploy a contract whose code is too large";
-        case solidity_stack_trace_1.StackTraceEntryType.CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR:
+        case 23 /* StackTraceEntryType.CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR */:
             return "Transaction reverted: contract call run out of gas and made the transaction revert";
     }
 }
diff --git a/internal/hardhat-network/stack-traces/solidity-errors.js.map b/internal/hardhat-network/stack-traces/solidity-errors.js.map
index e9275a95977a89047a4db66e67b7d9d8aa85691c..06de54500b26ddf5a7757cb959e0e2e6fd161eb6 100644
--- a/internal/hardhat-network/stack-traces/solidity-errors.js.map
+++ b/internal/hardhat-network/stack-traces/solidity-errors.js.map
@@ -1 +1 @@
-{"version":3,"file":"solidity-errors.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidity-errors.ts"],"names":[],"mappings":";;;AAAA,sEAA6E;AAE7E,iDAAyD;AACzD,iEAUgC;AAEhC,MAAM,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;AAEzD,SAAgB,eAAe;IAC7B,MAAM,yBAAyB,GAAG,KAAK,CAAC,iBAAiB,CAAC;IAE1D,KAAK,CAAC,iBAAiB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IAEtC,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;IAC1B,MAAM,KAAK,GAAsB,KAAK,CAAC,KAAY,CAAC;IAEpD,KAAK,CAAC,iBAAiB,GAAG,yBAAyB,CAAC;IAEpD,OAAO,KAAK,CAAC;AACf,CAAC;AAXD,0CAWC;AAEM,KAAK,UAAU,gCAAgC,CACpD,CAAqB,EACrB,mBAA2B;IAE3B,MAAM,gBAAgB,GAAG,eAAe,EAAE,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;IAEtE,IAAI;QACF,OAAO,MAAM,CAAC,EAAE,CAAC;KAClB;IAAC,OAAO,KAAU,EAAE;QACnB,IAAI,KAAK,CAAC,UAAU,KAAK,SAAS,EAAE;YAClC,sFAAsF;YACtF,MAAM,KAAK,CAAC;SACb;QAED,sFAAsF;QACtF,MAAM,wBAAwB,CAC5B,KAAK,CAAC,OAAO,EACb,KAAK,CAAC,UAAU,EAChB,gBAAgB,CACjB,CAAC;KACH;AACH,CAAC;AArBD,4EAqBC;AAED,SAAgB,wBAAwB,CACtC,eAAuB,EACvB,UAA8B,EAC9B,aAAiC;IAEjC,IAAI,KAAK,CAAC,iBAAiB,KAAK,SAAS,EAAE;QACzC,yDAAyD;QACzD,OAAO,CAAC,6BAA6B,CAAC,CAAC;KACxC;IAED,MAAM,yBAAyB,GAAG,KAAK,CAAC,iBAAiB,CAAC;IAC1D,KAAK,CAAC,iBAAiB,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;QACzC,IAAI,aAAa,KAAK,SAAS,EAAE;YAC/B,KAAK,GAAG,aAAa,CAAC;SACvB;aAAM;YACL,kDAAkD;YAClD,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;SACpB;QAED,KAAK,MAAM,KAAK,IAAI,UAAU,EAAE;YAC9B,MAAM,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;YAC9C,IAAI,QAAQ,KAAK,SAAS,EAAE;gBAC1B,SAAS;aACV;YAED,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;SACzB;QAED,OAAO,yBAA0B,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;IAClD,CAAC,CAAC;IAEF,MAAM,GAAG,GAAG,iCAAiC,CAC3C,UAAU,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAClC,CAAC;IAEF,MAAM,aAAa,GAAG,IAAI,aAAa,CACrC,GAAG,KAAK,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,eAAe,EACzC,UAAU,CACX,CAAC;IAEF,kDAAkD;IAClD,aAAa,CAAC,KAAK,GAAG,aAAa,CAAC,KAAK,CAAC;IAE1C,KAAK,CAAC,iBAAiB,GAAG,yBAAyB,CAAC;IAEpD,OAAO,aAAa,CAAC;AACvB,CAAC;AA9CD,4DA8CC;AAED,SAAS,qBAAqB,CAC5B,eAAwC;IAExC,QAAQ,eAAe,CAAC,IAAI,EAAE;QAC5B,KAAK,0CAAmB,CAAC,4CAA4C,CAAC;QACtE,KAAK,0CAAmB,CAAC,iCAAiC;YACxD,OAAO,iCAAiC,CAAC;gBACvC,GAAG,eAAe,CAAC,eAAe;gBAClC,QAAQ,EAAE,iDAA0B;aACrC,CAAC,CAAC;QAEL,KAAK,0CAAmB,CAAC,eAAe,CAAC;QACzC,KAAK,0CAAmB,CAAC,YAAY,CAAC;QACtC,KAAK,0CAAmB,CAAC,YAAY,CAAC;QACtC,KAAK,0CAAmB,CAAC,0BAA0B,CAAC;QACpD,KAAK,0CAAmB,CAAC,oBAAoB,CAAC;QAC9C,KAAK,0CAAmB,CAAC,0BAA0B,CAAC;QACpD,KAAK,0CAAmB,CAAC,yCAAyC,CAAC;QACnE,KAAK,0CAAmB,CAAC,qBAAqB,CAAC;QAC/C,KAAK,0CAAmB,CAAC,gCAAgC,CAAC;QAC1D,KAAK,0CAAmB,CAAC,iBAAiB,CAAC;QAC3C,KAAK,0CAAmB,CAAC,yBAAyB;YAChD,OAAO,iCAAiC,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;QAE5E,KAAK,0CAAmB,CAAC,mCAAmC;YAC1D,OAAO,IAAI,gBAAgB,CACzB,SAAS,EACT,iDAA0B,EAC1B,gDAAyB,EACzB,SAAS,CACV,CAAC;QAEJ,KAAK,0CAAmB,CAAC,qCAAqC;YAC5D,OAAO,IAAI,gBAAgB,CACzB,IAAA,4BAAW,EAAC,eAAe,CAAC,OAAO,CAAC,EACpC,iDAA0B,EAC1B,4CAAqB,EACrB,SAAS,CACV,CAAC;QAEJ,KAAK,0CAAmB,CAAC,gBAAgB;YACvC,OAAO,IAAI,gBAAgB,CACzB,SAAS,EACT,uBAAuB,eAAe,CAAC,UAAU,GAAG,EACpD,+CAAwB,EACxB,SAAS,CACV,CAAC;QAEJ,KAAK,0CAAmB,CAAC,yBAAyB;YAChD,OAAO,IAAI,gBAAgB,CACzB,SAAS,EACT,iDAA0B,EAC1B,gDAAyB,EACzB,SAAS,CACV,CAAC;QAEJ,KAAK,0CAAmB,CAAC,2BAA2B;YAClD,OAAO,IAAI,gBAAgB,CACzB,IAAA,4BAAW,EAAC,eAAe,CAAC,OAAO,CAAC,EACpC,iDAA0B,EAC1B,4CAAqB,EACrB,SAAS,CACV,CAAC;QAEJ,KAAK,0CAAmB,CAAC,iCAAiC;YACxD,OAAO,IAAI,gBAAgB,CACzB,eAAe,CAAC,eAAe,CAAC,UAAU,EAC1C,eAAe,CAAC,eAAe,CAAC,QAAQ,EACxC,YAAY,eAAe,CAAC,EAAE,EAAE,EAChC,SAAS,CACV,CAAC;QACJ,KAAK,0CAAmB,CAAC,kCAAkC;YACzD,IAAI,eAAe,CAAC,eAAe,KAAK,SAAS,EAAE;gBACjD,OAAO,iCAAiC,CACtC,eAAe,CAAC,eAAe,CAChC,CAAC;aACH;YAED,OAAO,IAAI,gBAAgB,CACzB,SAAS,EACT,iDAA0B,EAC1B,4CAAqB,EACrB,SAAS,CACV,CAAC;QAEJ,KAAK,0CAAmB,CAAC,qBAAqB,CAAC;QAC/C,KAAK,0CAAmB,CAAC,wBAAwB,CAAC;QAClD,KAAK,0CAAmB,CAAC,WAAW,CAAC;QACrC,KAAK,0CAAmB,CAAC,gCAAgC;YACvD,IAAI,eAAe,CAAC,eAAe,KAAK,SAAS,EAAE;gBACjD,OAAO,IAAI,gBAAgB,CACzB,SAAS,EACT,iDAA0B,EAC1B,4CAAqB,EACrB,SAAS,CACV,CAAC;aACH;YAED,OAAO,iCAAiC,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;KAC7E;AACH,CAAC;AAED,SAAS,iCAAiC,CACxC,eAAgC;IAEhC,OAAO,IAAI,gBAAgB,CACzB,eAAe,CAAC,UAAU,EAC1B,eAAe,CAAC,QAAQ,EACxB,eAAe,CAAC,QAAQ,KAAK,SAAS;QACpC,CAAC,CAAC,eAAe,CAAC,QAAQ;QAC1B,CAAC,CAAC,4CAAqB,EACzB,eAAe,CAAC,IAAI,CACrB,CAAC;AACJ,CAAC;AAED,SAAS,iCAAiC,CACxC,eAAwC;IAExC,QAAQ,eAAe,CAAC,IAAI,EAAE;QAC5B,KAAK,0CAAmB,CAAC,gBAAgB;YACvC,OAAO,4CAA4C,eAAe,CAAC,UAAU,SAAS,CAAC;QAEzF,KAAK,0CAAmB,CAAC,0BAA0B;YACjD,OAAO,oEAAoE,eAAe,CAAC,KAAK,CAAC,QAAQ,CACvG,EAAE,CACH,EAAE,CAAC;QAEN,KAAK,0CAAmB,CAAC,oBAAoB;YAC3C,OAAO,qEAAqE,CAAC;QAE/E,KAAK,0CAAmB,CAAC,0BAA0B;YACjD,OAAO,oFAAoF,eAAe,CAAC,KAAK,CAAC,QAAQ,CACvH,EAAE,CACH,EAAE,CAAC;QAEN,KAAK,0CAAmB,CAAC,yCAAyC;YAChE,OAAO,iHAAiH,eAAe,CAAC,KAAK,CAAC,QAAQ,CACpJ,EAAE,CACH,EAAE,CAAC;QAEN,KAAK,0CAAmB,CAAC,4CAA4C;YACnE,OAAO,6FAA6F,CAAC;QAEvG,KAAK,0CAAmB,CAAC,iCAAiC;YACxD,OAAO,yGAAyG,CAAC;QAEnH,KAAK,0CAAmB,CAAC,qBAAqB;YAC5C,OAAO,sEAAsE,CAAC;QAEhF,KAAK,0CAAmB,CAAC,gCAAgC;YACvD,OAAO,+DAA+D,CAAC;QAEzE,KAAK,0CAAmB,CAAC,iBAAiB;YACxC,OAAO,uDAAuD,CAAC;QAEjE,KAAK,0CAAmB,CAAC,yBAAyB;YAChD,OAAO,mDAAmD,CAAC;QAE7D,KAAK,0CAAmB,CAAC,yBAAyB,CAAC;QACnD,KAAK,0CAAmB,CAAC,2BAA2B;YAClD,IAAI,eAAe,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE;gBAC/C,OAAO,2EAA2E,eAAe,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC;aAC5H;YAED,IAAI,eAAe,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE;gBAC/C,MAAM,OAAO,GAAG,IAAA,sCAAuB,EACrC,eAAe,CAAC,OAAO,CAAC,WAAW,EAAE,CACtC,CAAC;gBACF,OAAO,8CAA8C,OAAO,EAAE,CAAC;aAChE;YAED,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE;gBACtC,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,QAAQ,CACpE,KAAK,CACN,CAAC;gBAEF,OAAO,yGAAyG,UAAU,GAAG,CAAC;aAC/H;YAED,IAAI,eAAe,CAAC,oBAAoB,EAAE;gBACxC,OAAO,2DAA2D,CAAC;aACpE;YAED,OAAO,8CAA8C,CAAC;QAExD,KAAK,0CAAmB,CAAC,YAAY;YACnC,IAAI,eAAe,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE;gBAC/C,OAAO,2EAA2E,eAAe,CAAC,OAAO,CAAC,WAAW,EAAE,GAAG,CAAC;aAC5H;YAED,IAAI,eAAe,CAAC,oBAAoB,EAAE;gBACxC,OAAO,2DAA2D,CAAC;aACpE;YAED,OAAO,8CAA8C,CAAC;QAExD,KAAK,0CAAmB,CAAC,WAAW;YAClC,MAAM,YAAY,GAAG,IAAA,sCAAuB,EAAC,eAAe,CAAC,SAAS,CAAC,CAAC;YACxE,OAAO,8CAA8C,YAAY,EAAE,CAAC;QAEtE,KAAK,0CAAmB,CAAC,YAAY;YACnC,OAAO,8CAA8C,eAAe,CAAC,OAAO,EAAE,CAAC;QAEjF,KAAK,0CAAmB,CAAC,qBAAqB;YAC5C,sCAAsC;YACtC,OAAO,6DAA6D,CAAC;QAEvE,KAAK,0CAAmB,CAAC,gCAAgC;YACvD,OAAO,0MAA0M,CAAC;QAEpN,KAAK,0CAAmB,CAAC,wBAAwB;YAC/C,OAAO,2EAA2E,CAAC;QAErF,KAAK,0CAAmB,CAAC,kCAAkC;YACzD,OAAO,oFAAoF,CAAC;KAC/F;AACH,CAAC;AAED,qEAAqE;AACrE,+EAA+E;AAC/E,gCAAgC;AAChC,MAAa,aAAc,SAAQ,KAAK;IAGtC,YAAY,OAAe,EAAE,UAA8B;QACzD,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;IAC/B,CAAC;IAEM,CAAC,OAAO,CAAC;QACd,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;IACxB,CAAC;IAEM,OAAO;QACZ,OAAO,IAAI,CAAC,KAAK,KAAK,SAAS;YAC7B,CAAC,CAAC,IAAI,CAAC,KAAK;YACZ,CAAC,CAAC,4CAA4C,CAAC;IACnD,CAAC;CACF;AAjBD,sCAiBC;AAED,MAAM,gBAAgB;IACpB,YACU,WAA+B,EAC/B,SAA6B,EAC7B,aAAiC,EACjC,KAAyB;QAHzB,gBAAW,GAAX,WAAW,CAAoB;QAC/B,cAAS,GAAT,SAAS,CAAoB;QAC7B,kBAAa,GAAb,aAAa,CAAoB;QACjC,UAAK,GAAL,KAAK,CAAoB;IAChC,CAAC;IAEG,eAAe;QACpB,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,aAAa;QAClB,OAAO,SAAS,CAAC;IACnB,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,WAAW,IAAI,SAAS,CAAC;IACvC,CAAC;IAEM,WAAW;QAChB,OAAO,SAAS,CAAC;IACnB,CAAC;IAEM,eAAe;QACpB,kDAAkD;QAClD,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;YAChC,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;SACnC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,aAAa;QAClB,OAAO,IAAI,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IACtD,CAAC;IAEM,aAAa;QAClB,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE;YAChC,OAAO,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC;SACnC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAEM,WAAW;QAChB,OAAO,CAAC,CAAC;IACX,CAAC;IAEM,eAAe;QACpB,OAAO,CAAC,CAAC;IACX,CAAC;IAEM,wBAAwB;QAC7B,OAAO,EAAE,CAAC;IACZ,CAAC;IAEM,OAAO;QACZ,OAAO,SAAS,CAAC;IACnB,CAAC;IAEM,WAAW;QAChB,OAAO,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC;IAChC,CAAC;IAEM,OAAO;QACZ,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,aAAa;QAClB,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,MAAM;QACX,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,QAAQ;QACb,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,YAAY;QACjB,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,UAAU;QACf,OAAO,KAAK,CAAC;IACf,CAAC;IAEM,aAAa;QAClB,OAAO,EAAE,CAAC;IACZ,CAAC;IAEM,wBAAwB;QAC7B,OAAO,CAAC,CAAC;IACX,CAAC;IAEM,sBAAsB;QAC3B,OAAO,CAAC,CAAC;IACX,CAAC;IAEM,QAAQ;QACb,OAAO,oBAAoB,CAAC;IAC9B,CAAC;CACF"}
\ No newline at end of file
+{"version":3,"file":"solidity-errors.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidity-errors.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/solidity-stack-trace.d.ts b/internal/hardhat-network/stack-traces/solidity-stack-trace.d.ts
index 0b02c8693471f15331948901c41a8cd0644c77ed..968fbaef15ca19a6b45ba0cbeb37fb583493d3e5 100644
--- a/internal/hardhat-network/stack-traces/solidity-stack-trace.d.ts
+++ b/internal/hardhat-network/stack-traces/solidity-stack-trace.d.ts
@@ -1,158 +1,7 @@
-import { ReturnData } from "../provider/return-data";
-import { ContractFunctionType } from "./model";
-export declare enum StackTraceEntryType {
-    CALLSTACK_ENTRY = 0,
-    UNRECOGNIZED_CREATE_CALLSTACK_ENTRY = 1,
-    UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY = 2,
-    PRECOMPILE_ERROR = 3,
-    REVERT_ERROR = 4,
-    PANIC_ERROR = 5,
-    CUSTOM_ERROR = 6,
-    FUNCTION_NOT_PAYABLE_ERROR = 7,
-    INVALID_PARAMS_ERROR = 8,
-    FALLBACK_NOT_PAYABLE_ERROR = 9,
-    FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR = 10,
-    UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR = 11,
-    MISSING_FALLBACK_OR_RECEIVE_ERROR = 12,
-    RETURNDATA_SIZE_ERROR = 13,
-    NONCONTRACT_ACCOUNT_CALLED_ERROR = 14,
-    CALL_FAILED_ERROR = 15,
-    DIRECT_LIBRARY_CALL_ERROR = 16,
-    UNRECOGNIZED_CREATE_ERROR = 17,
-    UNRECOGNIZED_CONTRACT_ERROR = 18,
-    OTHER_EXECUTION_ERROR = 19,
-    UNMAPPED_SOLC_0_6_3_REVERT_ERROR = 20,
-    CONTRACT_TOO_LARGE_ERROR = 21,
-    INTERNAL_FUNCTION_CALLSTACK_ENTRY = 22,
-    CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR = 23
-}
-export declare const FALLBACK_FUNCTION_NAME = "<fallback>";
-export declare const RECEIVE_FUNCTION_NAME = "<receive>";
-export declare const CONSTRUCTOR_FUNCTION_NAME = "constructor";
-export declare const UNRECOGNIZED_FUNCTION_NAME = "<unrecognized-selector>";
-export declare const UNKNOWN_FUNCTION_NAME = "<unknown>";
-export declare const PRECOMPILE_FUNCTION_NAME = "<precompile>";
-export declare const UNRECOGNIZED_CONTRACT_NAME = "<UnrecognizedContract>";
-export interface SourceReference {
-    sourceName: string;
-    sourceContent: string;
-    contract?: string;
-    function?: string;
-    line: number;
-    range: [number, number];
-}
-export interface CallstackEntryStackTraceEntry {
-    type: StackTraceEntryType.CALLSTACK_ENTRY;
-    sourceReference: SourceReference;
-    functionType: ContractFunctionType;
-}
-export interface UnrecognizedCreateCallstackEntryStackTraceEntry {
-    type: StackTraceEntryType.UNRECOGNIZED_CREATE_CALLSTACK_ENTRY;
-    sourceReference?: undefined;
-}
-export interface UnrecognizedContractCallstackEntryStackTraceEntry {
-    type: StackTraceEntryType.UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY;
-    address: Uint8Array;
-    sourceReference?: undefined;
-}
-export interface PrecompileErrorStackTraceEntry {
-    type: StackTraceEntryType.PRECOMPILE_ERROR;
-    precompile: number;
-    sourceReference?: undefined;
-}
-export interface RevertErrorStackTraceEntry {
-    type: StackTraceEntryType.REVERT_ERROR;
-    message: ReturnData;
-    sourceReference: SourceReference;
-    isInvalidOpcodeError: boolean;
-}
-export interface PanicErrorStackTraceEntry {
-    type: StackTraceEntryType.PANIC_ERROR;
-    errorCode: bigint;
-    sourceReference?: SourceReference;
-}
-export interface CustomErrorStackTraceEntry {
-    type: StackTraceEntryType.CUSTOM_ERROR;
-    message: string;
-    sourceReference: SourceReference;
-}
-export interface UnmappedSolc063RevertErrorStackTraceEntry {
-    type: StackTraceEntryType.UNMAPPED_SOLC_0_6_3_REVERT_ERROR;
-    sourceReference?: SourceReference;
-}
-export interface FunctionNotPayableErrorStackTraceEntry {
-    type: StackTraceEntryType.FUNCTION_NOT_PAYABLE_ERROR;
-    value: bigint;
-    sourceReference: SourceReference;
-}
-export interface InvalidParamsErrorStackTraceEntry {
-    type: StackTraceEntryType.INVALID_PARAMS_ERROR;
-    sourceReference: SourceReference;
-}
-export interface FallbackNotPayableErrorStackTraceEntry {
-    type: StackTraceEntryType.FALLBACK_NOT_PAYABLE_ERROR;
-    value: bigint;
-    sourceReference: SourceReference;
-}
-export interface FallbackNotPayableAndNoReceiveErrorStackTraceEntry {
-    type: StackTraceEntryType.FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR;
-    value: bigint;
-    sourceReference: SourceReference;
-}
-export interface UnrecognizedFunctionWithoutFallbackErrorStackTraceEntry {
-    type: StackTraceEntryType.UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR;
-    sourceReference: SourceReference;
-}
-export interface MissingFallbackOrReceiveErrorStackTraceEntry {
-    type: StackTraceEntryType.MISSING_FALLBACK_OR_RECEIVE_ERROR;
-    sourceReference: SourceReference;
-}
-export interface ReturndataSizeErrorStackTraceEntry {
-    type: StackTraceEntryType.RETURNDATA_SIZE_ERROR;
-    sourceReference: SourceReference;
-}
-export interface NonContractAccountCalledErrorStackTraceEntry {
-    type: StackTraceEntryType.NONCONTRACT_ACCOUNT_CALLED_ERROR;
-    sourceReference: SourceReference;
-}
-export interface CallFailedErrorStackTraceEntry {
-    type: StackTraceEntryType.CALL_FAILED_ERROR;
-    sourceReference: SourceReference;
-}
-export interface DirectLibraryCallErrorStackTraceEntry {
-    type: StackTraceEntryType.DIRECT_LIBRARY_CALL_ERROR;
-    sourceReference: SourceReference;
-}
-export interface UnrecognizedCreateErrorStackTraceEntry {
-    type: StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR;
-    message: ReturnData;
-    sourceReference?: undefined;
-    isInvalidOpcodeError: boolean;
-}
-export interface UnrecognizedContractErrorStackTraceEntry {
-    type: StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR;
-    address: Uint8Array;
-    message: ReturnData;
-    sourceReference?: undefined;
-    isInvalidOpcodeError: boolean;
-}
-export interface OtherExecutionErrorStackTraceEntry {
-    type: StackTraceEntryType.OTHER_EXECUTION_ERROR;
-    sourceReference?: SourceReference;
-}
-export interface ContractTooLargeErrorStackTraceEntry {
-    type: StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR;
-    sourceReference?: SourceReference;
-}
-export interface InternalFunctionCallStackEntry {
-    type: StackTraceEntryType.INTERNAL_FUNCTION_CALLSTACK_ENTRY;
-    pc: number;
-    sourceReference: SourceReference;
-}
-export interface ContractCallRunOutOfGasError {
-    type: StackTraceEntryType.CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR;
-    sourceReference?: SourceReference;
-}
+import type { SourceReference, CallstackEntryStackTraceEntry, UnrecognizedCreateCallstackEntryStackTraceEntry, UnrecognizedContractCallstackEntryStackTraceEntry, PrecompileErrorStackTraceEntry, RevertErrorStackTraceEntry, PanicErrorStackTraceEntry, CustomErrorStackTraceEntry, FunctionNotPayableErrorStackTraceEntry, InvalidParamsErrorStackTraceEntry, FallbackNotPayableErrorStackTraceEntry, FallbackNotPayableAndNoReceiveErrorStackTraceEntry, UnrecognizedFunctionWithoutFallbackErrorStackTraceEntry, MissingFallbackOrReceiveErrorStackTraceEntry, ReturndataSizeErrorStackTraceEntry, NonContractAccountCalledErrorStackTraceEntry, CallFailedErrorStackTraceEntry, DirectLibraryCallErrorStackTraceEntry, UnrecognizedCreateErrorStackTraceEntry, UnrecognizedContractErrorStackTraceEntry, OtherExecutionErrorStackTraceEntry, UnmappedSolc063RevertErrorStackTraceEntry, ContractTooLargeErrorStackTraceEntry, InternalFunctionCallStackEntry, ContractCallRunOutOfGasError } from "@nomicfoundation/edr";
+declare const StackTraceEntryType: typeof import("@nomicfoundation/edr").StackTraceEntryType, stackTraceEntryTypeToString: typeof import("@nomicfoundation/edr").stackTraceEntryTypeToString, FALLBACK_FUNCTION_NAME: string, RECEIVE_FUNCTION_NAME: string, CONSTRUCTOR_FUNCTION_NAME: string, UNRECOGNIZED_FUNCTION_NAME: string, UNKNOWN_FUNCTION_NAME: string, PRECOMPILE_FUNCTION_NAME: string, UNRECOGNIZED_CONTRACT_NAME: string;
+export { SourceReference, StackTraceEntryType, stackTraceEntryTypeToString, FALLBACK_FUNCTION_NAME, RECEIVE_FUNCTION_NAME, CONSTRUCTOR_FUNCTION_NAME, UNRECOGNIZED_FUNCTION_NAME, UNKNOWN_FUNCTION_NAME, PRECOMPILE_FUNCTION_NAME, UNRECOGNIZED_CONTRACT_NAME, };
+export type { CallstackEntryStackTraceEntry, UnrecognizedCreateCallstackEntryStackTraceEntry, UnrecognizedContractCallstackEntryStackTraceEntry, PrecompileErrorStackTraceEntry, RevertErrorStackTraceEntry, PanicErrorStackTraceEntry, CustomErrorStackTraceEntry, FunctionNotPayableErrorStackTraceEntry, InvalidParamsErrorStackTraceEntry, FallbackNotPayableErrorStackTraceEntry, FallbackNotPayableAndNoReceiveErrorStackTraceEntry, UnrecognizedFunctionWithoutFallbackErrorStackTraceEntry, MissingFallbackOrReceiveErrorStackTraceEntry, ReturndataSizeErrorStackTraceEntry, NonContractAccountCalledErrorStackTraceEntry, CallFailedErrorStackTraceEntry, DirectLibraryCallErrorStackTraceEntry, UnrecognizedCreateErrorStackTraceEntry, UnrecognizedContractErrorStackTraceEntry, OtherExecutionErrorStackTraceEntry, UnmappedSolc063RevertErrorStackTraceEntry, ContractTooLargeErrorStackTraceEntry, InternalFunctionCallStackEntry, ContractCallRunOutOfGasError, };
 export type SolidityStackTraceEntry = CallstackEntryStackTraceEntry | UnrecognizedCreateCallstackEntryStackTraceEntry | UnrecognizedContractCallstackEntryStackTraceEntry | PrecompileErrorStackTraceEntry | RevertErrorStackTraceEntry | PanicErrorStackTraceEntry | CustomErrorStackTraceEntry | FunctionNotPayableErrorStackTraceEntry | InvalidParamsErrorStackTraceEntry | FallbackNotPayableErrorStackTraceEntry | FallbackNotPayableAndNoReceiveErrorStackTraceEntry | UnrecognizedFunctionWithoutFallbackErrorStackTraceEntry | MissingFallbackOrReceiveErrorStackTraceEntry | ReturndataSizeErrorStackTraceEntry | NonContractAccountCalledErrorStackTraceEntry | CallFailedErrorStackTraceEntry | DirectLibraryCallErrorStackTraceEntry | UnrecognizedCreateErrorStackTraceEntry | UnrecognizedContractErrorStackTraceEntry | OtherExecutionErrorStackTraceEntry | UnmappedSolc063RevertErrorStackTraceEntry | ContractTooLargeErrorStackTraceEntry | InternalFunctionCallStackEntry | ContractCallRunOutOfGasError;
 export type SolidityStackTrace = SolidityStackTraceEntry[];
 //# sourceMappingURL=solidity-stack-trace.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/solidity-stack-trace.d.ts.map b/internal/hardhat-network/stack-traces/solidity-stack-trace.d.ts.map
index bd332222a5611b7c7ac4b73a2d224e433a0aad23..de99e1592f4bbe36a86d54fa0376567907620cdb 100644
--- a/internal/hardhat-network/stack-traces/solidity-stack-trace.d.ts.map
+++ b/internal/hardhat-network/stack-traces/solidity-stack-trace.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"solidity-stack-trace.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidity-stack-trace.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"solidity-stack-trace.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidity-stack-trace.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EACV,eAAe,EACf,6BAA6B,EAC7B,+CAA+C,EAC/C,iDAAiD,EACjD,8BAA8B,EAC9B,0BAA0B,EAC1B,yBAAyB,EACzB,0BAA0B,EAC1B,sCAAsC,EACtC,iCAAiC,EACjC,sCAAsC,EACtC,kDAAkD,EAClD,uDAAuD,EACvD,4CAA4C,EAC5C,kCAAkC,EAClC,4CAA4C,EAC5C,8BAA8B,EAC9B,qCAAqC,EACrC,sCAAsC,EACtC,wCAAwC,EACxC,kCAAkC,EAClC,yCAAyC,EACzC,oCAAoC,EACpC,8BAA8B,EAC9B,4BAA4B,EAC7B,MAAM,sBAAsB,CAAC;AAI9B,QAAA,MACE,mBAAmB,6DACnB,2BAA2B,qEAC3B,sBAAsB,UACtB,qBAAqB,UACrB,yBAAyB,UACzB,0BAA0B,UAC1B,qBAAqB,UACrB,wBAAwB,UACxB,0BAA0B,QAGc,CAAC;AAE3C,OAAO,EACL,eAAe,EACf,mBAAmB,EACnB,2BAA2B,EAC3B,sBAAsB,EACtB,qBAAqB,EACrB,yBAAyB,EACzB,0BAA0B,EAC1B,qBAAqB,EACrB,wBAAwB,EACxB,0BAA0B,GAC3B,CAAC;AAEF,YAAY,EACV,6BAA6B,EAC7B,+CAA+C,EAC/C,iDAAiD,EACjD,8BAA8B,EAC9B,0BAA0B,EAC1B,yBAAyB,EACzB,0BAA0B,EAC1B,sCAAsC,EACtC,iCAAiC,EACjC,sCAAsC,EACtC,kDAAkD,EAClD,uDAAuD,EACvD,4CAA4C,EAC5C,kCAAkC,EAClC,4CAA4C,EAC5C,8BAA8B,EAC9B,qCAAqC,EACrC,sCAAsC,EACtC,wCAAwC,EACxC,kCAAkC,EAClC,yCAAyC,EACzC,oCAAoC,EACpC,8BAA8B,EAC9B,4BAA4B,GAC7B,CAAC;AAEF,MAAM,MAAM,uBAAuB,GAC/B,6BAA6B,GAC7B,+CAA+C,GAC/C,iDAAiD,GACjD,8BAA8B,GAC9B,0BAA0B,GAC1B,yBAAyB,GACzB,0BAA0B,GAC1B,sCAAsC,GACtC,iCAAiC,GACjC,sCAAsC,GACtC,kDAAkD,GAClD,uDAAuD,GACvD,4CAA4C,GAC5C,kCAAkC,GAClC,4CAA4C,GAC5C,8BAA8B,GAC9B,qCAAqC,GACrC,sCAAsC,GACtC,wCAAwC,GACxC,kCAAkC,GAClC,yCAAyC,GACzC,oCAAoC,GACpC,8BAA8B,GAC9B,4BAA4B,CAAC;AAEjC,MAAM,MAAM,kBAAkB,GAAG,uBAAuB,EAAE,CAAC"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/solidity-stack-trace.js b/internal/hardhat-network/stack-traces/solidity-stack-trace.js
index 464792a9229b5d42f5cbf8677e5cc90df59aa784..e5d88bf76b28d881026036dde974cd8a619b6ad0 100644
--- a/internal/hardhat-network/stack-traces/solidity-stack-trace.js
+++ b/internal/hardhat-network/stack-traces/solidity-stack-trace.js
@@ -1,40 +1,15 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
-exports.UNRECOGNIZED_CONTRACT_NAME = exports.PRECOMPILE_FUNCTION_NAME = exports.UNKNOWN_FUNCTION_NAME = exports.UNRECOGNIZED_FUNCTION_NAME = exports.CONSTRUCTOR_FUNCTION_NAME = exports.RECEIVE_FUNCTION_NAME = exports.FALLBACK_FUNCTION_NAME = exports.StackTraceEntryType = void 0;
-var StackTraceEntryType;
-(function (StackTraceEntryType) {
-    StackTraceEntryType[StackTraceEntryType["CALLSTACK_ENTRY"] = 0] = "CALLSTACK_ENTRY";
-    StackTraceEntryType[StackTraceEntryType["UNRECOGNIZED_CREATE_CALLSTACK_ENTRY"] = 1] = "UNRECOGNIZED_CREATE_CALLSTACK_ENTRY";
-    StackTraceEntryType[StackTraceEntryType["UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY"] = 2] = "UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY";
-    StackTraceEntryType[StackTraceEntryType["PRECOMPILE_ERROR"] = 3] = "PRECOMPILE_ERROR";
-    StackTraceEntryType[StackTraceEntryType["REVERT_ERROR"] = 4] = "REVERT_ERROR";
-    StackTraceEntryType[StackTraceEntryType["PANIC_ERROR"] = 5] = "PANIC_ERROR";
-    StackTraceEntryType[StackTraceEntryType["CUSTOM_ERROR"] = 6] = "CUSTOM_ERROR";
-    StackTraceEntryType[StackTraceEntryType["FUNCTION_NOT_PAYABLE_ERROR"] = 7] = "FUNCTION_NOT_PAYABLE_ERROR";
-    StackTraceEntryType[StackTraceEntryType["INVALID_PARAMS_ERROR"] = 8] = "INVALID_PARAMS_ERROR";
-    StackTraceEntryType[StackTraceEntryType["FALLBACK_NOT_PAYABLE_ERROR"] = 9] = "FALLBACK_NOT_PAYABLE_ERROR";
-    StackTraceEntryType[StackTraceEntryType["FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR"] = 10] = "FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR";
-    StackTraceEntryType[StackTraceEntryType["UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR"] = 11] = "UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR";
-    StackTraceEntryType[StackTraceEntryType["MISSING_FALLBACK_OR_RECEIVE_ERROR"] = 12] = "MISSING_FALLBACK_OR_RECEIVE_ERROR";
-    StackTraceEntryType[StackTraceEntryType["RETURNDATA_SIZE_ERROR"] = 13] = "RETURNDATA_SIZE_ERROR";
-    StackTraceEntryType[StackTraceEntryType["NONCONTRACT_ACCOUNT_CALLED_ERROR"] = 14] = "NONCONTRACT_ACCOUNT_CALLED_ERROR";
-    StackTraceEntryType[StackTraceEntryType["CALL_FAILED_ERROR"] = 15] = "CALL_FAILED_ERROR";
-    StackTraceEntryType[StackTraceEntryType["DIRECT_LIBRARY_CALL_ERROR"] = 16] = "DIRECT_LIBRARY_CALL_ERROR";
-    StackTraceEntryType[StackTraceEntryType["UNRECOGNIZED_CREATE_ERROR"] = 17] = "UNRECOGNIZED_CREATE_ERROR";
-    StackTraceEntryType[StackTraceEntryType["UNRECOGNIZED_CONTRACT_ERROR"] = 18] = "UNRECOGNIZED_CONTRACT_ERROR";
-    StackTraceEntryType[StackTraceEntryType["OTHER_EXECUTION_ERROR"] = 19] = "OTHER_EXECUTION_ERROR";
-    // This is a special case to handle a regression introduced in solc 0.6.3
-    // For more info: https://github.com/ethereum/solidity/issues/9006
-    StackTraceEntryType[StackTraceEntryType["UNMAPPED_SOLC_0_6_3_REVERT_ERROR"] = 20] = "UNMAPPED_SOLC_0_6_3_REVERT_ERROR";
-    StackTraceEntryType[StackTraceEntryType["CONTRACT_TOO_LARGE_ERROR"] = 21] = "CONTRACT_TOO_LARGE_ERROR";
-    StackTraceEntryType[StackTraceEntryType["INTERNAL_FUNCTION_CALLSTACK_ENTRY"] = 22] = "INTERNAL_FUNCTION_CALLSTACK_ENTRY";
-    StackTraceEntryType[StackTraceEntryType["CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR"] = 23] = "CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR";
-})(StackTraceEntryType = exports.StackTraceEntryType || (exports.StackTraceEntryType = {}));
-exports.FALLBACK_FUNCTION_NAME = "<fallback>";
-exports.RECEIVE_FUNCTION_NAME = "<receive>";
-exports.CONSTRUCTOR_FUNCTION_NAME = "constructor";
-exports.UNRECOGNIZED_FUNCTION_NAME = "<unrecognized-selector>";
-exports.UNKNOWN_FUNCTION_NAME = "<unknown>";
-exports.PRECOMPILE_FUNCTION_NAME = "<precompile>";
-exports.UNRECOGNIZED_CONTRACT_NAME = "<UnrecognizedContract>";
+exports.UNRECOGNIZED_CONTRACT_NAME = exports.PRECOMPILE_FUNCTION_NAME = exports.UNKNOWN_FUNCTION_NAME = exports.UNRECOGNIZED_FUNCTION_NAME = exports.CONSTRUCTOR_FUNCTION_NAME = exports.RECEIVE_FUNCTION_NAME = exports.FALLBACK_FUNCTION_NAME = exports.stackTraceEntryTypeToString = exports.StackTraceEntryType = void 0;
+const napi_rs_1 = require("../../../common/napi-rs");
+const { StackTraceEntryType, stackTraceEntryTypeToString, FALLBACK_FUNCTION_NAME, RECEIVE_FUNCTION_NAME, CONSTRUCTOR_FUNCTION_NAME, UNRECOGNIZED_FUNCTION_NAME, UNKNOWN_FUNCTION_NAME, PRECOMPILE_FUNCTION_NAME, UNRECOGNIZED_CONTRACT_NAME, } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+exports.StackTraceEntryType = StackTraceEntryType;
+exports.stackTraceEntryTypeToString = stackTraceEntryTypeToString;
+exports.FALLBACK_FUNCTION_NAME = FALLBACK_FUNCTION_NAME;
+exports.RECEIVE_FUNCTION_NAME = RECEIVE_FUNCTION_NAME;
+exports.CONSTRUCTOR_FUNCTION_NAME = CONSTRUCTOR_FUNCTION_NAME;
+exports.UNRECOGNIZED_FUNCTION_NAME = UNRECOGNIZED_FUNCTION_NAME;
+exports.UNKNOWN_FUNCTION_NAME = UNKNOWN_FUNCTION_NAME;
+exports.PRECOMPILE_FUNCTION_NAME = PRECOMPILE_FUNCTION_NAME;
+exports.UNRECOGNIZED_CONTRACT_NAME = UNRECOGNIZED_CONTRACT_NAME;
 //# sourceMappingURL=solidity-stack-trace.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/solidity-stack-trace.js.map b/internal/hardhat-network/stack-traces/solidity-stack-trace.js.map
index 6ad6da5477e18ca76ce848b091cea6bfd5e92f91..8db3eb01f6b3ed34ccbb5b99c1ef19998a5f7f02 100644
--- a/internal/hardhat-network/stack-traces/solidity-stack-trace.js.map
+++ b/internal/hardhat-network/stack-traces/solidity-stack-trace.js.map
@@ -1 +1 @@
-{"version":3,"file":"solidity-stack-trace.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidity-stack-trace.ts"],"names":[],"mappings":";;;AAIA,IAAY,mBA2BX;AA3BD,WAAY,mBAAmB;IAC7B,mFAAe,CAAA;IACf,2HAAmC,CAAA;IACnC,+HAAqC,CAAA;IACrC,qFAAgB,CAAA;IAChB,6EAAY,CAAA;IACZ,2EAAW,CAAA;IACX,6EAAY,CAAA;IACZ,yGAA0B,CAAA;IAC1B,6FAAoB,CAAA;IACpB,yGAA0B,CAAA;IAC1B,wIAAyC,CAAA;IACzC,8IAA4C,CAAA;IAC5C,wHAAiC,CAAA;IACjC,gGAAqB,CAAA;IACrB,sHAAgC,CAAA;IAChC,wFAAiB,CAAA;IACjB,wGAAyB,CAAA;IACzB,wGAAyB,CAAA;IACzB,4GAA2B,CAAA;IAC3B,gGAAqB,CAAA;IACrB,yEAAyE;IACzE,kEAAkE;IAClE,sHAAgC,CAAA;IAChC,sGAAwB,CAAA;IACxB,wHAAiC,CAAA;IACjC,0HAAkC,CAAA;AACpC,CAAC,EA3BW,mBAAmB,GAAnB,2BAAmB,KAAnB,2BAAmB,QA2B9B;AAEY,QAAA,sBAAsB,GAAG,YAAY,CAAC;AACtC,QAAA,qBAAqB,GAAG,WAAW,CAAC;AACpC,QAAA,yBAAyB,GAAG,aAAa,CAAC;AAC1C,QAAA,0BAA0B,GAAG,yBAAyB,CAAC;AACvD,QAAA,qBAAqB,GAAG,WAAW,CAAC;AACpC,QAAA,wBAAwB,GAAG,cAAc,CAAC;AAC1C,QAAA,0BAA0B,GAAG,wBAAwB,CAAC"}
\ No newline at end of file
+{"version":3,"file":"solidity-stack-trace.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidity-stack-trace.ts"],"names":[],"mappings":";;;AA4BA,qDAA8D;AAE9D,MAAM,EACJ,mBAAmB,EACnB,2BAA2B,EAC3B,sBAAsB,EACtB,qBAAqB,EACrB,yBAAyB,EACzB,0BAA0B,EAC1B,qBAAqB,EACrB,wBAAwB,EACxB,0BAA0B,GAC3B,GAAG,IAAA,6BAAmB,EACrB,sBAAsB,CACkB,CAAC;AAIzC,kDAAmB;AACnB,kEAA2B;AAC3B,wDAAsB;AACtB,sDAAqB;AACrB,8DAAyB;AACzB,gEAA0B;AAC1B,sDAAqB;AACrB,4DAAwB;AACxB,gEAA0B"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/solidityTracer.d.ts b/internal/hardhat-network/stack-traces/solidityTracer.d.ts
index c60da6822b44d02950224a722182a6e9377e0665..b09e6e34c21b0213323149dc7476234406377cb7 100644
--- a/internal/hardhat-network/stack-traces/solidityTracer.d.ts
+++ b/internal/hardhat-network/stack-traces/solidityTracer.d.ts
@@ -1,14 +1,3 @@
-import { MessageTrace } from "./message-trace";
-import { SolidityStackTrace } from "./solidity-stack-trace";
-export declare class SolidityTracer {
-    private _errorInferrer;
-    getStackTrace(maybeDecodedMessageTrace: MessageTrace): SolidityStackTrace;
-    private _getCallMessageStackTrace;
-    private _getUnrecognizedMessageStackTrace;
-    private _getCreateMessageStackTrace;
-    private _getPrecompileMessageStackTrace;
-    private _traceEvmExecution;
-    private _rawTraceEvmExecution;
-    private _getLastSubtrace;
-}
+declare const SolidityTracer: typeof import("@nomicfoundation/edr").SolidityTracer;
+export { SolidityTracer };
 //# sourceMappingURL=solidityTracer.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/solidityTracer.d.ts.map b/internal/hardhat-network/stack-traces/solidityTracer.d.ts.map
index 05b6b71285607f687ab5c943ea7f6b3521aed1e1..c4c1615e8fbce76ba6b0e0b3d19fd1e997b38765 100644
--- a/internal/hardhat-network/stack-traces/solidityTracer.d.ts.map
+++ b/internal/hardhat-network/stack-traces/solidityTracer.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"solidityTracer.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidityTracer.ts"],"names":[],"mappings":"AAcA,OAAO,EAWL,YAAY,EAEb,MAAM,iBAAiB,CAAC;AAGzB,OAAO,EACL,kBAAkB,EAGnB,MAAM,wBAAwB,CAAC;AAEhC,qBAAa,cAAc;IACzB,OAAO,CAAC,cAAc,CAAuB;IAEtC,aAAa,CAClB,wBAAwB,EAAE,YAAY,GACrC,kBAAkB;IAoBrB,OAAO,CAAC,yBAAyB;IAajC,OAAO,CAAC,iCAAiC;IA2DzC,OAAO,CAAC,2BAA2B;IAanC,OAAO,CAAC,+BAA+B;IAWvC,OAAO,CAAC,kBAAkB;IAY1B,OAAO,CAAC,qBAAqB;IAwE7B,OAAO,CAAC,gBAAgB;CAazB"}
\ No newline at end of file
+{"version":3,"file":"solidityTracer.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidityTracer.ts"],"names":[],"mappings":"AAEA,QAAA,MAAQ,cAAc,sDAEoB,CAAC;AAE3C,OAAO,EAAE,cAAc,EAAE,CAAC"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/solidityTracer.js b/internal/hardhat-network/stack-traces/solidityTracer.js
index 08f4e6bf80b81fed910dccc3052b9c886fd0338e..4540fea8431eb15155db13adb568053db39f2eab 100644
--- a/internal/hardhat-network/stack-traces/solidityTracer.js
+++ b/internal/hardhat-network/stack-traces/solidityTracer.js
@@ -1,167 +1,7 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.SolidityTracer = void 0;
-const ethereumjs_util_1 = require("@nomicfoundation/ethereumjs-util");
-const return_data_1 = require("../provider/return-data");
-const exit_1 = require("../provider/vm/exit");
-const error_inferrer_1 = require("./error-inferrer");
-const mapped_inlined_internal_functions_heuristics_1 = require("./mapped-inlined-internal-functions-heuristics");
-const message_trace_1 = require("./message-trace");
-const model_1 = require("./model");
-const opcodes_1 = require("./opcodes");
-const solidity_stack_trace_1 = require("./solidity-stack-trace");
-class SolidityTracer {
-    constructor() {
-        this._errorInferrer = new error_inferrer_1.ErrorInferrer();
-    }
-    getStackTrace(maybeDecodedMessageTrace) {
-        if (!maybeDecodedMessageTrace.exit.isError()) {
-            return [];
-        }
-        if ((0, message_trace_1.isPrecompileTrace)(maybeDecodedMessageTrace)) {
-            return this._getPrecompileMessageStackTrace(maybeDecodedMessageTrace);
-        }
-        if ((0, message_trace_1.isDecodedCreateTrace)(maybeDecodedMessageTrace)) {
-            return this._getCreateMessageStackTrace(maybeDecodedMessageTrace);
-        }
-        if ((0, message_trace_1.isDecodedCallTrace)(maybeDecodedMessageTrace)) {
-            return this._getCallMessageStackTrace(maybeDecodedMessageTrace);
-        }
-        return this._getUnrecognizedMessageStackTrace(maybeDecodedMessageTrace);
-    }
-    _getCallMessageStackTrace(trace) {
-        const inferredError = this._errorInferrer.inferBeforeTracingCallMessage(trace);
-        if (inferredError !== undefined) {
-            return inferredError;
-        }
-        return this._traceEvmExecution(trace);
-    }
-    _getUnrecognizedMessageStackTrace(trace) {
-        const subtrace = this._getLastSubtrace(trace);
-        if (subtrace !== undefined) {
-            // This is not a very exact heuristic, but most of the time it will be right, as solidity
-            // reverts if a call fails, and most contracts are in solidity
-            if (subtrace.exit.isError() &&
-                (0, ethereumjs_util_1.equalsBytes)(trace.returnData, subtrace.returnData)) {
-                let unrecognizedEntry;
-                if ((0, message_trace_1.isCreateTrace)(trace)) {
-                    unrecognizedEntry = {
-                        type: solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_CALLSTACK_ENTRY,
-                    };
-                }
-                else {
-                    unrecognizedEntry = {
-                        type: solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY,
-                        address: trace.address,
-                    };
-                }
-                return [unrecognizedEntry, ...this.getStackTrace(subtrace)];
-            }
-        }
-        if (trace.exit.kind === exit_1.ExitCode.CODESIZE_EXCEEDS_MAXIMUM) {
-            return [
-                {
-                    type: solidity_stack_trace_1.StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR,
-                },
-            ];
-        }
-        const isInvalidOpcodeError = trace.exit.kind === exit_1.ExitCode.INVALID_OPCODE;
-        if ((0, message_trace_1.isCreateTrace)(trace)) {
-            return [
-                {
-                    type: solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR,
-                    message: new return_data_1.ReturnData(trace.returnData),
-                    isInvalidOpcodeError,
-                },
-            ];
-        }
-        return [
-            {
-                type: solidity_stack_trace_1.StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR,
-                address: trace.address,
-                message: new return_data_1.ReturnData(trace.returnData),
-                isInvalidOpcodeError,
-            },
-        ];
-    }
-    _getCreateMessageStackTrace(trace) {
-        const inferredError = this._errorInferrer.inferBeforeTracingCreateMessage(trace);
-        if (inferredError !== undefined) {
-            return inferredError;
-        }
-        return this._traceEvmExecution(trace);
-    }
-    _getPrecompileMessageStackTrace(trace) {
-        return [
-            {
-                type: solidity_stack_trace_1.StackTraceEntryType.PRECOMPILE_ERROR,
-                precompile: trace.precompile,
-            },
-        ];
-    }
-    _traceEvmExecution(trace) {
-        const stackTrace = this._rawTraceEvmExecution(trace);
-        if ((0, mapped_inlined_internal_functions_heuristics_1.stackTraceMayRequireAdjustments)(stackTrace, trace)) {
-            return (0, mapped_inlined_internal_functions_heuristics_1.adjustStackTrace)(stackTrace, trace);
-        }
-        return stackTrace;
-    }
-    _rawTraceEvmExecution(trace) {
-        const stacktrace = [];
-        let subtracesSeen = 0;
-        // There was a jump into a function according to the sourcemaps
-        let jumpedIntoFunction = false;
-        const functionJumpdests = [];
-        let lastSubmessageData;
-        for (let stepIndex = 0; stepIndex < trace.steps.length; stepIndex++) {
-            const step = trace.steps[stepIndex];
-            const nextStep = trace.steps[stepIndex + 1];
-            if ((0, message_trace_1.isEvmStep)(step)) {
-                const inst = trace.bytecode.getInstruction(step.pc);
-                if (inst.jumpType === model_1.JumpType.INTO_FUNCTION &&
-                    nextStep !== undefined) {
-                    const nextEvmStep = nextStep; // A jump can't be followed by a subtrace
-                    const nextInst = trace.bytecode.getInstruction(nextEvmStep.pc);
-                    if (nextInst !== undefined && nextInst.opcode === opcodes_1.Opcode.JUMPDEST) {
-                        stacktrace.push((0, error_inferrer_1.instructionToCallstackStackTraceEntry)(trace.bytecode, inst));
-                        if (nextInst.location !== undefined) {
-                            jumpedIntoFunction = true;
-                        }
-                        functionJumpdests.push(nextInst);
-                    }
-                }
-                else if (inst.jumpType === model_1.JumpType.OUTOF_FUNCTION) {
-                    stacktrace.pop();
-                    functionJumpdests.pop();
-                }
-            }
-            else {
-                subtracesSeen += 1;
-                // If there are more subtraces, this one didn't terminate the execution
-                if (subtracesSeen < trace.numberOfSubtraces) {
-                    continue;
-                }
-                const submessageTrace = this.getStackTrace(step);
-                lastSubmessageData = {
-                    messageTrace: step,
-                    stepIndex,
-                    stacktrace: submessageTrace,
-                };
-            }
-        }
-        const stacktraceWithInferredError = this._errorInferrer.inferAfterTracing(trace, stacktrace, functionJumpdests, jumpedIntoFunction, lastSubmessageData);
-        return this._errorInferrer.filterRedundantFrames(stacktraceWithInferredError);
-    }
-    _getLastSubtrace(trace) {
-        if (trace.numberOfSubtraces < 1) {
-            return undefined;
-        }
-        let i = trace.steps.length - 1;
-        while ((0, message_trace_1.isEvmStep)(trace.steps[i])) {
-            i -= 1;
-        }
-        return trace.steps[i];
-    }
-}
+const napi_rs_1 = require("../../../common/napi-rs");
+const { SolidityTracer } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
 exports.SolidityTracer = SolidityTracer;
 //# sourceMappingURL=solidityTracer.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/solidityTracer.js.map b/internal/hardhat-network/stack-traces/solidityTracer.js.map
index 8aa9ffe76723470f68ffd824d9cac39de6494962..a5d3e7fcad652339fdd4651208e026dbc8edf768 100644
--- a/internal/hardhat-network/stack-traces/solidityTracer.js.map
+++ b/internal/hardhat-network/stack-traces/solidityTracer.js.map
@@ -1 +1 @@
-{"version":3,"file":"solidityTracer.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidityTracer.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"solidityTracer.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/solidityTracer.ts"],"names":[],"mappings":";;;AAAA,qDAA8D;AAE9D,MAAM,EAAE,cAAc,EAAE,GAAG,IAAA,6BAAmB,EAC5C,sBAAsB,CACkB,CAAC;AAElC,wCAAc"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/vm-trace-decoder.d.ts b/internal/hardhat-network/stack-traces/vm-trace-decoder.d.ts
index 9ab9469708c0ddcded9aed839acf9c5f0c260543..4c31c3673060282fca8e4ac2fe0b8342e99390a9 100644
--- a/internal/hardhat-network/stack-traces/vm-trace-decoder.d.ts
+++ b/internal/hardhat-network/stack-traces/vm-trace-decoder.d.ts
@@ -1,17 +1,6 @@
-/// <reference types="node" />
+import type { VmTraceDecoder as VmTraceDecoderT } from "@nomicfoundation/edr";
 import { TracingConfig } from "../provider/node-types";
-import { ContractsIdentifier } from "./contracts-identifier";
-import { MessageTrace } from "./message-trace";
-import { Bytecode } from "./model";
-export declare class VmTraceDecoder {
-    private readonly _contractsIdentifier;
-    constructor(_contractsIdentifier: ContractsIdentifier);
-    getContractAndFunctionNamesForCall(code: Buffer, calldata?: Buffer): {
-        contractName: string;
-        functionName?: string;
-    };
-    tryToDecodeMessageTrace(messageTrace: MessageTrace): MessageTrace;
-    addBytecode(bytecode: Bytecode): void;
-}
-export declare function initializeVmTraceDecoder(vmTraceDecoder: VmTraceDecoder, tracingConfig: TracingConfig): void;
+declare const VmTraceDecoder: typeof VmTraceDecoderT;
+declare function initializeVmTraceDecoderWrapper(vmTraceDecoder: VmTraceDecoderT, tracingConfig: TracingConfig): void;
+export { VmTraceDecoder, VmTraceDecoderT, initializeVmTraceDecoderWrapper as initializeVmTraceDecoder, };
 //# sourceMappingURL=vm-trace-decoder.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/vm-trace-decoder.d.ts.map b/internal/hardhat-network/stack-traces/vm-trace-decoder.d.ts.map
index 708695c850760ec2fa7c4dacb8fcc2bc4556bade..4e60e9b42c517e5df21ae3b1704cfd995b37c0d1 100644
--- a/internal/hardhat-network/stack-traces/vm-trace-decoder.d.ts.map
+++ b/internal/hardhat-network/stack-traces/vm-trace-decoder.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"vm-trace-decoder.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/vm-trace-decoder.ts"],"names":[],"mappings":";AAGA,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AAEvD,OAAO,EAAE,mBAAmB,EAAE,MAAM,wBAAwB,CAAC;AAC7D,OAAO,EAIL,YAAY,EACb,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAE,QAAQ,EAAwB,MAAM,SAAS,CAAC;AAUzD,qBAAa,cAAc;IACb,OAAO,CAAC,QAAQ,CAAC,oBAAoB;gBAApB,oBAAoB,EAAE,mBAAmB;IAE/D,kCAAkC,CACvC,IAAI,EAAE,MAAM,EACZ,QAAQ,CAAC,EAAE,MAAM,GAChB;QAAE,YAAY,EAAE,MAAM,CAAC;QAAC,YAAY,CAAC,EAAE,MAAM,CAAA;KAAE;IAyC3C,uBAAuB,CAAC,YAAY,EAAE,YAAY,GAAG,YAAY;IAiBjE,WAAW,CAAC,QAAQ,EAAE,QAAQ;CAGtC;AAED,wBAAgB,wBAAwB,CACtC,cAAc,EAAE,cAAc,EAC9B,aAAa,EAAE,aAAa,QAyC7B"}
\ No newline at end of file
+{"version":3,"file":"vm-trace-decoder.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/vm-trace-decoder.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAAE,cAAc,IAAI,eAAe,EAAE,MAAM,sBAAsB,CAAC;AAI9E,OAAO,EAAE,aAAa,EAAE,MAAM,wBAAwB,CAAC;AAKvD,QAAA,MAAQ,cAAc,wBAEoB,CAAC;AAE3C,iBAAS,+BAA+B,CACtC,cAAc,EAAE,eAAe,EAC/B,aAAa,EAAE,aAAa,QAoB7B;AAED,OAAO,EACL,cAAc,EACd,eAAe,EACf,+BAA+B,IAAI,wBAAwB,GAC5D,CAAC"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/vm-trace-decoder.js b/internal/hardhat-network/stack-traces/vm-trace-decoder.js
index 4d344963203e4ddb9e0ce4eddc2c08797847547b..75b3d329189c21bebf7bc06b515aa8c140144c59 100644
--- a/internal/hardhat-network/stack-traces/vm-trace-decoder.js
+++ b/internal/hardhat-network/stack-traces/vm-trace-decoder.js
@@ -7,85 +7,21 @@ exports.initializeVmTraceDecoder = exports.VmTraceDecoder = void 0;
 const chalk_1 = __importDefault(require("chalk"));
 const debug_1 = __importDefault(require("debug"));
 const reporter_1 = require("../../sentry/reporter");
-const compiler_to_model_1 = require("./compiler-to-model");
-const message_trace_1 = require("./message-trace");
-const model_1 = require("./model");
-const solidity_stack_trace_1 = require("./solidity-stack-trace");
+const napi_rs_1 = require("../../../common/napi-rs");
 const log = (0, debug_1.default)("hardhat:core:hardhat-network:node");
-class VmTraceDecoder {
-    constructor(_contractsIdentifier) {
-        this._contractsIdentifier = _contractsIdentifier;
-    }
-    getContractAndFunctionNamesForCall(code, calldata) {
-        const isCreate = calldata === undefined;
-        const bytecode = this._contractsIdentifier.getBytecodeForCall(code, isCreate);
-        const contractName = bytecode?.contract.name ?? solidity_stack_trace_1.UNRECOGNIZED_CONTRACT_NAME;
-        if (isCreate) {
-            return {
-                contractName,
-            };
-        }
-        else {
-            if (bytecode === undefined) {
-                return {
-                    contractName,
-                    functionName: "",
-                };
-            }
-            else {
-                const func = bytecode.contract.getFunctionFromSelector(calldata.slice(0, 4));
-                const functionName = func === undefined
-                    ? solidity_stack_trace_1.UNRECOGNIZED_FUNCTION_NAME
-                    : func.type === model_1.ContractFunctionType.FALLBACK
-                        ? solidity_stack_trace_1.FALLBACK_FUNCTION_NAME
-                        : func.type === model_1.ContractFunctionType.RECEIVE
-                            ? solidity_stack_trace_1.RECEIVE_FUNCTION_NAME
-                            : func.name;
-                return {
-                    contractName,
-                    functionName,
-                };
-            }
-        }
-    }
-    tryToDecodeMessageTrace(messageTrace) {
-        if ((0, message_trace_1.isPrecompileTrace)(messageTrace)) {
-            return messageTrace;
-        }
-        return {
-            ...messageTrace,
-            bytecode: this._contractsIdentifier.getBytecodeForCall(messageTrace.code, (0, message_trace_1.isCreateTrace)(messageTrace)),
-            steps: messageTrace.steps.map((s) => (0, message_trace_1.isEvmStep)(s) ? s : this.tryToDecodeMessageTrace(s)),
-        };
-    }
-    addBytecode(bytecode) {
-        this._contractsIdentifier.addBytecode(bytecode);
-    }
-}
+const { VmTraceDecoder, initializeVmTraceDecoder } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
 exports.VmTraceDecoder = VmTraceDecoder;
-function initializeVmTraceDecoder(vmTraceDecoder, tracingConfig) {
-    if (tracingConfig.buildInfos === undefined) {
-        return;
-    }
+function initializeVmTraceDecoderWrapper(vmTraceDecoder, tracingConfig) {
     try {
-        for (const buildInfo of tracingConfig.buildInfos) {
-            const bytecodes = (0, compiler_to_model_1.createModelsAndDecodeBytecodes)(buildInfo.solcVersion, buildInfo.input, buildInfo.output);
-            for (const bytecode of bytecodes) {
-                if (tracingConfig.ignoreContracts === true &&
-                    bytecode.contract.name.startsWith("Ignored")) {
-                    continue;
-                }
-                vmTraceDecoder.addBytecode(bytecode);
-            }
-        }
+        initializeVmTraceDecoder(vmTraceDecoder, tracingConfig);
     }
     catch (error) {
         console.warn(chalk_1.default.yellow("The Hardhat Network tracing engine could not be initialized. Run Hardhat with --verbose to learn more."));
-        log("Hardhat Network tracing disabled: ContractsIdentifier failed to be initialized. Please report this to help us improve Hardhat.\n", error);
+        log("Hardhat Network tracing disabled: VmTraceDecoder failed to be initialized. Please report this to help us improve Hardhat.\n", error);
         if (error instanceof Error) {
             reporter_1.Reporter.reportError(error);
         }
     }
 }
-exports.initializeVmTraceDecoder = initializeVmTraceDecoder;
+exports.initializeVmTraceDecoder = initializeVmTraceDecoderWrapper;
 //# sourceMappingURL=vm-trace-decoder.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/vm-trace-decoder.js.map b/internal/hardhat-network/stack-traces/vm-trace-decoder.js.map
index 445c3d5dd155afa63e92ca1bc586e86b2edc2f1e..1e51849e93867ce811df06946652be1aab9a6ef3 100644
--- a/internal/hardhat-network/stack-traces/vm-trace-decoder.js.map
+++ b/internal/hardhat-network/stack-traces/vm-trace-decoder.js.map
@@ -1 +1 @@
-{"version":3,"file":"vm-trace-decoder.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/vm-trace-decoder.ts"],"names":[],"mappings":"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"}
\ No newline at end of file
+{"version":3,"file":"vm-trace-decoder.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/vm-trace-decoder.ts"],"names":[],"mappings":";;;;;;AACA,kDAA0B;AAC1B,kDAA0B;AAC1B,oDAAiD;AAEjD,qDAA8D;AAE9D,MAAM,GAAG,GAAG,IAAA,eAAK,EAAC,mCAAmC,CAAC,CAAC;AAEvD,MAAM,EAAE,cAAc,EAAE,wBAAwB,EAAE,GAAG,IAAA,6BAAmB,EACtE,sBAAsB,CACkB,CAAC;AA2BzC,wCAAc;AAzBhB,SAAS,+BAA+B,CACtC,cAA+B,EAC/B,aAA4B;IAE5B,IAAI;QACF,wBAAwB,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;KACzD;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,IAAI,CACV,eAAK,CAAC,MAAM,CACV,wGAAwG,CACzG,CACF,CAAC;QAEF,GAAG,CACD,6HAA6H,EAC7H,KAAK,CACN,CAAC;QAEF,IAAI,KAAK,YAAY,KAAK,EAAE;YAC1B,mBAAQ,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;SAC7B;KACF;AACH,CAAC;AAKoC,mEAAwB"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/vm-tracer.d.ts b/internal/hardhat-network/stack-traces/vm-tracer.d.ts
index b70c116300e0b3c2da6b458fc8126de65717eb8b..272e3688b9917a813a2f341caf44c406f18474a7 100644
--- a/internal/hardhat-network/stack-traces/vm-tracer.d.ts
+++ b/internal/hardhat-network/stack-traces/vm-tracer.d.ts
@@ -1,20 +1,3 @@
-import type { ExecutionResult, TracingMessage, TracingStep } from "@nomicfoundation/edr";
-import { MessageTrace } from "./message-trace";
-/**
- * Consumes the incoming VM trace events, until an error occurs, to keep track
- * of the last top level message trace/error.
- */
-export declare class VMTracer {
-    tracingSteps: TracingStep[];
-    private _messageTraces;
-    private _lastError;
-    private _maxPrecompileNumber;
-    constructor();
-    getLastTopLevelMessageTrace(): MessageTrace | undefined;
-    getLastError(): Error | undefined;
-    private _shouldKeepTracing;
-    addBeforeMessage(message: TracingMessage): void;
-    addStep(step: TracingStep): void;
-    addAfterMessage(result: ExecutionResult): void;
-}
+declare const VmTracer: typeof import("@nomicfoundation/edr").VmTracer;
+export { VmTracer as VMTracer };
 //# sourceMappingURL=vm-tracer.d.ts.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/vm-tracer.d.ts.map b/internal/hardhat-network/stack-traces/vm-tracer.d.ts.map
index 6edf4416b271d98977bc4687ee8020ee337ffeda..1f14f4080b55cb602e1adc2dd729363d4dee9f72 100644
--- a/internal/hardhat-network/stack-traces/vm-tracer.d.ts.map
+++ b/internal/hardhat-network/stack-traces/vm-tracer.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"vm-tracer.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/vm-tracer.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,EAEV,eAAe,EACf,cAAc,EACd,WAAW,EACZ,MAAM,sBAAsB,CAAC;AAO9B,OAAO,EAOL,YAAY,EAEb,MAAM,iBAAiB,CAAC;AAOzB;;;GAGG;AACH,qBAAa,QAAQ;IACZ,YAAY,EAAE,WAAW,EAAE,CAAM;IAExC,OAAO,CAAC,cAAc,CAAsB;IAC5C,OAAO,CAAC,UAAU,CAAoB;IACtC,OAAO,CAAC,oBAAoB,CAAC;;IAOtB,2BAA2B,IAAI,YAAY,GAAG,SAAS;IAIvD,YAAY,IAAI,KAAK,GAAG,SAAS;IAIxC,OAAO,CAAC,kBAAkB;IAInB,gBAAgB,CAAC,OAAO,EAAE,cAAc;IA6FxC,OAAO,CAAC,IAAI,EAAE,WAAW;IAsBzB,eAAe,CAAC,MAAM,EAAE,eAAe;CAoC/C"}
\ No newline at end of file
+{"version":3,"file":"vm-tracer.d.ts","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/vm-tracer.ts"],"names":[],"mappings":"AAEA,QAAA,MAAQ,QAAQ,gDAE0B,CAAC;AAE3C,OAAO,EAAE,QAAQ,IAAI,QAAQ,EAAE,CAAC"}
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/vm-tracer.js b/internal/hardhat-network/stack-traces/vm-tracer.js
index 6fc3f0d1ec7ba96abe5374443630088cfb0e24a2..9d7f33c621e426bdb5d3c71d2ac1cc3122924688 100644
--- a/internal/hardhat-network/stack-traces/vm-tracer.js
+++ b/internal/hardhat-network/stack-traces/vm-tracer.js
@@ -1,154 +1,7 @@
 "use strict";
 Object.defineProperty(exports, "__esModule", { value: true });
 exports.VMTracer = void 0;
-const ethereumjs_util_1 = require("@nomicfoundation/ethereumjs-util");
-const errors_1 = require("../../core/errors");
-const exit_1 = require("../provider/vm/exit");
-const message_trace_1 = require("./message-trace");
-/* eslint-disable @nomicfoundation/hardhat-internal-rules/only-hardhat-error */
-const DUMMY_RETURN_DATA = Buffer.from([]);
-const DUMMY_GAS_USED = 0n;
-/**
- * Consumes the incoming VM trace events, until an error occurs, to keep track
- * of the last top level message trace/error.
- */
-class VMTracer {
-    constructor() {
-        this.tracingSteps = [];
-        this._messageTraces = [];
-        // TODO: temporarily hardcoded to remove the need of using ethereumjs' common and evm here
-        this._maxPrecompileNumber = 10;
-    }
-    getLastTopLevelMessageTrace() {
-        return this._messageTraces[0];
-    }
-    getLastError() {
-        return this._lastError;
-    }
-    _shouldKeepTracing() {
-        return this._lastError === undefined;
-    }
-    addBeforeMessage(message) {
-        if (!this._shouldKeepTracing()) {
-            return;
-        }
-        try {
-            let trace;
-            if (message.depth === 0) {
-                this._messageTraces = [];
-                this.tracingSteps = [];
-            }
-            if (message.to === undefined) {
-                const createTrace = {
-                    code: message.data,
-                    steps: [],
-                    value: message.value,
-                    exit: new exit_1.Exit(exit_1.ExitCode.SUCCESS),
-                    returnData: DUMMY_RETURN_DATA,
-                    numberOfSubtraces: 0,
-                    depth: message.depth,
-                    deployedContract: undefined,
-                    gasUsed: DUMMY_GAS_USED,
-                };
-                trace = createTrace;
-            }
-            else {
-                const toAsBigInt = (0, ethereumjs_util_1.bytesToBigInt)(message.to);
-                if (toAsBigInt > 0 && toAsBigInt <= this._maxPrecompileNumber) {
-                    const precompileTrace = {
-                        precompile: Number(toAsBigInt),
-                        calldata: message.data,
-                        value: message.value,
-                        exit: new exit_1.Exit(exit_1.ExitCode.SUCCESS),
-                        returnData: DUMMY_RETURN_DATA,
-                        depth: message.depth,
-                        gasUsed: DUMMY_GAS_USED,
-                    };
-                    trace = precompileTrace;
-                }
-                else {
-                    const codeAddress = message.codeAddress;
-                    // if we enter here, then `to` is not undefined, therefore
-                    // `codeAddress` and `code` should be defined
-                    (0, errors_1.assertHardhatInvariant)(codeAddress !== undefined, "codeAddress should be defined");
-                    (0, errors_1.assertHardhatInvariant)(message.code !== undefined, "code should be defined");
-                    const callTrace = {
-                        code: message.code,
-                        calldata: message.data,
-                        steps: [],
-                        value: message.value,
-                        exit: new exit_1.Exit(exit_1.ExitCode.SUCCESS),
-                        returnData: DUMMY_RETURN_DATA,
-                        address: message.to,
-                        numberOfSubtraces: 0,
-                        depth: message.depth,
-                        gasUsed: DUMMY_GAS_USED,
-                        codeAddress,
-                    };
-                    trace = callTrace;
-                }
-            }
-            if (this._messageTraces.length > 0) {
-                const parentTrace = this._messageTraces[this._messageTraces.length - 1];
-                if ((0, message_trace_1.isPrecompileTrace)(parentTrace)) {
-                    throw new Error("This should not happen: message execution started while a precompile was executing");
-                }
-                parentTrace.steps.push(trace);
-                parentTrace.numberOfSubtraces += 1;
-            }
-            this._messageTraces.push(trace);
-        }
-        catch (error) {
-            this._lastError = error;
-        }
-    }
-    addStep(step) {
-        if (!this._shouldKeepTracing()) {
-            return;
-        }
-        this.tracingSteps.push(step);
-        try {
-            const trace = this._messageTraces[this._messageTraces.length - 1];
-            if ((0, message_trace_1.isPrecompileTrace)(trace)) {
-                throw new Error("This should not happen: step event fired while a precompile was executing");
-            }
-            trace.steps.push({ pc: Number(step.pc) });
-        }
-        catch (error) {
-            this._lastError = error;
-        }
-    }
-    addAfterMessage(result) {
-        if (!this._shouldKeepTracing()) {
-            return;
-        }
-        try {
-            const trace = this._messageTraces[this._messageTraces.length - 1];
-            trace.gasUsed = result.result.gasUsed;
-            const executionResult = result.result;
-            if ((0, message_trace_1.isSuccessResult)(executionResult)) {
-                trace.exit = exit_1.Exit.fromEdrSuccessReason(executionResult.reason);
-                trace.returnData = executionResult.output.returnValue;
-                if ((0, message_trace_1.isCreateTrace)(trace)) {
-                    trace.deployedContract = executionResult.output.address;
-                }
-            }
-            else if ((0, message_trace_1.isHaltResult)(executionResult)) {
-                trace.exit = exit_1.Exit.fromEdrExceptionalHalt(executionResult.reason);
-                trace.returnData = Buffer.from([]);
-            }
-            else {
-                trace.exit = new exit_1.Exit(exit_1.ExitCode.REVERT);
-                trace.returnData = executionResult.output;
-            }
-            if (this._messageTraces.length > 1) {
-                this._messageTraces.pop();
-            }
-        }
-        catch (error) {
-            this._lastError = error;
-        }
-    }
-}
-exports.VMTracer = VMTracer;
+const napi_rs_1 = require("../../../common/napi-rs");
+const { VmTracer } = (0, napi_rs_1.requireNapiRsModule)("@nomicfoundation/edr");
+exports.VMTracer = VmTracer;
 //# sourceMappingURL=vm-tracer.js.map
\ No newline at end of file
diff --git a/internal/hardhat-network/stack-traces/vm-tracer.js.map b/internal/hardhat-network/stack-traces/vm-tracer.js.map
index 6db66753b80cd5e6774dc638827ec13bbd2c86d7..c6e25df503c424b870133b966c140678c0112fd7 100644
--- a/internal/hardhat-network/stack-traces/vm-tracer.js.map
+++ b/internal/hardhat-network/stack-traces/vm-tracer.js.map
@@ -1 +1 @@
-{"version":3,"file":"vm-tracer.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/vm-tracer.ts"],"names":[],"mappings":";;;AAOA,sEAAiE;AAEjE,8CAA2D;AAC3D,8CAAqD;AAErD,mDASyB;AAEzB,+EAA+E;AAE/E,MAAM,iBAAiB,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC1C,MAAM,cAAc,GAAG,EAAE,CAAC;AAE1B;;;GAGG;AACH,MAAa,QAAQ;IAOnB;QANO,iBAAY,GAAkB,EAAE,CAAC;QAEhC,mBAAc,GAAmB,EAAE,CAAC;QAK1C,0FAA0F;QAC1F,IAAI,CAAC,oBAAoB,GAAG,EAAE,CAAC;IACjC,CAAC;IAEM,2BAA2B;QAChC,OAAO,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IAEM,YAAY;QACjB,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAEO,kBAAkB;QACxB,OAAO,IAAI,CAAC,UAAU,KAAK,SAAS,CAAC;IACvC,CAAC;IAEM,gBAAgB,CAAC,OAAuB;QAC7C,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE;YAC9B,OAAO;SACR;QAED,IAAI;YACF,IAAI,KAAmB,CAAC;YAExB,IAAI,OAAO,CAAC,KAAK,KAAK,CAAC,EAAE;gBACvB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;gBACzB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;aACxB;YAED,IAAI,OAAO,CAAC,EAAE,KAAK,SAAS,EAAE;gBAC5B,MAAM,WAAW,GAAuB;oBACtC,IAAI,EAAE,OAAO,CAAC,IAAI;oBAClB,KAAK,EAAE,EAAE;oBACT,KAAK,EAAE,OAAO,CAAC,KAAK;oBACpB,IAAI,EAAE,IAAI,WAAI,CAAC,eAAQ,CAAC,OAAO,CAAC;oBAChC,UAAU,EAAE,iBAAiB;oBAC7B,iBAAiB,EAAE,CAAC;oBACpB,KAAK,EAAE,OAAO,CAAC,KAAK;oBACpB,gBAAgB,EAAE,SAAS;oBAC3B,OAAO,EAAE,cAAc;iBACxB,CAAC;gBAEF,KAAK,GAAG,WAAW,CAAC;aACrB;iBAAM;gBACL,MAAM,UAAU,GAAG,IAAA,+BAAa,EAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBAE7C,IAAI,UAAU,GAAG,CAAC,IAAI,UAAU,IAAI,IAAI,CAAC,oBAAoB,EAAE;oBAC7D,MAAM,eAAe,GAA2B;wBAC9C,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC;wBAC9B,QAAQ,EAAE,OAAO,CAAC,IAAI;wBACtB,KAAK,EAAE,OAAO,CAAC,KAAK;wBACpB,IAAI,EAAE,IAAI,WAAI,CAAC,eAAQ,CAAC,OAAO,CAAC;wBAChC,UAAU,EAAE,iBAAiB;wBAC7B,KAAK,EAAE,OAAO,CAAC,KAAK;wBACpB,OAAO,EAAE,cAAc;qBACxB,CAAC;oBAEF,KAAK,GAAG,eAAe,CAAC;iBACzB;qBAAM;oBACL,MAAM,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;oBAExC,0DAA0D;oBAC1D,6CAA6C;oBAC7C,IAAA,+BAAsB,EACpB,WAAW,KAAK,SAAS,EACzB,+BAA+B,CAChC,CAAC;oBACF,IAAA,+BAAsB,EACpB,OAAO,CAAC,IAAI,KAAK,SAAS,EAC1B,wBAAwB,CACzB,CAAC;oBAEF,MAAM,SAAS,GAAqB;wBAClC,IAAI,EAAE,OAAO,CAAC,IAAI;wBAClB,QAAQ,EAAE,OAAO,CAAC,IAAI;wBACtB,KAAK,EAAE,EAAE;wBACT,KAAK,EAAE,OAAO,CAAC,KAAK;wBACpB,IAAI,EAAE,IAAI,WAAI,CAAC,eAAQ,CAAC,OAAO,CAAC;wBAChC,UAAU,EAAE,iBAAiB;wBAC7B,OAAO,EAAE,OAAO,CAAC,EAAE;wBACnB,iBAAiB,EAAE,CAAC;wBACpB,KAAK,EAAE,OAAO,CAAC,KAAK;wBACpB,OAAO,EAAE,cAAc;wBACvB,WAAW;qBACZ,CAAC;oBAEF,KAAK,GAAG,SAAS,CAAC;iBACnB;aACF;YAED,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClC,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBAExE,IAAI,IAAA,iCAAiB,EAAC,WAAW,CAAC,EAAE;oBAClC,MAAM,IAAI,KAAK,CACb,oFAAoF,CACrF,CAAC;iBACH;gBAED,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAC9B,WAAW,CAAC,iBAAiB,IAAI,CAAC,CAAC;aACpC;YAED,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjC;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,UAAU,GAAG,KAAc,CAAC;SAClC;IACH,CAAC;IAEM,OAAO,CAAC,IAAiB;QAC9B,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE;YAC9B,OAAO;SACR;QAED,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAE7B,IAAI;YACF,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAElE,IAAI,IAAA,iCAAiB,EAAC,KAAK,CAAC,EAAE;gBAC5B,MAAM,IAAI,KAAK,CACb,2EAA2E,CAC5E,CAAC;aACH;YAED,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;SAC3C;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,UAAU,GAAG,KAAc,CAAC;SAClC;IACH,CAAC;IAEM,eAAe,CAAC,MAAuB;QAC5C,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,EAAE;YAC9B,OAAO;SACR;QAED,IAAI;YACF,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YAClE,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;YAEtC,MAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC;YACtC,IAAI,IAAA,+BAAe,EAAC,eAAe,CAAC,EAAE;gBACpC,KAAK,CAAC,IAAI,GAAG,WAAI,CAAC,oBAAoB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gBAC/D,KAAK,CAAC,UAAU,GAAG,eAAe,CAAC,MAAM,CAAC,WAAW,CAAC;gBAEtD,IAAI,IAAA,6BAAa,EAAC,KAAK,CAAC,EAAE;oBACxB,KAAK,CAAC,gBAAgB,GACpB,eAAe,CAAC,MACjB,CAAC,OAAO,CAAC;iBACX;aACF;iBAAM,IAAI,IAAA,4BAAY,EAAC,eAAe,CAAC,EAAE;gBACxC,KAAK,CAAC,IAAI,GAAG,WAAI,CAAC,sBAAsB,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;gBAEjE,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;aACpC;iBAAM;gBACL,KAAK,CAAC,IAAI,GAAG,IAAI,WAAI,CAAC,eAAQ,CAAC,MAAM,CAAC,CAAC;gBAEvC,KAAK,CAAC,UAAU,GAAG,eAAe,CAAC,MAAM,CAAC;aAC3C;YAED,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClC,IAAI,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC;aAC3B;SACF;QAAC,OAAO,KAAK,EAAE;YACd,IAAI,CAAC,UAAU,GAAG,KAAc,CAAC;SAClC;IACH,CAAC;CACF;AA/KD,4BA+KC"}
\ No newline at end of file
+{"version":3,"file":"vm-tracer.js","sourceRoot":"","sources":["../../../src/internal/hardhat-network/stack-traces/vm-tracer.ts"],"names":[],"mappings":";;;AAAA,qDAA8D;AAE9D,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAA,6BAAmB,EACtC,sBAAsB,CACkB,CAAC;AAEtB,4BAAQ"}
\ No newline at end of file
diff --git a/internal/lib/hardhat-lib.d.ts.map b/internal/lib/hardhat-lib.d.ts.map
index 9b7b58dcfac901f1e50c68f7102b490805c8b4ec..f955d851859894652e7c52a63ffc7e4b7c1115c4 100644
--- a/internal/lib/hardhat-lib.d.ts.map
+++ b/internal/lib/hardhat-lib.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"hardhat-lib.d.ts","sourceRoot":"","sources":["../../src/internal/lib/hardhat-lib.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,yBAAyB,EAAE,MAAM,aAAa,CAAC;AAUxD,QAAA,IAAI,GAAG,EAAE,yBAAyB,CAAC;AAwCnC,SAAS,GAAG,CAAC"}
\ No newline at end of file
+{"version":3,"file":"hardhat-lib.d.ts","sourceRoot":"","sources":["../../src/internal/lib/hardhat-lib.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,yBAAyB,EAAE,MAAM,aAAa,CAAC;AAUxD,QAAA,IAAI,GAAG,EAAE,yBAAyB,CAAC;AAuCnC,SAAS,GAAG,CAAC"}
\ No newline at end of file
diff --git a/internal/lib/hardhat-lib.js b/internal/lib/hardhat-lib.js
index e3649fff3c96390b5e0978a646fbfe5a625a46ec..b1759d42c11d5180bd80d5ed53012cc7f6c4396a 100644
--- a/internal/lib/hardhat-lib.js
+++ b/internal/lib/hardhat-lib.js
@@ -28,7 +28,7 @@ else {
         debug_1.default.enable("hardhat*");
     }
     const { resolvedConfig, userConfig } = (0, config_loading_1.loadConfigAndTasks)(hardhatArguments);
-    env = new runtime_environment_1.Environment(resolvedConfig, hardhatArguments, ctx.tasksDSL.getTaskDefinitions(), ctx.tasksDSL.getScopesDefinitions(), ctx.environmentExtenders, ctx.experimentalHardhatNetworkMessageTraceHooks, userConfig, ctx.providerExtenders);
+    env = new runtime_environment_1.Environment(resolvedConfig, hardhatArguments, ctx.tasksDSL.getTaskDefinitions(), ctx.tasksDSL.getScopesDefinitions(), ctx.environmentExtenders, userConfig, ctx.providerExtenders);
     ctx.setHardhatRuntimeEnvironment(env);
 }
 module.exports = env;
diff --git a/internal/lib/hardhat-lib.js.map b/internal/lib/hardhat-lib.js.map
index 51f371c0c71fdccc45ecf5705a4aa00bd10459a7..6812f70c521f9acb2887d5de83e0bd5fbc5f4239 100644
--- a/internal/lib/hardhat-lib.js.map
+++ b/internal/lib/hardhat-lib.js.map
@@ -1 +1 @@
-{"version":3,"file":"hardhat-lib.js","sourceRoot":"","sources":["../../src/internal/lib/hardhat-lib.ts"],"names":[],"mappings":";;;;AAAA,kDAA0B;AAG1B,wCAA4C;AAC5C,kEAAmE;AACnE,2CAA8C;AAC9C,qDAA6C;AAC7C,gEAAsE;AACtE,kEAA0E;AAC1E,qEAA0D;AAE1D,IAAI,GAAmB,CAAC;AACxB,IAAI,GAA8B,CAAC;AAEnC,IAAI,wBAAc,CAAC,SAAS,EAAE,EAAE;IAC9B,GAAG,GAAG,wBAAc,CAAC,iBAAiB,EAAE,CAAC;IAEzC,6EAA6E;IAC7E,uBAAuB;IACvB,IAAI,GAAG,CAAC,WAAW,KAAK,SAAS,EAAE;QACjC,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;KACrE;IAED,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC;CACvB;KAAM;IACL,GAAG,GAAG,wBAAc,CAAC,oBAAoB,EAAE,CAAC;IAE5C,MAAM,gBAAgB,GAAG,IAAA,sCAAsB,EAC7C,0CAAyB,EACzB,OAAO,CAAC,GAAG,CACZ,CAAC;IAEF,IAAI,gBAAgB,CAAC,OAAO,EAAE;QAC5B,eAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAC1B;IAED,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,GAAG,IAAA,mCAAkB,EAAC,gBAAgB,CAAC,CAAC;IAE5E,GAAG,GAAG,IAAI,iCAAW,CACnB,cAAc,EACd,gBAAgB,EAChB,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,EACjC,GAAG,CAAC,QAAQ,CAAC,oBAAoB,EAAE,EACnC,GAAG,CAAC,oBAAoB,EACxB,GAAG,CAAC,2CAA2C,EAC/C,UAAU,EACV,GAAG,CAAC,iBAAiB,CACtB,CAAC;IAEF,GAAG,CAAC,4BAA4B,CAAC,GAAG,CAAC,CAAC;CACvC;AAED,iBAAS,GAAG,CAAC"}
\ No newline at end of file
+{"version":3,"file":"hardhat-lib.js","sourceRoot":"","sources":["../../src/internal/lib/hardhat-lib.ts"],"names":[],"mappings":";;;;AAAA,kDAA0B;AAG1B,wCAA4C;AAC5C,kEAAmE;AACnE,2CAA8C;AAC9C,qDAA6C;AAC7C,gEAAsE;AACtE,kEAA0E;AAC1E,qEAA0D;AAE1D,IAAI,GAAmB,CAAC;AACxB,IAAI,GAA8B,CAAC;AAEnC,IAAI,wBAAc,CAAC,SAAS,EAAE,EAAE;IAC9B,GAAG,GAAG,wBAAc,CAAC,iBAAiB,EAAE,CAAC;IAEzC,6EAA6E;IAC7E,uBAAuB;IACvB,IAAI,GAAG,CAAC,WAAW,KAAK,SAAS,EAAE;QACjC,MAAM,IAAI,qBAAY,CAAC,oBAAM,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAAC;KACrE;IAED,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC;CACvB;KAAM;IACL,GAAG,GAAG,wBAAc,CAAC,oBAAoB,EAAE,CAAC;IAE5C,MAAM,gBAAgB,GAAG,IAAA,sCAAsB,EAC7C,0CAAyB,EACzB,OAAO,CAAC,GAAG,CACZ,CAAC;IAEF,IAAI,gBAAgB,CAAC,OAAO,EAAE;QAC5B,eAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAC1B;IAED,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,GAAG,IAAA,mCAAkB,EAAC,gBAAgB,CAAC,CAAC;IAE5E,GAAG,GAAG,IAAI,iCAAW,CACnB,cAAc,EACd,gBAAgB,EAChB,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,EACjC,GAAG,CAAC,QAAQ,CAAC,oBAAoB,EAAE,EACnC,GAAG,CAAC,oBAAoB,EACxB,UAAU,EACV,GAAG,CAAC,iBAAiB,CACtB,CAAC;IAEF,GAAG,CAAC,4BAA4B,CAAC,GAAG,CAAC,CAAC;CACvC;AAED,iBAAS,GAAG,CAAC"}
\ No newline at end of file
diff --git a/register.js b/register.js
index 4e4a6cf9ca6be44f22ccf7aa170e26967d527502..b3fd1099bcf71d17156f87686e87a00950482b95 100644
--- a/register.js
+++ b/register.js
@@ -25,7 +25,7 @@ if (!context_1.HardhatContext.isCreated()) {
         (0, typescript_support_1.loadTsNode)(hardhatArguments.tsconfig, hardhatArguments.typecheck);
     }
     const { resolvedConfig, userConfig } = (0, config_loading_1.loadConfigAndTasks)(hardhatArguments);
-    const env = new runtime_environment_1.Environment(resolvedConfig, hardhatArguments, ctx.tasksDSL.getTaskDefinitions(), ctx.tasksDSL.getScopesDefinitions(), ctx.environmentExtenders, ctx.experimentalHardhatNetworkMessageTraceHooks, userConfig, ctx.providerExtenders);
+    const env = new runtime_environment_1.Environment(resolvedConfig, hardhatArguments, ctx.tasksDSL.getTaskDefinitions(), ctx.tasksDSL.getScopesDefinitions(), ctx.environmentExtenders, userConfig, ctx.providerExtenders);
     ctx.setHardhatRuntimeEnvironment(env);
     env.injectToGlobal();
 }
diff --git a/register.js.map b/register.js.map
index d999abf7c59e3f0680269fc37a87e5a804db5c77..e2320d0bdc21c3e700fcd7a8102bb14b68e30a19 100644
--- a/register.js.map
+++ b/register.js.map
@@ -1 +1 @@
-{"version":3,"file":"register.js","sourceRoot":"","sources":["src/register.ts"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAE1B,gDAAoD;AACpD,0EAA2E;AAC3E,wEAA8E;AAC9E,0EAAkF;AAClF,6EAAkE;AAClE,2EAG4C;AAC5C,qDAGiC;AAEjC,IAAI,CAAC,wBAAc,CAAC,SAAS,EAAE,EAAE;IAC/B,OAAO,CAAC,6BAA6B,CAAC,CAAC;IAEvC,MAAM,GAAG,GAAG,wBAAc,CAAC,oBAAoB,EAAE,CAAC;IAElD,IAAI,IAAA,oCAA0B,GAAE,EAAE;QAChC,IAAA,oCAA0B,GAAE,CAAC;KAC9B;IAED,MAAM,gBAAgB,GAAG,IAAA,sCAAsB,EAC7C,0CAAyB,EACzB,OAAO,CAAC,GAAG,CACZ,CAAC;IAEF,IAAI,gBAAgB,CAAC,OAAO,EAAE;QAC5B,eAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAC1B;IAED,IAAI,IAAA,0CAAqB,EAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE;QAClD,IAAA,+BAAU,EAAC,gBAAgB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,SAAS,CAAC,CAAC;KACnE;IAED,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,GAAG,IAAA,mCAAkB,EAAC,gBAAgB,CAAC,CAAC;IAE5E,MAAM,GAAG,GAAG,IAAI,iCAAW,CACzB,cAAc,EACd,gBAAgB,EAChB,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,EACjC,GAAG,CAAC,QAAQ,CAAC,oBAAoB,EAAE,EACnC,GAAG,CAAC,oBAAoB,EACxB,GAAG,CAAC,2CAA2C,EAC/C,UAAU,EACV,GAAG,CAAC,iBAAiB,CACtB,CAAC;IAEF,GAAG,CAAC,4BAA4B,CAAC,GAAG,CAAC,CAAC;IAEtC,GAAG,CAAC,cAAc,EAAE,CAAC;CACtB"}
\ No newline at end of file
+{"version":3,"file":"register.js","sourceRoot":"","sources":["src/register.ts"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAE1B,gDAAoD;AACpD,0EAA2E;AAC3E,wEAA8E;AAC9E,0EAAkF;AAClF,6EAAkE;AAClE,2EAG4C;AAC5C,qDAGiC;AAEjC,IAAI,CAAC,wBAAc,CAAC,SAAS,EAAE,EAAE;IAC/B,OAAO,CAAC,6BAA6B,CAAC,CAAC;IAEvC,MAAM,GAAG,GAAG,wBAAc,CAAC,oBAAoB,EAAE,CAAC;IAElD,IAAI,IAAA,oCAA0B,GAAE,EAAE;QAChC,IAAA,oCAA0B,GAAE,CAAC;KAC9B;IAED,MAAM,gBAAgB,GAAG,IAAA,sCAAsB,EAC7C,0CAAyB,EACzB,OAAO,CAAC,GAAG,CACZ,CAAC;IAEF,IAAI,gBAAgB,CAAC,OAAO,EAAE;QAC5B,eAAK,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAC1B;IAED,IAAI,IAAA,0CAAqB,EAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE;QAClD,IAAA,+BAAU,EAAC,gBAAgB,CAAC,QAAQ,EAAE,gBAAgB,CAAC,SAAS,CAAC,CAAC;KACnE;IAED,MAAM,EAAE,cAAc,EAAE,UAAU,EAAE,GAAG,IAAA,mCAAkB,EAAC,gBAAgB,CAAC,CAAC;IAE5E,MAAM,GAAG,GAAG,IAAI,iCAAW,CACzB,cAAc,EACd,gBAAgB,EAChB,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,EACjC,GAAG,CAAC,QAAQ,CAAC,oBAAoB,EAAE,EACnC,GAAG,CAAC,oBAAoB,EACxB,UAAU,EACV,GAAG,CAAC,iBAAiB,CACtB,CAAC;IAEF,GAAG,CAAC,4BAA4B,CAAC,GAAG,CAAC,CAAC;IAEtC,GAAG,CAAC,cAAc,EAAE,CAAC;CACtB"}
\ No newline at end of file
diff --git a/src/internal/cli/cli.ts b/src/internal/cli/cli.ts
index 967c5dc8570ee358888a98cb800884d3cbda0c34..f31f1c8aeccf52c1775506b7ec3fb765d65d353a 100644
--- a/src/internal/cli/cli.ts
+++ b/src/internal/cli/cli.ts
@@ -234,7 +234,6 @@ async function main() {
       taskDefinitions,
       scopesDefinitions,
       envExtenders,
-      ctx.experimentalHardhatNetworkMessageTraceHooks,
       userConfig,
       providerExtenders
     );
diff --git a/src/internal/context.ts b/src/internal/context.ts
index c144662acdfa34d51c3edd5b97a8a374b80852b1..983c41d6b596876a091a761c56eec3c284b0140b 100644
--- a/src/internal/context.ts
+++ b/src/internal/context.ts
@@ -1,7 +1,6 @@
 import {
   ConfigExtender,
   EnvironmentExtender,
-  ExperimentalHardhatNetworkMessageTraceHook,
   HardhatRuntimeEnvironment,
   ProviderExtender,
 } from "../types";
@@ -60,10 +59,6 @@ export class HardhatContext {
 
   public readonly configExtenders: ConfigExtender[] = [];
 
-  // NOTE: This is experimental and will be removed. Please contact our team if
-  // you are planning to use it.
-  public readonly experimentalHardhatNetworkMessageTraceHooks: ExperimentalHardhatNetworkMessageTraceHook[] =
-    [];
   private _filesLoadedBeforeConfig?: string[];
   private _filesLoadedAfterConfig?: string[];
 
diff --git a/src/internal/core/config/config-env.ts b/src/internal/core/config/config-env.ts
index 9db4535ff4a592d07fd2f606dedb1479d1dcc81d..585bf41ad91878d5996b37e5c676f79d7633fed8 100644
--- a/src/internal/core/config/config-env.ts
+++ b/src/internal/core/config/config-env.ts
@@ -4,7 +4,6 @@ import {
   ConfigurableScopeDefinition,
   ConfigurableTaskDefinition,
   EnvironmentExtender,
-  ExperimentalHardhatNetworkMessageTraceHook,
   ProviderExtender,
   TaskArguments,
 } from "../../../types";
@@ -167,15 +166,6 @@ export function extendProvider(extender: ProviderExtender) {
   ctx.providerExtenders.push(extender);
 }
 
-// NOTE: This is experimental and will be removed. Please contact our team
-// if you are planning to use it.
-export function experimentalAddHardhatNetworkMessageTraceHook(
-  hook: ExperimentalHardhatNetworkMessageTraceHook
-) {
-  const ctx = HardhatContext.getHardhatContext();
-  ctx.experimentalHardhatNetworkMessageTraceHooks.push(hook);
-}
-
 /**
  * This object provides methods to interact with the configuration variables.
  */
diff --git a/src/internal/core/providers/construction.ts b/src/internal/core/providers/construction.ts
index 59ac2c3439379006407b66b5c22bf2007d92f750..f64d787a95ccfed5f48517273cce173c5d18a78f 100644
--- a/src/internal/core/providers/construction.ts
+++ b/src/internal/core/providers/construction.ts
@@ -1,6 +1,5 @@
 import type {
   Artifacts,
-  BoundExperimentalHardhatNetworkMessageTraceHook,
   EIP1193Provider,
   EthereumProvider,
   HardhatConfig,
@@ -50,7 +49,6 @@ export async function createProvider(
   config: HardhatConfig,
   networkName: string,
   artifacts?: Artifacts,
-  experimentalHardhatNetworkMessageTraceHooks: BoundExperimentalHardhatNetworkMessageTraceHook[] = [],
   extenders: ProviderExtender[] = []
 ): Promise<EthereumProvider> {
   let eip1193Provider: EIP1193Provider;
@@ -108,7 +106,6 @@ export async function createProvider(
           hardhatNetConfig.initialDate !== undefined
             ? parseDateString(hardhatNetConfig.initialDate)
             : undefined,
-        experimentalHardhatNetworkMessageTraceHooks,
         forkConfig,
         forkCachePath:
           paths !== undefined ? getForkCacheDirPath(paths) : undefined,
diff --git a/src/internal/core/runtime-environment.ts b/src/internal/core/runtime-environment.ts
index 8266ac726029e8bb6ecc3c09e7832a0a6699de89..3d4979e1d134e6e4d81397260a6c7963e99baf25 100644
--- a/src/internal/core/runtime-environment.ts
+++ b/src/internal/core/runtime-environment.ts
@@ -1,11 +1,8 @@
-import type { MessageTrace } from "../hardhat-network/stack-traces/message-trace";
-
 import debug from "debug";
 
 import {
   Artifacts as IArtifacts,
   EnvironmentExtender,
-  ExperimentalHardhatNetworkMessageTraceHook,
   HardhatArguments,
   HardhatConfig,
   HardhatRuntimeEnvironment,
@@ -78,7 +75,6 @@ export class Environment implements HardhatRuntimeEnvironment {
     public readonly tasks: TasksMap,
     public readonly scopes: ScopesMap,
     environmentExtenders: EnvironmentExtender[] = [],
-    experimentalHardhatNetworkMessageTraceHooks: ExperimentalHardhatNetworkMessageTraceHook[] = [],
     public readonly userConfig: HardhatUserConfig = {},
     providerExtenders: ProviderExtender[] = []
   ) {
@@ -105,10 +101,6 @@ export class Environment implements HardhatRuntimeEnvironment {
         config,
         networkName,
         this.artifacts,
-        experimentalHardhatNetworkMessageTraceHooks.map(
-          (hook) => (trace: MessageTrace, isCallMessageTrace: boolean) =>
-            hook(this, trace, isCallMessageTrace)
-        ),
         providerExtenders
       );
     });
diff --git a/src/internal/hardhat-network/provider/provider.ts b/src/internal/hardhat-network/provider/provider.ts
index c48c51cfb758478b32295e82952b3cd4d9967aac..358f2132011e4e3d37b90346943e6b6f7e6e980c 100644
--- a/src/internal/hardhat-network/provider/provider.ts
+++ b/src/internal/hardhat-network/provider/provider.ts
@@ -1,6 +1,5 @@
 import type {
   Artifacts,
-  BoundExperimentalHardhatNetworkMessageTraceHook,
   CompilerInput,
   CompilerOutput,
   EIP1193Provider,
@@ -12,6 +11,8 @@ import type {
 import type {
   EdrContext,
   Provider as EdrProviderT,
+  VmTraceDecoder as VmTraceDecoderT,
+  VMTracer as VMTracerT,
   RawTrace,
   Response,
   SubscriptionEvent,
@@ -43,7 +44,6 @@ import { isErrorResponse } from "../../core/providers/http";
 import { getHardforkName } from "../../util/hardforks";
 import { createModelsAndDecodeBytecodes } from "../stack-traces/compiler-to-model";
 import { ConsoleLogger } from "../stack-traces/consoleLogger";
-import { ContractsIdentifier } from "../stack-traces/contracts-identifier";
 import {
   VmTraceDecoder,
   initializeVmTraceDecoder,
@@ -116,7 +116,6 @@ interface HardhatNetworkProviderConfig {
   initialBaseFeePerGas?: number;
   initialDate?: Date;
   coinbase?: string;
-  experimentalHardhatNetworkMessageTraceHooks?: BoundExperimentalHardhatNetworkMessageTraceHook[];
   forkConfig?: ForkConfig;
   forkCachePath?: string;
   enableTransientStorage: boolean;
@@ -169,7 +168,7 @@ export class EdrProviderWrapper
   private _callOverrideCallback?: CallOverrideCallback;
 
   /** Used for internal stack trace tests. */
-  private _vmTracer?: VMTracer;
+  private _vmTracer?: VMTracerT;
 
   private constructor(
     private readonly _provider: EdrProviderT,
@@ -177,7 +176,7 @@ export class EdrProviderWrapper
     private readonly _node: {
       _vm: MinimalEthereumJsVm;
     },
-    private readonly _vmTraceDecoder: VmTraceDecoder,
+    private readonly _vmTraceDecoder: VmTraceDecoderT,
     // The common configuration for EthereumJS VM is not used by EDR, but tests expect it as part of the provider.
     private readonly _common: Common,
     tracingConfig?: TracingConfig
@@ -223,8 +222,7 @@ export class EdrProviderWrapper
     const printLineFn = loggerConfig.printLineFn ?? printLine;
     const replaceLastLineFn = loggerConfig.replaceLastLineFn ?? replaceLastLine;
 
-    const contractsIdentifier = new ContractsIdentifier();
-    const vmTraceDecoder = new VmTraceDecoder(contractsIdentifier);
+    const vmTraceDecoder = new VmTraceDecoder();
 
     const hardforkName = getHardforkName(config.hardfork);
 
@@ -370,6 +368,9 @@ export class EdrProviderWrapper
     if (needsTraces) {
       const rawTraces = responseObject.traces;
       for (const rawTrace of rawTraces) {
+        this._vmTracer?.observe(rawTrace);
+
+        // For other consumers in JS we need to marshall the entire trace over FFI
         const trace = rawTrace.trace();
 
         // beforeTx event
@@ -386,8 +387,6 @@ export class EdrProviderWrapper
                 edrTracingStepToMinimalInterpreterStep(traceItem)
               );
             }
-
-            this._vmTracer?.addStep(traceItem);
           }
           // afterMessage event
           else if ("executionResult" in traceItem) {
@@ -397,8 +396,6 @@ export class EdrProviderWrapper
                 edrTracingMessageResultToMinimalEVMResult(traceItem)
               );
             }
-
-            this._vmTracer?.addAfterMessage(traceItem.executionResult);
           }
           // beforeMessage event
           else {
@@ -408,8 +405,6 @@ export class EdrProviderWrapper
                 edrTracingMessageToMinimalMessage(traceItem)
               );
             }
-
-            this._vmTracer?.addBeforeMessage(traceItem);
           }
         }
 
@@ -476,7 +471,7 @@ export class EdrProviderWrapper
    *
    * Used for internal stack traces integration tests.
    */
-  public setVmTracer(vmTracer?: VMTracer) {
+  public setVmTracer(vmTracer?: VMTracerT) {
     this._vmTracer = vmTracer;
   }
 
@@ -554,7 +549,7 @@ export class EdrProviderWrapper
       );
 
       log(
-        "ContractsIdentifier failed to be updated. Please report this to help us improve Hardhat.\n",
+        "VmTraceDecoder failed to be updated. Please report this to help us improve Hardhat.\n",
         error
       );
 
@@ -580,17 +575,7 @@ export class EdrProviderWrapper
     rawTrace: RawTrace
   ): Promise<SolidityStackTrace | undefined> {
     const vmTracer = new VMTracer();
-
-    const trace = rawTrace.trace();
-    for (const traceItem of trace) {
-      if ("pc" in traceItem) {
-        vmTracer.addStep(traceItem);
-      } else if ("executionResult" in traceItem) {
-        vmTracer.addAfterMessage(traceItem.executionResult);
-      } else {
-        vmTracer.addBeforeMessage(traceItem);
-      }
-    }
+    vmTracer.observe(rawTrace);
 
     let vmTrace = vmTracer.getLastTopLevelMessageTrace();
     const vmTracerError = vmTracer.getLastError();
@@ -630,7 +615,7 @@ export async function createHardhatNetworkProvider(
   log("Making tracing config");
   const tracingConfig = await makeTracingConfig(artifacts);
   log("Creating EDR provider");
-  const provider = EdrProviderWrapper.create(
+  const provider = await EdrProviderWrapper.create(
     hardhatNetworkProviderConfig,
     loggerConfig,
     tracingConfig
diff --git a/src/internal/hardhat-network/provider/return-data.ts b/src/internal/hardhat-network/provider/return-data.ts
index b605ee0cfbb9c58bacaf842da451ffee4512cde4..26579010852a935996d31b9540de97bf781038b7 100644
--- a/src/internal/hardhat-network/provider/return-data.ts
+++ b/src/internal/hardhat-network/provider/return-data.ts
@@ -1,75 +1,7 @@
-import { bytesToBigInt } from "@nomicfoundation/ethereumjs-util";
-import { assertHardhatInvariant } from "../../core/errors";
+import { requireNapiRsModule } from "../../../common/napi-rs";
 
-const { rawDecode } = require("ethereumjs-abi");
+const { ReturnData } = requireNapiRsModule(
+  "@nomicfoundation/edr"
+) as typeof import("@nomicfoundation/edr");
 
-// selector of Error(string)
-const ERROR_SELECTOR = "08c379a0";
-// selector of Panic(uint256)
-const PANIC_SELECTOR = "4e487b71";
-
-/**
- * Represents the returnData of a transaction, whose contents are unknown.
- */
-export class ReturnData {
-  private _selector: string | undefined;
-
-  constructor(public value: Uint8Array) {
-    if (value.length >= 4) {
-      this._selector = Buffer.from(value.slice(0, 4)).toString("hex");
-    }
-  }
-
-  public isEmpty(): boolean {
-    return this.value.length === 0;
-  }
-
-  public matchesSelector(selector: Uint8Array): boolean {
-    if (this._selector === undefined) {
-      return false;
-    }
-
-    return this._selector === Buffer.from(selector).toString("hex");
-  }
-
-  public isErrorReturnData(): boolean {
-    return this._selector === ERROR_SELECTOR;
-  }
-
-  public isPanicReturnData(): boolean {
-    return this._selector === PANIC_SELECTOR;
-  }
-
-  public decodeError(): string {
-    if (this.isEmpty()) {
-      return "";
-    }
-
-    assertHardhatInvariant(
-      this._selector === ERROR_SELECTOR,
-      "Expected return data to be a Error(string)"
-    );
-
-    const [decodedError] = rawDecode(["string"], this.value.slice(4)) as [
-      string
-    ];
-
-    return decodedError;
-  }
-
-  public decodePanic(): bigint {
-    assertHardhatInvariant(
-      this._selector === PANIC_SELECTOR,
-      "Expected return data to be a Panic(uint256)"
-    );
-
-    // we are assuming that panic codes are smaller than Number.MAX_SAFE_INTEGER
-    const errorCode = bytesToBigInt(this.value.slice(4));
-
-    return errorCode;
-  }
-
-  public getSelector(): string | undefined {
-    return this._selector;
-  }
-}
+export { ReturnData };
diff --git a/src/internal/hardhat-network/provider/vm/exit.ts b/src/internal/hardhat-network/provider/vm/exit.ts
index c9fcc7cbea28ca0fcac3aa37c3a976df5acd3b16..480728bae018e014c89bf65ab5707ebe253f4f98 100644
--- a/src/internal/hardhat-network/provider/vm/exit.ts
+++ b/src/internal/hardhat-network/provider/vm/exit.ts
@@ -1,95 +1,7 @@
-import type { ExceptionalHalt, SuccessReason } from "@nomicfoundation/edr";
-
 import { requireNapiRsModule } from "../../../../common/napi-rs";
 
-export enum ExitCode {
-  SUCCESS,
-  REVERT,
-  OUT_OF_GAS,
-  INTERNAL_ERROR,
-  INVALID_OPCODE,
-  STACK_UNDERFLOW,
-  CODESIZE_EXCEEDS_MAXIMUM,
-  CREATE_COLLISION,
-  STATIC_STATE_CHANGE,
-}
-
-export class Exit {
-  public static fromEdrSuccessReason(reason: SuccessReason): Exit {
-    const { SuccessReason } = requireNapiRsModule(
-      "@nomicfoundation/edr"
-    ) as typeof import("@nomicfoundation/edr");
-
-    switch (reason) {
-      case SuccessReason.Stop:
-      case SuccessReason.Return:
-      case SuccessReason.SelfDestruct:
-      case SuccessReason.EofReturnContract:
-        return new Exit(ExitCode.SUCCESS);
-    }
-
-    const _exhaustiveCheck: never = reason;
-  }
-
-  public static fromEdrExceptionalHalt(halt: ExceptionalHalt): Exit {
-    const { ExceptionalHalt } = requireNapiRsModule(
-      "@nomicfoundation/edr"
-    ) as typeof import("@nomicfoundation/edr");
-
-    switch (halt) {
-      case ExceptionalHalt.OutOfGas:
-        return new Exit(ExitCode.OUT_OF_GAS);
-
-      case ExceptionalHalt.OpcodeNotFound:
-      case ExceptionalHalt.InvalidFEOpcode:
-      // Returned when an opcode is not implemented for the hardfork
-      case ExceptionalHalt.NotActivated:
-        return new Exit(ExitCode.INVALID_OPCODE);
-
-      case ExceptionalHalt.StackUnderflow:
-        return new Exit(ExitCode.STACK_UNDERFLOW);
-
-      case ExceptionalHalt.CreateCollision:
-        return new Exit(ExitCode.CREATE_COLLISION);
-
-      case ExceptionalHalt.CreateContractSizeLimit:
-        return new Exit(ExitCode.CODESIZE_EXCEEDS_MAXIMUM);
-
-      default: {
-        // eslint-disable-next-line @nomicfoundation/hardhat-internal-rules/only-hardhat-error
-        throw new Error(`Unmatched EDR exceptional halt: ${halt}`);
-      }
-    }
-  }
-
-  constructor(public kind: ExitCode) {}
-
-  public isError(): boolean {
-    return this.kind !== ExitCode.SUCCESS;
-  }
-
-  public getReason(): string {
-    switch (this.kind) {
-      case ExitCode.SUCCESS:
-        return "Success";
-      case ExitCode.REVERT:
-        return "Reverted";
-      case ExitCode.OUT_OF_GAS:
-        return "Out of gas";
-      case ExitCode.INTERNAL_ERROR:
-        return "Internal error";
-      case ExitCode.INVALID_OPCODE:
-        return "Invalid opcode";
-      case ExitCode.STACK_UNDERFLOW:
-        return "Stack underflow";
-      case ExitCode.CODESIZE_EXCEEDS_MAXIMUM:
-        return "Codesize exceeds maximum";
-      case ExitCode.CREATE_COLLISION:
-        return "Create collision";
-      case ExitCode.STATIC_STATE_CHANGE:
-        return "Static state change";
-    }
+const { ExitCode } = requireNapiRsModule(
+  "@nomicfoundation/edr"
+) as typeof import("@nomicfoundation/edr");
 
-    const _exhaustiveCheck: never = this.kind;
-  }
-}
+export { ExitCode };
diff --git a/src/internal/hardhat-network/stack-traces/compiler-to-model.ts b/src/internal/hardhat-network/stack-traces/compiler-to-model.ts
index e801691fe54b61794278083d0b802cdd05bb98fb..024c1f650e7fb444c2c30932ae8f4e736c1d4646 100644
--- a/src/internal/hardhat-network/stack-traces/compiler-to-model.ts
+++ b/src/internal/hardhat-network/stack-traces/compiler-to-model.ts
@@ -1,699 +1,7 @@
-import debug from "debug";
+import { requireNapiRsModule } from "../../../common/napi-rs";
 
-import {
-  CompilerInput,
-  CompilerOutput,
-  CompilerOutputBytecode,
-} from "../../../types";
+const { createModelsAndDecodeBytecodes } = requireNapiRsModule(
+  "@nomicfoundation/edr"
+) as typeof import("@nomicfoundation/edr");
 
-import {
-  getLibraryAddressPositions,
-  normalizeCompilerOutputBytecode,
-} from "./library-utils";
-import {
-  Bytecode,
-  Contract,
-  ContractFunction,
-  ContractFunctionType,
-  ContractFunctionVisibility,
-  ContractType,
-  CustomError,
-  SourceFile,
-  SourceLocation,
-} from "./model";
-import { decodeInstructions } from "./source-maps";
-
-const abi = require("ethereumjs-abi");
-
-const log = debug("hardhat:core:hardhat-network:compiler-to-model");
-
-interface ContractAbiEntry {
-  name?: string;
-  inputs?: Array<{
-    type: string;
-  }>;
-}
-
-type ContractAbi = ContractAbiEntry[];
-
-export function createModelsAndDecodeBytecodes(
-  solcVersion: string,
-  compilerInput: CompilerInput,
-  compilerOutput: CompilerOutput
-): Bytecode[] {
-  const fileIdToSourceFile = new Map<number, SourceFile>();
-  const contractIdToContract = new Map<number, Contract>();
-
-  createSourcesModelFromAst(
-    compilerOutput,
-    compilerInput,
-    fileIdToSourceFile,
-    contractIdToContract
-  );
-
-  const bytecodes = decodeBytecodes(
-    solcVersion,
-    compilerOutput,
-    fileIdToSourceFile,
-    contractIdToContract
-  );
-
-  correctSelectors(bytecodes, compilerOutput);
-
-  return bytecodes;
-}
-
-function createSourcesModelFromAst(
-  compilerOutput: CompilerOutput,
-  compilerInput: CompilerInput,
-  fileIdToSourceFile: Map<number, SourceFile>,
-  contractIdToContract: Map<number, Contract>
-) {
-  const contractIdToLinearizedBaseContractIds = new Map<number, number[]>();
-
-  // Create a `sourceName => contract => abi` mapping
-  const sourceNameToContractToAbi = new Map<string, Map<string, ContractAbi>>();
-  for (const [sourceName, contracts] of Object.entries(
-    compilerOutput.contracts
-  )) {
-    const contractToAbi = new Map<string, ContractAbi>();
-    sourceNameToContractToAbi.set(sourceName, contractToAbi);
-    for (const [contractName, contract] of Object.entries(contracts)) {
-      contractToAbi.set(contractName, contract.abi);
-    }
-  }
-
-  for (const [sourceName, source] of Object.entries(compilerOutput.sources)) {
-    const contractToAbi = sourceNameToContractToAbi.get(sourceName);
-    const file = new SourceFile(
-      sourceName,
-      compilerInput.sources[sourceName].content
-    );
-
-    fileIdToSourceFile.set(source.id, file);
-
-    for (const node of source.ast.nodes) {
-      if (node.nodeType === "ContractDefinition") {
-        const contractType = contractKindToContractType(node.contractKind);
-
-        if (contractType === undefined) {
-          continue;
-        }
-
-        const contractAbi = contractToAbi?.get(node.name);
-
-        processContractAstNode(
-          file,
-          node,
-          fileIdToSourceFile,
-          contractType,
-          contractIdToContract,
-          contractIdToLinearizedBaseContractIds,
-          contractAbi
-        );
-      }
-
-      // top-level functions
-      if (node.nodeType === "FunctionDefinition") {
-        processFunctionDefinitionAstNode(
-          node,
-          fileIdToSourceFile,
-          undefined,
-          file
-        );
-      }
-    }
-  }
-
-  applyContractsInheritance(
-    contractIdToContract,
-    contractIdToLinearizedBaseContractIds
-  );
-}
-
-function processContractAstNode(
-  file: SourceFile,
-  contractNode: any,
-  fileIdToSourceFile: Map<number, SourceFile>,
-  contractType: ContractType,
-  contractIdToContract: Map<number, Contract>,
-  contractIdToLinearizedBaseContractIds: Map<number, number[]>,
-  contractAbi?: ContractAbi
-) {
-  const contractLocation = astSrcToSourceLocation(
-    contractNode.src,
-    fileIdToSourceFile
-  )!;
-
-  const contract = new Contract(
-    contractNode.name,
-    contractType,
-    contractLocation
-  );
-
-  contractIdToContract.set(contractNode.id, contract);
-  contractIdToLinearizedBaseContractIds.set(
-    contractNode.id,
-    contractNode.linearizedBaseContracts
-  );
-
-  file.addContract(contract);
-
-  for (const node of contractNode.nodes) {
-    if (node.nodeType === "FunctionDefinition") {
-      const functionAbis = contractAbi?.filter(
-        (abiEntry) => abiEntry.name === node.name
-      );
-
-      processFunctionDefinitionAstNode(
-        node,
-        fileIdToSourceFile,
-        contract,
-        file,
-        functionAbis
-      );
-    } else if (node.nodeType === "ModifierDefinition") {
-      processModifierDefinitionAstNode(
-        node,
-        fileIdToSourceFile,
-        contract,
-        file
-      );
-    } else if (node.nodeType === "VariableDeclaration") {
-      const getterAbi = contractAbi?.find(
-        (abiEntry) => abiEntry.name === node.name
-      );
-      processVariableDeclarationAstNode(
-        node,
-        fileIdToSourceFile,
-        contract,
-        file,
-        getterAbi
-      );
-    }
-  }
-}
-
-function processFunctionDefinitionAstNode(
-  functionDefinitionNode: any,
-  fileIdToSourceFile: Map<number, SourceFile>,
-  contract: Contract | undefined,
-  file: SourceFile,
-  functionAbis?: ContractAbiEntry[]
-) {
-  if (functionDefinitionNode.implemented === false) {
-    return;
-  }
-
-  const functionType = functionDefinitionKindToFunctionType(
-    functionDefinitionNode.kind
-  );
-  const functionLocation = astSrcToSourceLocation(
-    functionDefinitionNode.src,
-    fileIdToSourceFile
-  )!;
-  const visibility = astVisibilityToVisibility(
-    functionDefinitionNode.visibility
-  );
-
-  let selector: Buffer | undefined;
-  if (
-    functionType === ContractFunctionType.FUNCTION &&
-    (visibility === ContractFunctionVisibility.EXTERNAL ||
-      visibility === ContractFunctionVisibility.PUBLIC)
-  ) {
-    selector = astFunctionDefinitionToSelector(functionDefinitionNode);
-  }
-
-  // function can be overloaded, match the abi by the selector
-  const matchingFunctionAbi = functionAbis?.find((functionAbi) => {
-    if (functionAbi.name === undefined) {
-      return false;
-    }
-
-    const functionAbiSelector = abi.methodID(
-      functionAbi.name,
-      functionAbi.inputs?.map((input) => input.type) ?? []
-    );
-
-    if (selector === undefined || functionAbiSelector === undefined) {
-      return false;
-    }
-
-    return selector.equals(functionAbiSelector);
-  });
-
-  const paramTypes = matchingFunctionAbi?.inputs?.map((input) => input.type);
-
-  const cf = new ContractFunction(
-    functionDefinitionNode.name,
-    functionType,
-    functionLocation,
-    contract,
-    visibility,
-    functionDefinitionNode.stateMutability === "payable",
-    selector,
-    paramTypes
-  );
-
-  if (contract !== undefined) {
-    contract.addLocalFunction(cf);
-  }
-
-  file.addFunction(cf);
-}
-
-function processModifierDefinitionAstNode(
-  modifierDefinitionNode: any,
-  fileIdToSourceFile: Map<number, SourceFile>,
-  contract: Contract,
-  file: SourceFile
-) {
-  const functionLocation = astSrcToSourceLocation(
-    modifierDefinitionNode.src,
-    fileIdToSourceFile
-  )!;
-
-  const cf = new ContractFunction(
-    modifierDefinitionNode.name,
-    ContractFunctionType.MODIFIER,
-    functionLocation,
-    contract
-  );
-
-  contract.addLocalFunction(cf);
-  file.addFunction(cf);
-}
-
-function canonicalAbiTypeForElementaryOrUserDefinedTypes(keyType: any): any {
-  if (isElementaryType(keyType)) {
-    return toCanonicalAbiType(keyType.name);
-  }
-
-  if (isEnumType(keyType)) {
-    return "uint256";
-  }
-
-  if (isContractType(keyType)) {
-    return "address";
-  }
-
-  return undefined;
-}
-
-function getPublicVariableSelectorFromDeclarationAstNode(
-  variableDeclaration: any
-) {
-  if (variableDeclaration.functionSelector !== undefined) {
-    return Buffer.from(variableDeclaration.functionSelector, "hex");
-  }
-
-  const paramTypes: string[] = [];
-
-  // VariableDeclaration nodes for function parameters or state variables will always
-  // have their typeName fields defined.
-  let nextType = variableDeclaration.typeName;
-  while (true) {
-    if (nextType.nodeType === "Mapping") {
-      const canonicalType = canonicalAbiTypeForElementaryOrUserDefinedTypes(
-        nextType.keyType
-      );
-      paramTypes.push(canonicalType);
-
-      nextType = nextType.valueType;
-    } else {
-      if (nextType.nodeType === "ArrayTypeName") {
-        paramTypes.push("uint256");
-      }
-
-      break;
-    }
-  }
-
-  return abi.methodID(variableDeclaration.name, paramTypes);
-}
-
-function processVariableDeclarationAstNode(
-  variableDeclarationNode: any,
-  fileIdToSourceFile: Map<number, SourceFile>,
-  contract: Contract,
-  file: SourceFile,
-  getterAbi?: ContractAbiEntry
-) {
-  const visibility = astVisibilityToVisibility(
-    variableDeclarationNode.visibility
-  );
-
-  // Variables can't be external
-  if (visibility !== ContractFunctionVisibility.PUBLIC) {
-    return;
-  }
-
-  const functionLocation = astSrcToSourceLocation(
-    variableDeclarationNode.src,
-    fileIdToSourceFile
-  )!;
-
-  const paramTypes = getterAbi?.inputs?.map((input) => input.type);
-
-  const cf = new ContractFunction(
-    variableDeclarationNode.name,
-    ContractFunctionType.GETTER,
-    functionLocation,
-    contract,
-    visibility,
-    false, // Getters aren't payable
-    getPublicVariableSelectorFromDeclarationAstNode(variableDeclarationNode),
-    paramTypes
-  );
-
-  contract.addLocalFunction(cf);
-  file.addFunction(cf);
-}
-
-function applyContractsInheritance(
-  contractIdToContract: Map<number, Contract>,
-  contractIdToLinearizedBaseContractIds: Map<number, number[]>
-) {
-  for (const [cid, contract] of contractIdToContract.entries()) {
-    const inheritanceIds = contractIdToLinearizedBaseContractIds.get(cid)!;
-
-    for (const baseId of inheritanceIds) {
-      const baseContract = contractIdToContract.get(baseId);
-
-      if (baseContract === undefined) {
-        // This list includes interface, which we don't model
-        continue;
-      }
-
-      contract.addNextLinearizedBaseContract(baseContract);
-    }
-  }
-}
-
-function decodeBytecodes(
-  solcVersion: string,
-  compilerOutput: CompilerOutput,
-  fileIdToSourceFile: Map<number, SourceFile>,
-  contractIdToContract: Map<number, Contract>
-): Bytecode[] {
-  const bytecodes: Bytecode[] = [];
-
-  for (const contract of contractIdToContract.values()) {
-    const contractFile = contract.location.file.sourceName;
-    const contractEvmOutput =
-      compilerOutput.contracts[contractFile][contract.name].evm;
-    const contractAbiOutput =
-      compilerOutput.contracts[contractFile][contract.name].abi;
-
-    for (const abiItem of contractAbiOutput) {
-      if (abiItem.type === "error") {
-        const customError = CustomError.fromABI(abiItem.name, abiItem.inputs);
-
-        if (customError !== undefined) {
-          contract.addCustomError(customError);
-        } else {
-          log(`Couldn't build CustomError for error '${abiItem.name}'`);
-        }
-      }
-    }
-
-    // This is an abstract contract
-    if (contractEvmOutput.bytecode.object === "") {
-      continue;
-    }
-
-    const deploymentBytecode = decodeEvmBytecode(
-      contract,
-      solcVersion,
-      true,
-      contractEvmOutput.bytecode,
-      fileIdToSourceFile
-    );
-
-    const runtimeBytecode = decodeEvmBytecode(
-      contract,
-      solcVersion,
-      false,
-      contractEvmOutput.deployedBytecode,
-      fileIdToSourceFile
-    );
-
-    bytecodes.push(deploymentBytecode);
-    bytecodes.push(runtimeBytecode);
-  }
-
-  return bytecodes;
-}
-
-function decodeEvmBytecode(
-  contract: Contract,
-  solcVersion: string,
-  isDeployment: boolean,
-  compilerBytecode: CompilerOutputBytecode,
-  fileIdToSourceFile: Map<number, SourceFile>
-): Bytecode {
-  const libraryAddressPositions = getLibraryAddressPositions(compilerBytecode);
-
-  const immutableReferences =
-    compilerBytecode.immutableReferences !== undefined
-      ? Object.values(compilerBytecode.immutableReferences).reduce(
-          (previousValue, currentValue) => [...previousValue, ...currentValue],
-          []
-        )
-      : [];
-
-  const normalizedCode = normalizeCompilerOutputBytecode(
-    compilerBytecode.object,
-    libraryAddressPositions
-  );
-
-  const instructions = decodeInstructions(
-    normalizedCode,
-    compilerBytecode.sourceMap,
-    fileIdToSourceFile,
-    isDeployment
-  );
-
-  return new Bytecode(
-    contract,
-    isDeployment,
-    normalizedCode,
-    instructions,
-    libraryAddressPositions,
-    immutableReferences,
-    solcVersion
-  );
-}
-
-function astSrcToSourceLocation(
-  src: string,
-  fileIdToSourceFile: Map<number, SourceFile>
-): SourceLocation | undefined {
-  const [offset, length, fileId] = src.split(":").map((p) => +p);
-  const file = fileIdToSourceFile.get(fileId);
-
-  if (file === undefined) {
-    return undefined;
-  }
-
-  return new SourceLocation(file, offset, length);
-}
-
-function contractKindToContractType(
-  contractKind?: string
-): ContractType | undefined {
-  if (contractKind === "library") {
-    return ContractType.LIBRARY;
-  }
-
-  if (contractKind === "contract") {
-    return ContractType.CONTRACT;
-  }
-
-  return undefined;
-}
-
-function astVisibilityToVisibility(
-  visibility: string
-): ContractFunctionVisibility {
-  if (visibility === "private") {
-    return ContractFunctionVisibility.PRIVATE;
-  }
-
-  if (visibility === "internal") {
-    return ContractFunctionVisibility.INTERNAL;
-  }
-
-  if (visibility === "public") {
-    return ContractFunctionVisibility.PUBLIC;
-  }
-
-  return ContractFunctionVisibility.EXTERNAL;
-}
-
-function functionDefinitionKindToFunctionType(
-  kind: string | undefined
-): ContractFunctionType {
-  if (kind === "constructor") {
-    return ContractFunctionType.CONSTRUCTOR;
-  }
-
-  if (kind === "fallback") {
-    return ContractFunctionType.FALLBACK;
-  }
-
-  if (kind === "receive") {
-    return ContractFunctionType.RECEIVE;
-  }
-
-  if (kind === "freeFunction") {
-    return ContractFunctionType.FREE_FUNCTION;
-  }
-
-  return ContractFunctionType.FUNCTION;
-}
-
-function astFunctionDefinitionToSelector(functionDefinition: any): Buffer {
-  const paramTypes: string[] = [];
-
-  // The function selector is available in solc versions >=0.6.0
-  if (functionDefinition.functionSelector !== undefined) {
-    return Buffer.from(functionDefinition.functionSelector, "hex");
-  }
-
-  for (const param of functionDefinition.parameters.parameters) {
-    if (isContractType(param)) {
-      paramTypes.push("address");
-      continue;
-    }
-
-    // TODO: implement ABIv2 structs parsing
-    // This might mean we need to parse struct definitions before
-    // resolving types and trying to calculate function selectors.
-    // if (isStructType(param)) {
-    //   paramTypes.push(something);
-    //   continue;
-    // }
-
-    if (isEnumType(param)) {
-      // TODO: If the enum has >= 256 elements this will fail. It should be a uint16. This is
-      //  complicated, as enums can be inherited. Fortunately, if multiple parent contracts
-      //  define the same enum, solc fails to compile.
-      paramTypes.push("uint8");
-      continue;
-    }
-
-    // The rest of the function parameters always have their typeName node defined
-    const typename = param.typeName;
-    if (
-      typename.nodeType === "ArrayTypeName" ||
-      typename.nodeType === "FunctionTypeName" ||
-      typename.nodeType === "Mapping"
-    ) {
-      paramTypes.push(typename.typeDescriptions.typeString);
-      continue;
-    }
-
-    paramTypes.push(toCanonicalAbiType(typename.name));
-  }
-
-  return abi.methodID(functionDefinition.name, paramTypes);
-}
-
-function isContractType(param: any): boolean {
-  return (
-    (param.typeName?.nodeType === "UserDefinedTypeName" ||
-      param?.nodeType === "UserDefinedTypeName") &&
-    param.typeDescriptions?.typeString !== undefined &&
-    param.typeDescriptions.typeString.startsWith("contract ")
-  );
-}
-
-function isEnumType(param: any): boolean {
-  return (
-    (param.typeName?.nodeType === "UserDefinedTypeName" ||
-      param?.nodeType === "UserDefinedTypeName") &&
-    param.typeDescriptions?.typeString !== undefined &&
-    param.typeDescriptions.typeString.startsWith("enum ")
-  );
-}
-
-function isElementaryType(param: any) {
-  return (
-    param.type === "ElementaryTypeName" ||
-    param.nodeType === "ElementaryTypeName"
-  );
-}
-
-function toCanonicalAbiType(type: string): string {
-  if (type.startsWith("int[")) {
-    return `int256${type.slice(3)}`;
-  }
-
-  if (type === "int") {
-    return "int256";
-  }
-
-  if (type.startsWith("uint[")) {
-    return `uint256${type.slice(4)}`;
-  }
-
-  if (type === "uint") {
-    return "uint256";
-  }
-
-  if (type.startsWith("fixed[")) {
-    return `fixed128x128${type.slice(5)}`;
-  }
-
-  if (type === "fixed") {
-    return "fixed128x128";
-  }
-
-  if (type.startsWith("ufixed[")) {
-    return `ufixed128x128${type.slice(6)}`;
-  }
-
-  if (type === "ufixed") {
-    return "ufixed128x128";
-  }
-
-  return type;
-}
-
-function correctSelectors(
-  bytecodes: Bytecode[],
-  compilerOutput: CompilerOutput
-) {
-  for (const bytecode of bytecodes) {
-    if (bytecode.isDeployment) {
-      continue;
-    }
-
-    const contract = bytecode.contract;
-    const methodIdentifiers =
-      compilerOutput.contracts[contract.location.file.sourceName][contract.name]
-        .evm.methodIdentifiers;
-
-    for (const [signature, hexSelector] of Object.entries(methodIdentifiers)) {
-      const functionName = signature.slice(0, signature.indexOf("("));
-      const selector = Buffer.from(hexSelector, "hex");
-
-      const contractFunction = contract.getFunctionFromSelector(selector);
-
-      if (contractFunction !== undefined) {
-        continue;
-      }
-
-      const fixedSelector = contract.correctSelector(functionName, selector);
-
-      if (!fixedSelector) {
-        // eslint-disable-next-line @nomicfoundation/hardhat-internal-rules/only-hardhat-error
-        throw new Error(
-          `Failed to compute the selector one or more implementations of ${contract.name}#${functionName}. Hardhat Network can automatically fix this problem if you don't use function overloading.`
-        );
-      }
-    }
-  }
-}
+export { createModelsAndDecodeBytecodes };
diff --git a/src/internal/hardhat-network/stack-traces/contracts-identifier.ts b/src/internal/hardhat-network/stack-traces/contracts-identifier.ts
deleted file mode 100644
index 7a479a62cfad681807b6408449458dfcd6960fe7..0000000000000000000000000000000000000000
diff --git a/src/internal/hardhat-network/stack-traces/debug.ts b/src/internal/hardhat-network/stack-traces/debug.ts
index 03c423f31895ca495059bba42b5568ea10cbaeb7..19bedc7654f2de97929cee63adcf877b19167f61 100644
--- a/src/internal/hardhat-network/stack-traces/debug.ts
+++ b/src/internal/hardhat-network/stack-traces/debug.ts
@@ -1,220 +1,7 @@
-import { bytesToHex as bufferToHex } from "@nomicfoundation/ethereumjs-util";
-import chalk from "chalk";
+import { requireNapiRsModule } from "../../../common/napi-rs";
 
-import {
-  CallMessageTrace,
-  CreateMessageTrace,
-  isCreateTrace,
-  isEvmStep,
-  isPrecompileTrace,
-  MessageTrace,
-  PrecompileMessageTrace,
-} from "./message-trace";
-import { JumpType } from "./model";
-import { isJump, isPush, Opcode } from "./opcodes";
-import {
-  SolidityStackTrace,
-  SourceReference,
-  StackTraceEntryType,
-} from "./solidity-stack-trace";
+const { printMessageTrace, printStackTrace } = requireNapiRsModule(
+  "@nomicfoundation/edr"
+) as typeof import("@nomicfoundation/edr");
 
-const MARGIN_SPACE = 6;
-
-export function printMessageTrace(trace: MessageTrace, depth = 0) {
-  console.log("");
-
-  if (isCreateTrace(trace)) {
-    printCreateTrace(trace, depth);
-  } else if (isPrecompileTrace(trace)) {
-    printPrecompileTrace(trace, depth);
-  } else {
-    printCallTrace(trace, depth);
-  }
-
-  console.log("");
-}
-
-export function printCreateTrace(trace: CreateMessageTrace, depth: number) {
-  const margin = "".padStart(depth * MARGIN_SPACE);
-  console.log(`${margin}Create trace`);
-
-  if (trace.bytecode !== undefined) {
-    console.log(
-      `${margin} deploying contract: ${trace.bytecode.contract.location.file.sourceName}:${trace.bytecode.contract.name}`
-    );
-
-    console.log(`${margin} code: ${bufferToHex(trace.code)}`);
-  } else {
-    console.log(
-      `${margin} unrecognized deployment code: ${bufferToHex(trace.code)}`
-    );
-  }
-
-  console.log(`${margin} value: ${trace.value.toString(10)}`);
-
-  if (trace.deployedContract !== undefined) {
-    console.log(
-      `${margin} contract address: ${bufferToHex(trace.deployedContract)}`
-    );
-  }
-
-  if (trace.exit.isError()) {
-    console.log(`${margin} error: ${trace.exit.getReason()}`);
-
-    // The return data is the deployed-bytecode if there was no error, so we don't show it
-    console.log(`${margin} returnData: ${bufferToHex(trace.returnData)}`);
-  }
-
-  traceSteps(trace, depth);
-}
-
-export function printPrecompileTrace(
-  trace: PrecompileMessageTrace,
-  depth: number
-) {
-  const margin = "".padStart(depth * MARGIN_SPACE);
-  console.log(`${margin}Precompile trace`);
-
-  console.log(`${margin} precompile number: ${trace.precompile}`);
-  console.log(`${margin} value: ${trace.value.toString(10)}`);
-  console.log(`${margin} calldata: ${bufferToHex(trace.calldata)}`);
-
-  if (trace.exit.isError()) {
-    console.log(`${margin} error: ${trace.exit.getReason()}`);
-  }
-
-  console.log(`${margin} returnData: ${bufferToHex(trace.returnData)}`);
-}
-
-export function printCallTrace(trace: CallMessageTrace, depth: number) {
-  const margin = "".padStart(depth * MARGIN_SPACE);
-  console.log(`${margin}Call trace`);
-
-  if (trace.bytecode !== undefined) {
-    console.log(
-      `${margin} calling contract: ${trace.bytecode.contract.location.file.sourceName}:${trace.bytecode.contract.name}`
-    );
-  } else {
-    console.log(
-      `${margin} unrecognized contract code: ${bufferToHex(trace.code)}`
-    );
-    console.log(`${margin} contract: ${bufferToHex(trace.address)}`);
-  }
-
-  console.log(`${margin} value: ${trace.value.toString(10)}`);
-  console.log(`${margin} calldata: ${bufferToHex(trace.calldata)}`);
-
-  if (trace.exit.isError()) {
-    console.log(`${margin} error: ${trace.exit.getReason()}`);
-  }
-
-  console.log(`${margin} returnData: ${bufferToHex(trace.returnData)}`);
-
-  traceSteps(trace, depth);
-}
-
-function traceSteps(
-  trace: CreateMessageTrace | CallMessageTrace,
-  depth: number
-) {
-  const margin = "".padStart(depth * MARGIN_SPACE);
-
-  console.log(`${margin} steps:`);
-  console.log("");
-
-  for (const step of trace.steps) {
-    if (isEvmStep(step)) {
-      const pc = step.pc.toString(10).padStart(3, "0").padStart(5);
-
-      if (trace.bytecode !== undefined) {
-        const inst = trace.bytecode.getInstruction(step.pc);
-
-        let location: string = "";
-
-        if (inst.location !== undefined) {
-          location += inst.location.file.sourceName;
-
-          const func = inst.location.getContainingFunction();
-          if (func !== undefined) {
-            location += `:${
-              func.contract?.name ?? func.location.file.sourceName
-            }:${func.name}`;
-          }
-
-          location += `   -  ${inst.location.offset}:${inst.location.length}`;
-        }
-
-        if (isJump(inst.opcode)) {
-          const jump =
-            inst.jumpType !== JumpType.NOT_JUMP
-              ? chalk.bold(`(${JumpType[inst.jumpType]})`)
-              : "";
-
-          console.log(
-            `${margin}  ${pc}   ${Opcode[inst.opcode]} ${jump}`.padEnd(50),
-            location
-          );
-        } else if (isPush(inst.opcode)) {
-          console.log(
-            `${margin}  ${pc}   ${Opcode[inst.opcode]} ${bufferToHex(
-              inst.pushData!
-            )}`.padEnd(50),
-            location
-          );
-        } else {
-          console.log(
-            `${margin}  ${pc}   ${Opcode[inst.opcode]}`.padEnd(50),
-            location
-          );
-        }
-      } else {
-        console.log(`${margin}  ${pc}`);
-      }
-    } else {
-      printMessageTrace(step, depth + 1);
-    }
-  }
-}
-
-function flattenSourceReference(sourceReference?: SourceReference) {
-  if (sourceReference === undefined) {
-    return undefined;
-  }
-
-  return {
-    ...sourceReference,
-    file: sourceReference.sourceName,
-  };
-}
-
-export function printStackTrace(trace: SolidityStackTrace) {
-  const withDecodedMessages = trace.map((entry) =>
-    entry.type === StackTraceEntryType.REVERT_ERROR
-      ? { ...entry, message: entry.message.decodeError() }
-      : entry
-  );
-
-  const withHexAddress = withDecodedMessages.map((entry) =>
-    "address" in entry
-      ? { ...entry, address: bufferToHex(entry.address) }
-      : entry
-  );
-
-  const withTextualType = withHexAddress.map((entry) => ({
-    ...entry,
-    type: StackTraceEntryType[entry.type],
-  }));
-
-  const withFlattenedSourceReferences = withTextualType.map((entry) => ({
-    ...entry,
-    sourceReference: flattenSourceReference(entry.sourceReference),
-  }));
-
-  console.log(
-    JSON.stringify(
-      withFlattenedSourceReferences,
-      (key, value) => (typeof value === "bigint" ? value.toString() : value),
-      2
-    )
-  );
-}
+export { printMessageTrace, printStackTrace };
diff --git a/src/internal/hardhat-network/stack-traces/error-inferrer.ts b/src/internal/hardhat-network/stack-traces/error-inferrer.ts
deleted file mode 100644
index e185841f421641b2fe9a7fa34aeaf7b0813723cb..0000000000000000000000000000000000000000
diff --git a/src/internal/hardhat-network/stack-traces/library-utils.ts b/src/internal/hardhat-network/stack-traces/library-utils.ts
index 9f45bebdcde3092695f44efcd3e6b06222d344bb..e960e7ccf3bc2d3b660afbf8d04813d86301560a 100644
--- a/src/internal/hardhat-network/stack-traces/library-utils.ts
+++ b/src/internal/hardhat-network/stack-traces/library-utils.ts
@@ -1,92 +1,7 @@
-import { CompilerOutputBytecode } from "../../../types";
+import { requireNapiRsModule } from "../../../common/napi-rs";
 
-import { Opcode } from "./opcodes";
+const { linkHexStringBytecode } = requireNapiRsModule(
+  "@nomicfoundation/edr"
+) as typeof import("@nomicfoundation/edr");
 
-export function getLibraryAddressPositions(
-  bytecodeOutput: CompilerOutputBytecode
-): number[] {
-  const positions = [];
-  for (const libs of Object.values(bytecodeOutput.linkReferences)) {
-    for (const references of Object.values(libs)) {
-      for (const ref of references) {
-        positions.push(ref.start);
-      }
-    }
-  }
-
-  return positions;
-}
-
-export function normalizeCompilerOutputBytecode(
-  compilerOutputBytecodeObject: string,
-  addressesPositions: number[]
-): Buffer {
-  const ZERO_ADDRESS = "0000000000000000000000000000000000000000";
-  for (const position of addressesPositions) {
-    compilerOutputBytecodeObject = linkHexStringBytecode(
-      compilerOutputBytecodeObject,
-      ZERO_ADDRESS,
-      position
-    );
-  }
-
-  return Buffer.from(compilerOutputBytecodeObject, "hex");
-}
-
-export function linkHexStringBytecode(
-  code: string,
-  address: string,
-  position: number
-) {
-  if (address.startsWith("0x")) {
-    address = address.substring(2);
-  }
-
-  return (
-    code.substring(0, position * 2) +
-    address +
-    code.slice(position * 2 + address.length)
-  );
-}
-
-export function zeroOutAddresses(
-  code: Uint8Array,
-  addressesPositions: number[]
-): Uint8Array {
-  const addressesSlices = addressesPositions.map((start) => ({
-    start,
-    length: 20,
-  }));
-
-  return zeroOutSlices(code, addressesSlices);
-}
-
-export function zeroOutSlices(
-  code: Uint8Array,
-  slices: Array<{ start: number; length: number }>
-): Uint8Array {
-  for (const { start, length } of slices) {
-    code = Buffer.concat([
-      code.slice(0, start),
-      Buffer.alloc(length, 0),
-      code.slice(start + length),
-    ]);
-  }
-
-  return code;
-}
-
-export function normalizeLibraryRuntimeBytecodeIfNecessary(
-  code: Uint8Array
-): Uint8Array {
-  // Libraries' protection normalization:
-  // Solidity 0.4.20 introduced a protection to prevent libraries from being called directly.
-  // This is done by modifying the code on deployment, and hard-coding the contract address.
-  // The first instruction is a PUSH20 of the address, which we zero-out as a way of normalizing
-  // it. Note that it's also zeroed-out in the compiler output.
-  if (code[0] === Opcode.PUSH20) {
-    return zeroOutAddresses(code, [1]);
-  }
-
-  return code;
-}
+export { linkHexStringBytecode };
diff --git a/src/internal/hardhat-network/stack-traces/mapped-inlined-internal-functions-heuristics.ts b/src/internal/hardhat-network/stack-traces/mapped-inlined-internal-functions-heuristics.ts
deleted file mode 100644
index 73bf02f93455786471288001151fbaf96ea5975f..0000000000000000000000000000000000000000
diff --git a/src/internal/hardhat-network/stack-traces/message-trace.ts b/src/internal/hardhat-network/stack-traces/message-trace.ts
index ddfe86ce4d1ff90969db10bc6bd1f0f6667a5715..61bddec7120482ee7b30a9eb93a5b453e1e967b3 100644
--- a/src/internal/hardhat-network/stack-traces/message-trace.ts
+++ b/src/internal/hardhat-network/stack-traces/message-trace.ts
@@ -1,129 +1,12 @@
-import type { Bytecode } from "./model";
-import type { Exit } from "../provider/vm/exit";
 import type {
-  CallOutput,
-  CreateOutput,
-  HaltResult,
-  RevertResult,
-  SuccessResult,
+  PrecompileMessageTrace,
+  CreateMessageTrace,
+  CallMessageTrace,
 } from "@nomicfoundation/edr";
 
+export type { PrecompileMessageTrace, CreateMessageTrace, CallMessageTrace };
+
 export type MessageTrace =
   | CreateMessageTrace
   | CallMessageTrace
   | PrecompileMessageTrace;
-
-export type EvmMessageTrace = CreateMessageTrace | CallMessageTrace;
-
-export type DecodedEvmMessageTrace =
-  | DecodedCreateMessageTrace
-  | DecodedCallMessageTrace;
-
-export interface BaseMessageTrace {
-  value: bigint;
-  returnData: Uint8Array;
-  exit: Exit;
-  gasUsed: bigint;
-  depth: number;
-}
-
-export interface PrecompileMessageTrace extends BaseMessageTrace {
-  precompile: number;
-  calldata: Uint8Array;
-}
-
-export interface BaseEvmMessageTrace extends BaseMessageTrace {
-  code: Uint8Array;
-  steps: MessageTraceStep[];
-  bytecode?: Bytecode;
-  // The following is just an optimization: When processing this traces it's useful to know ahead of
-  // time how many subtraces there are.
-  numberOfSubtraces: number;
-}
-
-export interface CreateMessageTrace extends BaseEvmMessageTrace {
-  deployedContract: Uint8Array | undefined;
-}
-
-export interface CallMessageTrace extends BaseEvmMessageTrace {
-  calldata: Uint8Array;
-  address: Uint8Array;
-  codeAddress: Uint8Array;
-}
-
-export interface DecodedCreateMessageTrace extends CreateMessageTrace {
-  bytecode: Bytecode;
-}
-
-export interface DecodedCallMessageTrace extends CallMessageTrace {
-  bytecode: Bytecode;
-}
-
-export function isPrecompileTrace(
-  trace: MessageTrace
-): trace is PrecompileMessageTrace {
-  return "precompile" in trace;
-}
-
-export function isCreateTrace(
-  trace: MessageTrace
-): trace is CreateMessageTrace {
-  return "code" in trace && !isCallTrace(trace);
-}
-
-export function isDecodedCreateTrace(
-  trace: MessageTrace
-): trace is DecodedCreateMessageTrace {
-  return isCreateTrace(trace) && trace.bytecode !== undefined;
-}
-
-export function isCallTrace(trace: MessageTrace): trace is CallMessageTrace {
-  return "code" in trace && "calldata" in trace;
-}
-
-export function isDecodedCallTrace(
-  trace: MessageTrace
-): trace is DecodedCallMessageTrace {
-  return isCallTrace(trace) && trace.bytecode !== undefined;
-}
-
-export function isEvmStep(step: MessageTraceStep): step is EvmStep {
-  return "pc" in step && step.pc !== undefined;
-}
-
-export type MessageTraceStep = MessageTrace | EvmStep;
-
-export interface EvmStep {
-  pc: number;
-}
-
-export function isCallOutput(
-  output: CallOutput | CreateOutput
-): output is CallOutput {
-  return !isCreateOutput(output);
-}
-
-export function isCreateOutput(
-  output: CallOutput | CreateOutput
-): output is CreateOutput {
-  return "address" in output;
-}
-
-export function isSuccessResult(
-  result: SuccessResult | RevertResult | HaltResult
-): result is SuccessResult {
-  // Only need to check for one unique field
-  return "gasRefunded" in result;
-}
-
-export function isRevertResult(
-  result: SuccessResult | RevertResult | HaltResult
-): result is RevertResult {
-  return !("reason" in result);
-}
-
-export function isHaltResult(
-  result: SuccessResult | RevertResult | HaltResult
-): result is HaltResult {
-  return !("output" in result);
-}
diff --git a/src/internal/hardhat-network/stack-traces/model.ts b/src/internal/hardhat-network/stack-traces/model.ts
deleted file mode 100644
index 534ae112a663f90fce98e68efca01db3d391c96f..0000000000000000000000000000000000000000
diff --git a/src/internal/hardhat-network/stack-traces/opcodes.ts b/src/internal/hardhat-network/stack-traces/opcodes.ts
deleted file mode 100644
index e0602c17fb8c0c48b740d5e6bb8925cfaba67740..0000000000000000000000000000000000000000
diff --git a/src/internal/hardhat-network/stack-traces/solidity-errors.ts b/src/internal/hardhat-network/stack-traces/solidity-errors.ts
index 2cca42213c32090c323601076e526983c0c317a3..0440a355f08dbb22eff81e0fc37a223fb8856746 100644
--- a/src/internal/hardhat-network/stack-traces/solidity-errors.ts
+++ b/src/internal/hardhat-network/stack-traces/solidity-errors.ts
@@ -1,5 +1,6 @@
 import { bytesToHex as bufferToHex } from "@nomicfoundation/ethereumjs-util";
 
+import { ReturnData } from "../provider/return-data";
 import { panicErrorCodeToMessage } from "./panic-errors";
 import {
   CONSTRUCTOR_FUNCTION_NAME,
@@ -259,23 +260,22 @@ function getMessageFromLastStackTraceEntry(
 
     case StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR:
     case StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR:
-      if (stackTraceEntry.message.isErrorReturnData()) {
-        return `VM Exception while processing transaction: reverted with reason string '${stackTraceEntry.message.decodeError()}'`;
+      let returnData = new ReturnData(stackTraceEntry.returnData);
+      if (returnData.isErrorReturnData()) {
+        return `VM Exception while processing transaction: reverted with reason string '${new ReturnData(
+          stackTraceEntry.returnData
+        ).decodeError()}'`;
       }
 
-      if (stackTraceEntry.message.isPanicReturnData()) {
-        const message = panicErrorCodeToMessage(
-          stackTraceEntry.message.decodePanic()
-        );
+      if (returnData.isPanicReturnData()) {
+        const message = panicErrorCodeToMessage(returnData.decodePanic());
         return `VM Exception while processing transaction: ${message}`;
       }
 
-      if (!stackTraceEntry.message.isEmpty()) {
-        const returnData = Buffer.from(stackTraceEntry.message.value).toString(
-          "hex"
-        );
+      if (!returnData.isEmpty()) {
+        const buffer = Buffer.from(returnData.value).toString("hex");
 
-        return `VM Exception while processing transaction: reverted with an unrecognized custom error (return data: 0x${returnData})`;
+        return `VM Exception while processing transaction: reverted with an unrecognized custom error (return data: 0x${buffer})`;
       }
 
       if (stackTraceEntry.isInvalidOpcodeError) {
@@ -285,8 +285,9 @@ function getMessageFromLastStackTraceEntry(
       return "Transaction reverted without a reason string";
 
     case StackTraceEntryType.REVERT_ERROR:
-      if (stackTraceEntry.message.isErrorReturnData()) {
-        return `VM Exception while processing transaction: reverted with reason string '${stackTraceEntry.message.decodeError()}'`;
+      returnData = new ReturnData(stackTraceEntry.returnData);
+      if (returnData.isErrorReturnData()) {
+        return `VM Exception while processing transaction: reverted with reason string '${returnData.decodeError()}'`;
       }
 
       if (stackTraceEntry.isInvalidOpcodeError) {
diff --git a/src/internal/hardhat-network/stack-traces/solidity-stack-trace.ts b/src/internal/hardhat-network/stack-traces/solidity-stack-trace.ts
index e531a44cbee7daa9b41f31b6b64e7ae677b2abe4..b07e2c5ecd277a5a3425abca7fbaaf7b4268af45 100644
--- a/src/internal/hardhat-network/stack-traces/solidity-stack-trace.ts
+++ b/src/internal/hardhat-network/stack-traces/solidity-stack-trace.ts
@@ -1,189 +1,86 @@
-import { ReturnData } from "../provider/return-data";
-
-import { ContractFunctionType } from "./model";
-
-export enum StackTraceEntryType {
-  CALLSTACK_ENTRY,
-  UNRECOGNIZED_CREATE_CALLSTACK_ENTRY,
-  UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY,
-  PRECOMPILE_ERROR,
-  REVERT_ERROR,
-  PANIC_ERROR,
-  CUSTOM_ERROR,
-  FUNCTION_NOT_PAYABLE_ERROR,
-  INVALID_PARAMS_ERROR,
-  FALLBACK_NOT_PAYABLE_ERROR,
-  FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR,
-  UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR, // TODO: Should trying to call a private/internal be a special case of this?
-  MISSING_FALLBACK_OR_RECEIVE_ERROR,
-  RETURNDATA_SIZE_ERROR,
-  NONCONTRACT_ACCOUNT_CALLED_ERROR,
-  CALL_FAILED_ERROR,
-  DIRECT_LIBRARY_CALL_ERROR,
-  UNRECOGNIZED_CREATE_ERROR,
-  UNRECOGNIZED_CONTRACT_ERROR,
-  OTHER_EXECUTION_ERROR,
-  // This is a special case to handle a regression introduced in solc 0.6.3
-  // For more info: https://github.com/ethereum/solidity/issues/9006
-  UNMAPPED_SOLC_0_6_3_REVERT_ERROR,
-  CONTRACT_TOO_LARGE_ERROR,
-  INTERNAL_FUNCTION_CALLSTACK_ENTRY,
-  CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR,
-}
-
-export const FALLBACK_FUNCTION_NAME = "<fallback>";
-export const RECEIVE_FUNCTION_NAME = "<receive>";
-export const CONSTRUCTOR_FUNCTION_NAME = "constructor";
-export const UNRECOGNIZED_FUNCTION_NAME = "<unrecognized-selector>";
-export const UNKNOWN_FUNCTION_NAME = "<unknown>";
-export const PRECOMPILE_FUNCTION_NAME = "<precompile>";
-export const UNRECOGNIZED_CONTRACT_NAME = "<UnrecognizedContract>";
-
-export interface SourceReference {
-  sourceName: string;
-  sourceContent: string;
-  contract?: string;
-  function?: string;
-  line: number;
-  range: [number, number];
-}
-
-export interface CallstackEntryStackTraceEntry {
-  type: StackTraceEntryType.CALLSTACK_ENTRY;
-  sourceReference: SourceReference;
-  functionType: ContractFunctionType;
-}
-
-export interface UnrecognizedCreateCallstackEntryStackTraceEntry {
-  type: StackTraceEntryType.UNRECOGNIZED_CREATE_CALLSTACK_ENTRY;
-  sourceReference?: undefined;
-}
-
-export interface UnrecognizedContractCallstackEntryStackTraceEntry {
-  type: StackTraceEntryType.UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY;
-  address: Uint8Array;
-  sourceReference?: undefined;
-}
-
-export interface PrecompileErrorStackTraceEntry {
-  type: StackTraceEntryType.PRECOMPILE_ERROR;
-  precompile: number;
-  sourceReference?: undefined;
-}
-
-export interface RevertErrorStackTraceEntry {
-  type: StackTraceEntryType.REVERT_ERROR;
-  message: ReturnData;
-  sourceReference: SourceReference;
-  isInvalidOpcodeError: boolean;
-}
-
-export interface PanicErrorStackTraceEntry {
-  type: StackTraceEntryType.PANIC_ERROR;
-  errorCode: bigint;
-  sourceReference?: SourceReference;
-}
-
-export interface CustomErrorStackTraceEntry {
-  type: StackTraceEntryType.CUSTOM_ERROR;
-  // unlike RevertErrorStackTraceEntry, this includes the message already parsed
-  message: string;
-  sourceReference: SourceReference;
-}
-
-export interface UnmappedSolc063RevertErrorStackTraceEntry {
-  type: StackTraceEntryType.UNMAPPED_SOLC_0_6_3_REVERT_ERROR;
-  sourceReference?: SourceReference;
-}
-
-export interface FunctionNotPayableErrorStackTraceEntry {
-  type: StackTraceEntryType.FUNCTION_NOT_PAYABLE_ERROR;
-  value: bigint;
-  sourceReference: SourceReference;
-}
-
-export interface InvalidParamsErrorStackTraceEntry {
-  type: StackTraceEntryType.INVALID_PARAMS_ERROR;
-  sourceReference: SourceReference;
-}
-
-export interface FallbackNotPayableErrorStackTraceEntry {
-  type: StackTraceEntryType.FALLBACK_NOT_PAYABLE_ERROR;
-  value: bigint;
-  sourceReference: SourceReference;
-}
-
-export interface FallbackNotPayableAndNoReceiveErrorStackTraceEntry {
-  type: StackTraceEntryType.FALLBACK_NOT_PAYABLE_AND_NO_RECEIVE_ERROR;
-  value: bigint;
-  sourceReference: SourceReference;
-}
-
-export interface UnrecognizedFunctionWithoutFallbackErrorStackTraceEntry {
-  type: StackTraceEntryType.UNRECOGNIZED_FUNCTION_WITHOUT_FALLBACK_ERROR;
-  sourceReference: SourceReference;
-}
-
-export interface MissingFallbackOrReceiveErrorStackTraceEntry {
-  type: StackTraceEntryType.MISSING_FALLBACK_OR_RECEIVE_ERROR;
-  sourceReference: SourceReference;
-}
-
-export interface ReturndataSizeErrorStackTraceEntry {
-  type: StackTraceEntryType.RETURNDATA_SIZE_ERROR;
-  sourceReference: SourceReference;
-}
-
-export interface NonContractAccountCalledErrorStackTraceEntry {
-  type: StackTraceEntryType.NONCONTRACT_ACCOUNT_CALLED_ERROR;
-  sourceReference: SourceReference;
-}
-
-export interface CallFailedErrorStackTraceEntry {
-  type: StackTraceEntryType.CALL_FAILED_ERROR;
-  sourceReference: SourceReference;
-}
-
-export interface DirectLibraryCallErrorStackTraceEntry {
-  type: StackTraceEntryType.DIRECT_LIBRARY_CALL_ERROR;
-  sourceReference: SourceReference;
-}
-
-export interface UnrecognizedCreateErrorStackTraceEntry {
-  type: StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR;
-  message: ReturnData;
-  sourceReference?: undefined;
-  isInvalidOpcodeError: boolean;
-}
-
-export interface UnrecognizedContractErrorStackTraceEntry {
-  type: StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR;
-  address: Uint8Array;
-  message: ReturnData;
-  sourceReference?: undefined;
-  isInvalidOpcodeError: boolean;
-}
-
-export interface OtherExecutionErrorStackTraceEntry {
-  type: StackTraceEntryType.OTHER_EXECUTION_ERROR;
-  sourceReference?: SourceReference;
-}
-
-export interface ContractTooLargeErrorStackTraceEntry {
-  type: StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR;
-  sourceReference?: SourceReference;
-}
-
-export interface InternalFunctionCallStackEntry {
-  type: StackTraceEntryType.INTERNAL_FUNCTION_CALLSTACK_ENTRY;
-  pc: number;
-  sourceReference: SourceReference;
-}
-
-export interface ContractCallRunOutOfGasError {
-  type: StackTraceEntryType.CONTRACT_CALL_RUN_OUT_OF_GAS_ERROR;
-  sourceReference?: SourceReference;
-}
+import type {
+  SourceReference,
+  CallstackEntryStackTraceEntry,
+  UnrecognizedCreateCallstackEntryStackTraceEntry,
+  UnrecognizedContractCallstackEntryStackTraceEntry,
+  PrecompileErrorStackTraceEntry,
+  RevertErrorStackTraceEntry,
+  PanicErrorStackTraceEntry,
+  CustomErrorStackTraceEntry,
+  FunctionNotPayableErrorStackTraceEntry,
+  InvalidParamsErrorStackTraceEntry,
+  FallbackNotPayableErrorStackTraceEntry,
+  FallbackNotPayableAndNoReceiveErrorStackTraceEntry,
+  UnrecognizedFunctionWithoutFallbackErrorStackTraceEntry,
+  MissingFallbackOrReceiveErrorStackTraceEntry,
+  ReturndataSizeErrorStackTraceEntry,
+  NonContractAccountCalledErrorStackTraceEntry,
+  CallFailedErrorStackTraceEntry,
+  DirectLibraryCallErrorStackTraceEntry,
+  UnrecognizedCreateErrorStackTraceEntry,
+  UnrecognizedContractErrorStackTraceEntry,
+  OtherExecutionErrorStackTraceEntry,
+  UnmappedSolc063RevertErrorStackTraceEntry,
+  ContractTooLargeErrorStackTraceEntry,
+  InternalFunctionCallStackEntry,
+  ContractCallRunOutOfGasError,
+} from "@nomicfoundation/edr";
+
+import { requireNapiRsModule } from "../../../common/napi-rs";
+
+const {
+  StackTraceEntryType,
+  stackTraceEntryTypeToString,
+  FALLBACK_FUNCTION_NAME,
+  RECEIVE_FUNCTION_NAME,
+  CONSTRUCTOR_FUNCTION_NAME,
+  UNRECOGNIZED_FUNCTION_NAME,
+  UNKNOWN_FUNCTION_NAME,
+  PRECOMPILE_FUNCTION_NAME,
+  UNRECOGNIZED_CONTRACT_NAME,
+} = requireNapiRsModule(
+  "@nomicfoundation/edr"
+) as typeof import("@nomicfoundation/edr");
+
+export {
+  SourceReference,
+  StackTraceEntryType,
+  stackTraceEntryTypeToString,
+  FALLBACK_FUNCTION_NAME,
+  RECEIVE_FUNCTION_NAME,
+  CONSTRUCTOR_FUNCTION_NAME,
+  UNRECOGNIZED_FUNCTION_NAME,
+  UNKNOWN_FUNCTION_NAME,
+  PRECOMPILE_FUNCTION_NAME,
+  UNRECOGNIZED_CONTRACT_NAME,
+};
+
+export type {
+  CallstackEntryStackTraceEntry,
+  UnrecognizedCreateCallstackEntryStackTraceEntry,
+  UnrecognizedContractCallstackEntryStackTraceEntry,
+  PrecompileErrorStackTraceEntry,
+  RevertErrorStackTraceEntry,
+  PanicErrorStackTraceEntry,
+  CustomErrorStackTraceEntry,
+  FunctionNotPayableErrorStackTraceEntry,
+  InvalidParamsErrorStackTraceEntry,
+  FallbackNotPayableErrorStackTraceEntry,
+  FallbackNotPayableAndNoReceiveErrorStackTraceEntry,
+  UnrecognizedFunctionWithoutFallbackErrorStackTraceEntry,
+  MissingFallbackOrReceiveErrorStackTraceEntry,
+  ReturndataSizeErrorStackTraceEntry,
+  NonContractAccountCalledErrorStackTraceEntry,
+  CallFailedErrorStackTraceEntry,
+  DirectLibraryCallErrorStackTraceEntry,
+  UnrecognizedCreateErrorStackTraceEntry,
+  UnrecognizedContractErrorStackTraceEntry,
+  OtherExecutionErrorStackTraceEntry,
+  UnmappedSolc063RevertErrorStackTraceEntry,
+  ContractTooLargeErrorStackTraceEntry,
+  InternalFunctionCallStackEntry,
+  ContractCallRunOutOfGasError,
+};
 
 export type SolidityStackTraceEntry =
   | CallstackEntryStackTraceEntry
diff --git a/src/internal/hardhat-network/stack-traces/solidityTracer.ts b/src/internal/hardhat-network/stack-traces/solidityTracer.ts
index 3f92ee08c8e6e9a720ec34e5dd228d7f340a43d3..c8154a413c7e9d93cd0da4a7ea506ae4a9dae062 100644
--- a/src/internal/hardhat-network/stack-traces/solidityTracer.ts
+++ b/src/internal/hardhat-network/stack-traces/solidityTracer.ts
@@ -1,255 +1,7 @@
-import { equalsBytes } from "@nomicfoundation/ethereumjs-util";
+import { requireNapiRsModule } from "../../../common/napi-rs";
 
-import { ReturnData } from "../provider/return-data";
-import { ExitCode } from "../provider/vm/exit";
+const { SolidityTracer } = requireNapiRsModule(
+  "@nomicfoundation/edr"
+) as typeof import("@nomicfoundation/edr");
 
-import {
-  ErrorInferrer,
-  instructionToCallstackStackTraceEntry,
-  SubmessageData,
-} from "./error-inferrer";
-import {
-  adjustStackTrace,
-  stackTraceMayRequireAdjustments,
-} from "./mapped-inlined-internal-functions-heuristics";
-import {
-  DecodedCallMessageTrace,
-  DecodedCreateMessageTrace,
-  DecodedEvmMessageTrace,
-  EvmMessageTrace,
-  EvmStep,
-  isCreateTrace,
-  isDecodedCallTrace,
-  isDecodedCreateTrace,
-  isEvmStep,
-  isPrecompileTrace,
-  MessageTrace,
-  PrecompileMessageTrace,
-} from "./message-trace";
-import { Instruction, JumpType } from "./model";
-import { Opcode } from "./opcodes";
-import {
-  SolidityStackTrace,
-  SolidityStackTraceEntry,
-  StackTraceEntryType,
-} from "./solidity-stack-trace";
-
-export class SolidityTracer {
-  private _errorInferrer = new ErrorInferrer();
-
-  public getStackTrace(
-    maybeDecodedMessageTrace: MessageTrace
-  ): SolidityStackTrace {
-    if (!maybeDecodedMessageTrace.exit.isError()) {
-      return [];
-    }
-
-    if (isPrecompileTrace(maybeDecodedMessageTrace)) {
-      return this._getPrecompileMessageStackTrace(maybeDecodedMessageTrace);
-    }
-
-    if (isDecodedCreateTrace(maybeDecodedMessageTrace)) {
-      return this._getCreateMessageStackTrace(maybeDecodedMessageTrace);
-    }
-
-    if (isDecodedCallTrace(maybeDecodedMessageTrace)) {
-      return this._getCallMessageStackTrace(maybeDecodedMessageTrace);
-    }
-
-    return this._getUnrecognizedMessageStackTrace(maybeDecodedMessageTrace);
-  }
-
-  private _getCallMessageStackTrace(
-    trace: DecodedCallMessageTrace
-  ): SolidityStackTrace {
-    const inferredError =
-      this._errorInferrer.inferBeforeTracingCallMessage(trace);
-
-    if (inferredError !== undefined) {
-      return inferredError;
-    }
-
-    return this._traceEvmExecution(trace);
-  }
-
-  private _getUnrecognizedMessageStackTrace(
-    trace: EvmMessageTrace
-  ): SolidityStackTrace {
-    const subtrace = this._getLastSubtrace(trace);
-
-    if (subtrace !== undefined) {
-      // This is not a very exact heuristic, but most of the time it will be right, as solidity
-      // reverts if a call fails, and most contracts are in solidity
-      if (
-        subtrace.exit.isError() &&
-        equalsBytes(trace.returnData, subtrace.returnData)
-      ) {
-        let unrecognizedEntry: SolidityStackTraceEntry;
-
-        if (isCreateTrace(trace)) {
-          unrecognizedEntry = {
-            type: StackTraceEntryType.UNRECOGNIZED_CREATE_CALLSTACK_ENTRY,
-          };
-        } else {
-          unrecognizedEntry = {
-            type: StackTraceEntryType.UNRECOGNIZED_CONTRACT_CALLSTACK_ENTRY,
-            address: trace.address,
-          };
-        }
-
-        return [unrecognizedEntry, ...this.getStackTrace(subtrace)];
-      }
-    }
-
-    if (trace.exit.kind === ExitCode.CODESIZE_EXCEEDS_MAXIMUM) {
-      return [
-        {
-          type: StackTraceEntryType.CONTRACT_TOO_LARGE_ERROR,
-        },
-      ];
-    }
-
-    const isInvalidOpcodeError = trace.exit.kind === ExitCode.INVALID_OPCODE;
-
-    if (isCreateTrace(trace)) {
-      return [
-        {
-          type: StackTraceEntryType.UNRECOGNIZED_CREATE_ERROR,
-          message: new ReturnData(trace.returnData),
-          isInvalidOpcodeError,
-        },
-      ];
-    }
-
-    return [
-      {
-        type: StackTraceEntryType.UNRECOGNIZED_CONTRACT_ERROR,
-        address: trace.address,
-        message: new ReturnData(trace.returnData),
-        isInvalidOpcodeError,
-      },
-    ];
-  }
-
-  private _getCreateMessageStackTrace(
-    trace: DecodedCreateMessageTrace
-  ): SolidityStackTrace {
-    const inferredError =
-      this._errorInferrer.inferBeforeTracingCreateMessage(trace);
-
-    if (inferredError !== undefined) {
-      return inferredError;
-    }
-
-    return this._traceEvmExecution(trace);
-  }
-
-  private _getPrecompileMessageStackTrace(
-    trace: PrecompileMessageTrace
-  ): SolidityStackTrace {
-    return [
-      {
-        type: StackTraceEntryType.PRECOMPILE_ERROR,
-        precompile: trace.precompile,
-      },
-    ];
-  }
-
-  private _traceEvmExecution(
-    trace: DecodedEvmMessageTrace
-  ): SolidityStackTrace {
-    const stackTrace = this._rawTraceEvmExecution(trace);
-
-    if (stackTraceMayRequireAdjustments(stackTrace, trace)) {
-      return adjustStackTrace(stackTrace, trace);
-    }
-
-    return stackTrace;
-  }
-
-  private _rawTraceEvmExecution(
-    trace: DecodedEvmMessageTrace
-  ): SolidityStackTrace {
-    const stacktrace: SolidityStackTrace = [];
-
-    let subtracesSeen = 0;
-
-    // There was a jump into a function according to the sourcemaps
-    let jumpedIntoFunction = false;
-
-    const functionJumpdests: Instruction[] = [];
-
-    let lastSubmessageData: SubmessageData | undefined;
-
-    for (let stepIndex = 0; stepIndex < trace.steps.length; stepIndex++) {
-      const step = trace.steps[stepIndex];
-      const nextStep = trace.steps[stepIndex + 1];
-
-      if (isEvmStep(step)) {
-        const inst = trace.bytecode.getInstruction(step.pc);
-
-        if (
-          inst.jumpType === JumpType.INTO_FUNCTION &&
-          nextStep !== undefined
-        ) {
-          const nextEvmStep = nextStep as EvmStep; // A jump can't be followed by a subtrace
-          const nextInst = trace.bytecode.getInstruction(nextEvmStep.pc);
-
-          if (nextInst !== undefined && nextInst.opcode === Opcode.JUMPDEST) {
-            stacktrace.push(
-              instructionToCallstackStackTraceEntry(trace.bytecode, inst)
-            );
-            if (nextInst.location !== undefined) {
-              jumpedIntoFunction = true;
-            }
-            functionJumpdests.push(nextInst);
-          }
-        } else if (inst.jumpType === JumpType.OUTOF_FUNCTION) {
-          stacktrace.pop();
-          functionJumpdests.pop();
-        }
-      } else {
-        subtracesSeen += 1;
-
-        // If there are more subtraces, this one didn't terminate the execution
-        if (subtracesSeen < trace.numberOfSubtraces) {
-          continue;
-        }
-
-        const submessageTrace = this.getStackTrace(step);
-
-        lastSubmessageData = {
-          messageTrace: step,
-          stepIndex,
-          stacktrace: submessageTrace,
-        };
-      }
-    }
-
-    const stacktraceWithInferredError = this._errorInferrer.inferAfterTracing(
-      trace,
-      stacktrace,
-      functionJumpdests,
-      jumpedIntoFunction,
-      lastSubmessageData
-    );
-
-    return this._errorInferrer.filterRedundantFrames(
-      stacktraceWithInferredError
-    );
-  }
-
-  private _getLastSubtrace(trace: EvmMessageTrace): MessageTrace | undefined {
-    if (trace.numberOfSubtraces < 1) {
-      return undefined;
-    }
-
-    let i = trace.steps.length - 1;
-
-    while (isEvmStep(trace.steps[i])) {
-      i -= 1;
-    }
-
-    return trace.steps[i] as MessageTrace;
-  }
-}
+export { SolidityTracer };
diff --git a/src/internal/hardhat-network/stack-traces/source-maps.ts b/src/internal/hardhat-network/stack-traces/source-maps.ts
deleted file mode 100644
index 8ff03b3c7337cb0da035004844c850bf89745669..0000000000000000000000000000000000000000
diff --git a/src/internal/hardhat-network/stack-traces/vm-trace-decoder.ts b/src/internal/hardhat-network/stack-traces/vm-trace-decoder.ts
index 738427290fa82e7e861ae984c4785eaedbe8e2fb..a0bf98769b1613769487f65f63f5ec492dfa2682 100644
--- a/src/internal/hardhat-network/stack-traces/vm-trace-decoder.ts
+++ b/src/internal/hardhat-network/stack-traces/vm-trace-decoder.ts
@@ -1,121 +1,22 @@
+import type { VmTraceDecoder as VmTraceDecoderT } from "@nomicfoundation/edr";
 import chalk from "chalk";
 import debug from "debug";
 import { Reporter } from "../../sentry/reporter";
 import { TracingConfig } from "../provider/node-types";
-import { createModelsAndDecodeBytecodes } from "./compiler-to-model";
-import { ContractsIdentifier } from "./contracts-identifier";
-import {
-  isCreateTrace,
-  isEvmStep,
-  isPrecompileTrace,
-  MessageTrace,
-} from "./message-trace";
-import { Bytecode, ContractFunctionType } from "./model";
-import {
-  FALLBACK_FUNCTION_NAME,
-  RECEIVE_FUNCTION_NAME,
-  UNRECOGNIZED_CONTRACT_NAME,
-  UNRECOGNIZED_FUNCTION_NAME,
-} from "./solidity-stack-trace";
+import { requireNapiRsModule } from "../../../common/napi-rs";
 
 const log = debug("hardhat:core:hardhat-network:node");
 
-export class VmTraceDecoder {
-  constructor(private readonly _contractsIdentifier: ContractsIdentifier) {}
+const { VmTraceDecoder, initializeVmTraceDecoder } = requireNapiRsModule(
+  "@nomicfoundation/edr"
+) as typeof import("@nomicfoundation/edr");
 
-  public getContractAndFunctionNamesForCall(
-    code: Buffer,
-    calldata?: Buffer
-  ): { contractName: string; functionName?: string } {
-    const isCreate = calldata === undefined;
-    const bytecode = this._contractsIdentifier.getBytecodeForCall(
-      code,
-      isCreate
-    );
-
-    const contractName = bytecode?.contract.name ?? UNRECOGNIZED_CONTRACT_NAME;
-
-    if (isCreate) {
-      return {
-        contractName,
-      };
-    } else {
-      if (bytecode === undefined) {
-        return {
-          contractName,
-          functionName: "",
-        };
-      } else {
-        const func = bytecode.contract.getFunctionFromSelector(
-          calldata.slice(0, 4)
-        );
-
-        const functionName: string =
-          func === undefined
-            ? UNRECOGNIZED_FUNCTION_NAME
-            : func.type === ContractFunctionType.FALLBACK
-            ? FALLBACK_FUNCTION_NAME
-            : func.type === ContractFunctionType.RECEIVE
-            ? RECEIVE_FUNCTION_NAME
-            : func.name;
-
-        return {
-          contractName,
-          functionName,
-        };
-      }
-    }
-  }
-
-  public tryToDecodeMessageTrace(messageTrace: MessageTrace): MessageTrace {
-    if (isPrecompileTrace(messageTrace)) {
-      return messageTrace;
-    }
-
-    return {
-      ...messageTrace,
-      bytecode: this._contractsIdentifier.getBytecodeForCall(
-        messageTrace.code,
-        isCreateTrace(messageTrace)
-      ),
-      steps: messageTrace.steps.map((s) =>
-        isEvmStep(s) ? s : this.tryToDecodeMessageTrace(s)
-      ),
-    };
-  }
-
-  public addBytecode(bytecode: Bytecode) {
-    this._contractsIdentifier.addBytecode(bytecode);
-  }
-}
-
-export function initializeVmTraceDecoder(
-  vmTraceDecoder: VmTraceDecoder,
+function initializeVmTraceDecoderWrapper(
+  vmTraceDecoder: VmTraceDecoderT,
   tracingConfig: TracingConfig
 ) {
-  if (tracingConfig.buildInfos === undefined) {
-    return;
-  }
-
   try {
-    for (const buildInfo of tracingConfig.buildInfos) {
-      const bytecodes = createModelsAndDecodeBytecodes(
-        buildInfo.solcVersion,
-        buildInfo.input,
-        buildInfo.output
-      );
-
-      for (const bytecode of bytecodes) {
-        if (
-          tracingConfig.ignoreContracts === true &&
-          bytecode.contract.name.startsWith("Ignored")
-        ) {
-          continue;
-        }
-
-        vmTraceDecoder.addBytecode(bytecode);
-      }
-    }
+    initializeVmTraceDecoder(vmTraceDecoder, tracingConfig);
   } catch (error) {
     console.warn(
       chalk.yellow(
@@ -124,7 +25,7 @@ export function initializeVmTraceDecoder(
     );
 
     log(
-      "Hardhat Network tracing disabled: ContractsIdentifier failed to be initialized. Please report this to help us improve Hardhat.\n",
+      "Hardhat Network tracing disabled: VmTraceDecoder failed to be initialized. Please report this to help us improve Hardhat.\n",
       error
     );
 
@@ -133,3 +34,9 @@ export function initializeVmTraceDecoder(
     }
   }
 }
+
+export {
+  VmTraceDecoder,
+  VmTraceDecoderT,
+  initializeVmTraceDecoderWrapper as initializeVmTraceDecoder,
+};
diff --git a/src/internal/hardhat-network/stack-traces/vm-tracer.ts b/src/internal/hardhat-network/stack-traces/vm-tracer.ts
index 520573ab34cbc0d421af7ddccd2ff90f46f345e9..97d8bf6a55e659872d24a5b16c1ad7caccc5a3f6 100644
--- a/src/internal/hardhat-network/stack-traces/vm-tracer.ts
+++ b/src/internal/hardhat-network/stack-traces/vm-tracer.ts
@@ -1,208 +1,7 @@
-import type {
-  CreateOutput,
-  ExecutionResult,
-  TracingMessage,
-  TracingStep,
-} from "@nomicfoundation/edr";
+import { requireNapiRsModule } from "../../../common/napi-rs";
 
-import { bytesToBigInt } from "@nomicfoundation/ethereumjs-util";
+const { VmTracer } = requireNapiRsModule(
+  "@nomicfoundation/edr"
+) as typeof import("@nomicfoundation/edr");
 
-import { assertHardhatInvariant } from "../../core/errors";
-import { Exit, ExitCode } from "../provider/vm/exit";
-
-import {
-  CallMessageTrace,
-  CreateMessageTrace,
-  isCreateTrace,
-  isHaltResult,
-  isPrecompileTrace,
-  isSuccessResult,
-  MessageTrace,
-  PrecompileMessageTrace,
-} from "./message-trace";
-
-/* eslint-disable @nomicfoundation/hardhat-internal-rules/only-hardhat-error */
-
-const DUMMY_RETURN_DATA = Buffer.from([]);
-const DUMMY_GAS_USED = 0n;
-
-/**
- * Consumes the incoming VM trace events, until an error occurs, to keep track
- * of the last top level message trace/error.
- */
-export class VMTracer {
-  public tracingSteps: TracingStep[] = [];
-
-  private _messageTraces: MessageTrace[] = [];
-  private _lastError: Error | undefined;
-  private _maxPrecompileNumber;
-
-  constructor() {
-    // TODO: temporarily hardcoded to remove the need of using ethereumjs' common and evm here
-    this._maxPrecompileNumber = 10;
-  }
-
-  public getLastTopLevelMessageTrace(): MessageTrace | undefined {
-    return this._messageTraces[0];
-  }
-
-  public getLastError(): Error | undefined {
-    return this._lastError;
-  }
-
-  private _shouldKeepTracing() {
-    return this._lastError === undefined;
-  }
-
-  public addBeforeMessage(message: TracingMessage) {
-    if (!this._shouldKeepTracing()) {
-      return;
-    }
-
-    try {
-      let trace: MessageTrace;
-
-      if (message.depth === 0) {
-        this._messageTraces = [];
-        this.tracingSteps = [];
-      }
-
-      if (message.to === undefined) {
-        const createTrace: CreateMessageTrace = {
-          code: message.data,
-          steps: [],
-          value: message.value,
-          exit: new Exit(ExitCode.SUCCESS),
-          returnData: DUMMY_RETURN_DATA,
-          numberOfSubtraces: 0,
-          depth: message.depth,
-          deployedContract: undefined,
-          gasUsed: DUMMY_GAS_USED,
-        };
-
-        trace = createTrace;
-      } else {
-        const toAsBigInt = bytesToBigInt(message.to);
-
-        if (toAsBigInt > 0 && toAsBigInt <= this._maxPrecompileNumber) {
-          const precompileTrace: PrecompileMessageTrace = {
-            precompile: Number(toAsBigInt),
-            calldata: message.data,
-            value: message.value,
-            exit: new Exit(ExitCode.SUCCESS),
-            returnData: DUMMY_RETURN_DATA,
-            depth: message.depth,
-            gasUsed: DUMMY_GAS_USED,
-          };
-
-          trace = precompileTrace;
-        } else {
-          const codeAddress = message.codeAddress;
-
-          // if we enter here, then `to` is not undefined, therefore
-          // `codeAddress` and `code` should be defined
-          assertHardhatInvariant(
-            codeAddress !== undefined,
-            "codeAddress should be defined"
-          );
-          assertHardhatInvariant(
-            message.code !== undefined,
-            "code should be defined"
-          );
-
-          const callTrace: CallMessageTrace = {
-            code: message.code,
-            calldata: message.data,
-            steps: [],
-            value: message.value,
-            exit: new Exit(ExitCode.SUCCESS),
-            returnData: DUMMY_RETURN_DATA,
-            address: message.to,
-            numberOfSubtraces: 0,
-            depth: message.depth,
-            gasUsed: DUMMY_GAS_USED,
-            codeAddress,
-          };
-
-          trace = callTrace;
-        }
-      }
-
-      if (this._messageTraces.length > 0) {
-        const parentTrace = this._messageTraces[this._messageTraces.length - 1];
-
-        if (isPrecompileTrace(parentTrace)) {
-          throw new Error(
-            "This should not happen: message execution started while a precompile was executing"
-          );
-        }
-
-        parentTrace.steps.push(trace);
-        parentTrace.numberOfSubtraces += 1;
-      }
-
-      this._messageTraces.push(trace);
-    } catch (error) {
-      this._lastError = error as Error;
-    }
-  }
-
-  public addStep(step: TracingStep) {
-    if (!this._shouldKeepTracing()) {
-      return;
-    }
-
-    this.tracingSteps.push(step);
-
-    try {
-      const trace = this._messageTraces[this._messageTraces.length - 1];
-
-      if (isPrecompileTrace(trace)) {
-        throw new Error(
-          "This should not happen: step event fired while a precompile was executing"
-        );
-      }
-
-      trace.steps.push({ pc: Number(step.pc) });
-    } catch (error) {
-      this._lastError = error as Error;
-    }
-  }
-
-  public addAfterMessage(result: ExecutionResult) {
-    if (!this._shouldKeepTracing()) {
-      return;
-    }
-
-    try {
-      const trace = this._messageTraces[this._messageTraces.length - 1];
-      trace.gasUsed = result.result.gasUsed;
-
-      const executionResult = result.result;
-      if (isSuccessResult(executionResult)) {
-        trace.exit = Exit.fromEdrSuccessReason(executionResult.reason);
-        trace.returnData = executionResult.output.returnValue;
-
-        if (isCreateTrace(trace)) {
-          trace.deployedContract = (
-            executionResult.output as CreateOutput
-          ).address;
-        }
-      } else if (isHaltResult(executionResult)) {
-        trace.exit = Exit.fromEdrExceptionalHalt(executionResult.reason);
-
-        trace.returnData = Buffer.from([]);
-      } else {
-        trace.exit = new Exit(ExitCode.REVERT);
-
-        trace.returnData = executionResult.output;
-      }
-
-      if (this._messageTraces.length > 1) {
-        this._messageTraces.pop();
-      }
-    } catch (error) {
-      this._lastError = error as Error;
-    }
-  }
-}
+export { VmTracer as VMTracer };
diff --git a/src/internal/lib/hardhat-lib.ts b/src/internal/lib/hardhat-lib.ts
index d0dc6c44885bdff0ae1e84f5d26db1ebf9a41768..4ac144e060c5f25b7f4dfa3de3f03d96669df685 100644
--- a/src/internal/lib/hardhat-lib.ts
+++ b/src/internal/lib/hardhat-lib.ts
@@ -42,7 +42,6 @@ if (HardhatContext.isCreated()) {
     ctx.tasksDSL.getTaskDefinitions(),
     ctx.tasksDSL.getScopesDefinitions(),
     ctx.environmentExtenders,
-    ctx.experimentalHardhatNetworkMessageTraceHooks,
     userConfig,
     ctx.providerExtenders
   );
diff --git a/src/register.ts b/src/register.ts
index 7ef908a3217ccf2e52e591f653529aca0301d19e..37cc7159b9a89f2dcc7b5dafed0b80b4c994f30e 100644
--- a/src/register.ts
+++ b/src/register.ts
@@ -44,7 +44,6 @@ if (!HardhatContext.isCreated()) {
     ctx.tasksDSL.getTaskDefinitions(),
     ctx.tasksDSL.getScopesDefinitions(),
     ctx.environmentExtenders,
-    ctx.experimentalHardhatNetworkMessageTraceHooks,
     userConfig,
     ctx.providerExtenders
   );
diff --git a/src/types/experimental.ts b/src/types/experimental.ts
deleted file mode 100644
index 1c51706924a033a5953e7ab60df01019a1940b79..0000000000000000000000000000000000000000
diff --git a/src/types/index.ts b/src/types/index.ts
index 3f7d1f4f2a306d85cbf01b68059b8f3f3d54b549..47a3ab37c73119d9beb59b2c6d366460feb89b55 100644
--- a/src/types/index.ts
+++ b/src/types/index.ts
@@ -1,5 +1,4 @@
 export * from "./config";
-export * from "./experimental";
 export * from "./provider";
 export * from "./runtime";
 export * from "./artifacts";
diff --git a/types/index.d.ts b/types/index.d.ts
index 69a627e4870290dcd6e19333dd9a0ac60e641a4c..d24b32dc6f4d43b12d79725acd67345700bbe746 100644
--- a/types/index.d.ts
+++ b/types/index.d.ts
@@ -1,5 +1,4 @@
 export * from "./config";
-export * from "./experimental";
 export * from "./provider";
 export * from "./runtime";
 export * from "./artifacts";
diff --git a/types/index.d.ts.map b/types/index.d.ts.map
index 9c82310df19504a779e990cbef17efbb53bc1c3f..b3d350533f050be54ebd1d9d7b3f2a5764666f0c 100644
--- a/types/index.d.ts.map
+++ b/types/index.d.ts.map
@@ -1 +1 @@
-{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/types/index.ts"],"names":[],"mappings":"AAAA,cAAc,UAAU,CAAC;AACzB,cAAc,gBAAgB,CAAC;AAC/B,cAAc,YAAY,CAAC;AAC3B,cAAc,WAAW,CAAC;AAC1B,cAAc,aAAa,CAAC;AAC5B,cAAc,iBAAiB,CAAC"}
\ No newline at end of file
+{"version":3,"file":"index.d.ts","sourceRoot":"","sources":["../src/types/index.ts"],"names":[],"mappings":"AAAA,cAAc,UAAU,CAAC;AACzB,cAAc,YAAY,CAAC;AAC3B,cAAc,WAAW,CAAC;AAC1B,cAAc,aAAa,CAAC;AAC5B,cAAc,iBAAiB,CAAC"}
\ No newline at end of file
diff --git a/types/index.js b/types/index.js
index 9538c74e427c7aa105b7e20b63623a9019ac905e..625fb9d4edc5b55728d3b729c3d8c4d1802d7ecf 100644
--- a/types/index.js
+++ b/types/index.js
@@ -15,7 +15,6 @@ var __exportStar = (this && this.__exportStar) || function(m, exports) {
 };
 Object.defineProperty(exports, "__esModule", { value: true });
 __exportStar(require("./config"), exports);
-__exportStar(require("./experimental"), exports);
 __exportStar(require("./provider"), exports);
 __exportStar(require("./runtime"), exports);
 __exportStar(require("./artifacts"), exports);
diff --git a/types/index.js.map b/types/index.js.map
index d293f3bf3b0724392bcfa2e04164f282b5a34be2..1306c32271be6f160dc336acc80c44b178942999 100644
--- a/types/index.js.map
+++ b/types/index.js.map
@@ -1 +1 @@
-{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/types/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,2CAAyB;AACzB,iDAA+B;AAC/B,6CAA2B;AAC3B,4CAA0B;AAC1B,8CAA4B;AAC5B,kDAAgC"}
\ No newline at end of file
+{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/types/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAAA,2CAAyB;AACzB,6CAA2B;AAC3B,4CAA0B;AAC1B,8CAA4B;AAC5B,kDAAgC"}
